{
  "audiogen/dia": {
    "name": "audiogen/dia",
    "schema": {
      "type": "object",
      "title": "Input",
      "required": [
        "text"
      ],
      "linkto": {
        "*": "*"
      },
      "map": {
        "audio_prompt": "audio"
      },
      "poromptField": "text",
      "properties": {
        "seed": {
          "type": "integer",
          "title": "Seed",
          "x-order": 8,
          "description": "Random seed for reproducible results. Use the same seed value to get the same output for identical inputs. Leave blank for random results each time."
        },
        "text": {
          "type": "string",
          "title": "Text",
          "x-order": 0,
          "default": "[S1] Thank you for coming to GenVR !!! Oh fire! Oh my god.\n[S2] Everybody stay calm!!! [S1] Yes! Yes! Let's try (laughs)\n[S2] (whispers) try it now (whispers)",
          "description": "Input text for dialogue generation. Use [S1], [S2] to indicate different speakers and (description) in parentheses for non-verbal cues e.g., (laughs), (whispers)."
        },
        "top_p": {
          "type": "number",
          "title": "Top P",
          "default": 0.95,
          "maximum": 1,
          "minimum": 0.1,
          "x-order": 5,
          "display": "hidden",
          "description": "Controls diversity of word choice. Higher values include more unusual options. Most users shouldn't need to adjust this parameter."
        },
        "cfg_scale": {
          "type": "number",
          "title": "Cfg Scale",
          "default": 3,
          "maximum": 5,
          "minimum": 1,
          "x-order": 3,
          "display": "hidden",
          "description": "Controls how closely the audio follows your text. Higher values (3-5) follow text more strictly; lower values may sound more natural but deviate more."
        },
        "temperature": {
          "type": "number",
          "title": "Temperature",
          "default": 1.3,
          "maximum": 2,
          "minimum": 0.1,
          "x-order": 4,
          "display": "hidden",
          "description": "Controls randomness in generation. Higher values (1.3-2.0) increase variety; lower values (0.1-0.9) make output more consistent and predictable."
        },
        "audio_prompt": {
          "type": "string",
          "title": "Audio Prompt",
          "format": "uri",
          "x-order": 1,
          "description": "Optional audio file (.wav/.mp3/.flac) for voice cloning. The model will attempt to mimic this voice style."
        },
        "speed_factor": {
          "type": "number",
          "title": "Speed Factor",
          "default": 0.94,
          "maximum": 1.5,
          "minimum": 0.5,
          "x-order": 7,
          "display": "hidden",
          "description": "Adjusts playback speed of the generated audio. Values below 1.0 slow down the audio; 1.0 is original speed."
        },
        "max_new_tokens": {
          "type": "integer",
          "title": "Max New Tokens",
          "default": 3072,
          "maximum": 4096,
          "minimum": 500,
          "x-order": 2,
          "display": "hidden",
          "description": "Controls the length of generated audio. Higher values create longer audio. (86 tokens ≈ 1 second of audio)."
        },
        "cfg_filter_top_k": {
          "type": "integer",
          "title": "Cfg Filter Top K",
          "default": 35,
          "maximum": 100,
          "minimum": 10,
          "x-order": 6,
          "display": "hidden",
          "description": "Technical parameter for filtering audio generation tokens. Higher values allow more diverse sounds; lower values create more consistent audio."
        }
      }
    }
  },
  "audiogen/elevenlabs_sound_effects": {
    "name": "audiogen/elevenlabs_sound_effects",
    "schema": {
      "type": "object",
      "title": "Input",
      "required": [
        "text"
      ],
      "translatable": [
        "text"
      ],
      "speech_enabled": [
        "text"
      ],
      "linkto": {
        "*": "*"
      },
      "map": {
        "text": "prompt"
      },
      "poromptField": "text",
      "properties": {
        "text": {
          "type": "string",
          "title": "Text String",
          "description": "The text describing the sound effect to generate",
          "x-order": 0
        },
        "duration_seconds": {
          "type": "number",
          "title": "Duration Seconds",
          "description": "Duration in seconds (0.5-22). If None, optimal duration will be determined from prompt",
          "minimum": 0.5,
          "maximum": 22,
          "step": 0.5,
          "default": 0.5,
          "x-order": 1
        },
        "prompt_influence": {
          "type": "number",
          "title": "Prompt Influence",
          "description": "How closely to follow the prompt (0-1). Higher values mean less variation",
          "minimum": 0,
          "maximum": 1,
          "default": 0.3,
          "x-order": 2
        }
      }
    }
  },
  "audiogen/elevenlabs_sound_effects2": {
    "name": "audiogen/elevenlabs_sound_effects2",
    "schema": {
      "type": "object",
      "title": "Input",
      "required": [
        "text"
      ],
      "translatable": [
        "text"
      ],
      "speech_enabled": [
        "text"
      ],
      "linkto": {
        "*": "*"
      },
      "map": {
        "text": "prompt"
      },
      "poromptField": "text",
      "properties": {
        "text": {
          "type": "string",
          "title": "Text String",
          "description": "The text describing the sound effect to generate",
          "x-order": 0
        },
        "duration_seconds": {
          "type": "number",
          "title": "Duration Seconds",
          "description": "Duration in seconds (0.5-22). If None, optimal duration will be determined from prompt",
          "minimum": 0.5,
          "maximum": 30,
          "step": 0.5,
          "default": 0.5,
          "x-order": 1
        },
        "prompt_influence": {
          "type": "number",
          "title": "Prompt Influence",
          "description": "How closely to follow the prompt (0-1). Higher values mean less variation",
          "minimum": 0,
          "maximum": 1,
          "default": 0.3,
          "x-order": 2
        }
      }
    }
  },
  "audiogen/minimax_speech_02_hd": {
    "name": "audiogen/minimax_speech_02_hd",
    "schema": {
      "type": "object",
      "title": "Input",
      "required": [
        "text"
      ],
      "translatable": [
        "text"
      ],
      "speech_enabled": [
        "text"
      ],
      "linkto": {
        "*": "*"
      },
      "map": {
        "text": "prompt"
      },
      "poromptField": "text",
      "properties": {
        "text": {
          "type": "string",
          "title": "Text",
          "x-order": 0,
          "description": "Text to convert to speech. Every character is 1 token. Maximum 5000 characters. Use <#x#> between words to control pause duration (0.01-99.99s)."
        },
        "pitch": {
          "type": "integer",
          "title": "Pitch",
          "default": 0,
          "maximum": 12,
          "minimum": -12,
          "x-order": 4,
          "description": "Speech pitch"
        },
        "speed": {
          "type": "number",
          "title": "Speed",
          "default": 1,
          "maximum": 2,
          "minimum": 0.5,
          "x-order": 2,
          "description": "Speech speed"
        },
        "volume": {
          "type": "number",
          "title": "Volume",
          "default": 1,
          "maximum": 10,
          "minimum": 0,
          "x-order": 3,
          "description": "Speech volume"
        },
        "bitrate": {
          "enum": [
            32000,
            64000,
            128000,
            256000
          ],
          "type": "integer",
          "title": "bitrate",
          "description": "Bitrate for the generated speech",
          "default": 128000,
          "x-order": 8
        },
        "channel": {
          "enum": [
            "mono",
            "stereo"
          ],
          "type": "string",
          "title": "channel",
          "description": "Number of audio channels",
          "default": "mono",
          "x-order": 9
        },
        "emotion": {
          "enum": [
            "neutral",
            "happy",
            "sad",
            "angry",
            "fearful",
            "disgusted",
            "surprised"
          ],
          "type": "string",
          "title": "emotion",
          "description": "Speech emotion",
          "default": "neutral",
          "x-order": 5
        },
        "voice_id": {
          "type": "string",
          "title": "Voice Id",
          "default": "Wise_Woman",
          "x-order": 1,
          "enum": [
            "Wise_Woman",
            "Friendly_Person",
            "Inspirational_girl",
            "Deep_Voice_Man",
            "Calm_Woman",
            "Casual_Guy",
            "Lively_Girl",
            "Patient_Man",
            "Young_Knight",
            "Determined_Man",
            "Lovely_Girl",
            "Decent_Boy",
            "Imposing_Manner",
            "Elegant_Man",
            "Abbess",
            "Sweet_Girl_2",
            "Exuberant_Girl"
          ],
          "description": "Desired voice ID. Use one of the following system voice."
        },
        "sample_rate": {
          "enum": [
            8000,
            16000,
            22050,
            24000,
            32000,
            44100
          ],
          "type": "integer",
          "title": "sample_rate",
          "description": "Sample rate for the generated speech",
          "default": 32000,
          "x-order": 7
        },
        "language_boost": {
          "enum": [
            "None",
            "Automatic",
            "Chinese",
            "Chinese,Yue",
            "English",
            "Arabic",
            "Russian",
            "Spanish",
            "French",
            "Portuguese",
            "German",
            "Turkish",
            "Dutch",
            "Ukrainian",
            "Vietnamese",
            "Indonesian",
            "Japanese",
            "Italian",
            "Korean",
            "Thai",
            "Polish",
            "Romanian",
            "Greek",
            "Czech",
            "Finnish",
            "Hindi"
          ],
          "type": "string",
          "title": "language_boost",
          "description": "Enhance recognition of specific languages and dialects",
          "default": "None",
          "x-order": 10
        },
        "english_normalization": {
          "type": "boolean",
          "title": "English Normalization",
          "default": false,
          "x-order": 6,
          "description": "Enable English text normalization for better number reading (slightly increases latency)"
        }
      }
    }
  },
  "audiogen/ace_step_text2music": {
    "name": "audiogen/ace_step_text2music",
    "schema": {
      "type": "object",
      "title": "Input",
      "required": [
        "tags"
      ],
      "linkto": {
        "*": "*"
      },
      "map": {},
      "properties": {
        "seed": {
          "type": "integer",
          "title": "Seed",
          "default": -1,
          "x-order": 4,
          "description": "Random seed. Set to -1 to randomize."
        },
        "tags": {
          "type": "string",
          "title": "Tags",
          "x-order": 0,
          "description": "Text prompts to guide music generation, e.g., 'epic,cinematic'"
        },
        "lyrics": {
          "type": "string",
          "title": "Lyrics",
          "default": "[verse] \nWoke up in a city that's always alive\nNeon lights they shimmer they thrive\nElectric pulses beat they drive\nMy heart races just to survive\n\n[chorus] \nOh electric dreams they keep me high\nThrough the wires I soar and fly\nMidnight rhythms in the sky\nElectric dreams together we will defy\n\n[verse] \nLost in the labyrinth of screens\nVirtual love or so it seems\nIn the night the city gleams\nDigital faces haunted by memes\n\n[chorus] \nOh electric dreams they keep me high\nThrough the wires I soar and fly\nMidnight rhythms in the sky\nElectric dreams together we will defy\n\n[bridge] \nSilent whispers in my ear\nPixelated love serene and clear\nThrough the chaos find you near\nIn electric dreams no fear\n\n[verse]\nBound by circuits intertwined\nLove like ours is hard to find\nIn this world we are truly blind\nBut electric dreams free the mind",
          "x-order": 1,
          "description": "Lyrics for the music. Use [verse], [chorus], and [bridge] to separate different parts of the lyrics. Use [instrumental] or [inst] to generate instrumental music"
        },
        "duration": {
          "type": "number",
          "title": "Duration",
          "default": 60,
          "maximum": 240,
          "minimum": 1,
          "x-order": 2,
          "description": "Duration of the generated audio in seconds. -1 means a random duration between 30 and 240 seconds."
        },
        "scheduler": {
          "enum": [
            "euler",
            "heun"
          ],
          "type": "string",
          "title": "scheduler",
          "description": "Scheduler type.",
          "default": "euler",
          "x-order": 5,
          "display": "hidden"
        },
        "guidance_type": {
          "enum": [
            "apg",
            "cfg",
            "cfg_star"
          ],
          "type": "string",
          "title": "guidance_type",
          "description": "Guidance type for CFG.",
          "default": "apg",
          "x-order": 6,
          "display": "hidden"
        },
        "guidance_scale": {
          "type": "number",
          "title": "Guidance Scale",
          "default": 15,
          "maximum": 30,
          "minimum": 0,
          "x-order": 10,
          "description": "Overall guidance scale."
        },
        "number_of_steps": {
          "type": "integer",
          "title": "Number Of Steps",
          "default": 60,
          "maximum": 200,
          "minimum": 10,
          "x-order": 3,
          "description": "Number of inference steps."
        },
        "granularity_scale": {
          "type": "number",
          "title": "Granularity Scale",
          "default": 10,
          "maximum": 100,
          "minimum": -100,
          "x-order": 7,
          "display": "hidden",
          "description": "Omega scale for APG guidance, or similar for other CFG types."
        },
        "guidance_interval": {
          "type": "number",
          "title": "Guidance Interval",
          "default": 0.5,
          "maximum": 1,
          "minimum": 0,
          "x-order": 8,
          "display": "hidden",
          "description": "Guidance interval."
        },
        "min_guidance_scale": {
          "type": "number",
          "title": "Min Guidance Scale",
          "default": 3,
          "maximum": 100,
          "minimum": 0,
          "x-order": 11,
          "display": "hidden",
          "description": "Minimum guidance scale."
        },
        "tag_guidance_scale": {
          "type": "number",
          "title": "Tag Guidance Scale",
          "default": 0,
          "maximum": 10,
          "minimum": 0,
          "x-order": 12,
          "display": "hidden",
          "description": "Guidance scale for tags (text prompt)."
        },
        "lyric_guidance_scale": {
          "type": "number",
          "title": "Lyric Guidance Scale",
          "default": 0,
          "maximum": 10,
          "minimum": 0,
          "x-order": 13,
          "display": "hidden",
          "description": "Guidance scale for lyrics."
        },
        "guidance_interval_decay": {
          "type": "number",
          "title": "Guidance Interval Decay",
          "default": 0,
          "maximum": 1,
          "minimum": 0,
          "x-order": 9,
          "display": "hidden",
          "description": "Guidance interval decay."
        }
      }
    }
  },
  "audiogen/google_lyria2": {
    "name": "audiogen/google_lyria2",
    "schema": {
      "type": "object",
      "title": "Input",
      "required": [
        "prompt"
      ],
      "translatable": [
        "prompt"
      ],
      "speech_enabled": [
        "prompt"
      ],
      "linkto": {
        "*": "*"
      },
      "map": {
        "prompt": "prompt"
      },
      "poromptField": "prompt",
      "properties": {
        "seed": {
          "type": "integer",
          "title": "Seed",
          "x-order": 2,
          "description": "Random seed. Omit for random generations"
        },
        "prompt": {
          "type": "string",
          "title": "Prompt",
          "x-order": 0,
          "description": "Text prompt for audio generation"
        },
        "negative_prompt": {
          "type": "string",
          "title": "Negative Prompt",
          "x-order": 1,
          "description": "Description of what to exclude from the generated audio"
        }
      }
    }
  },
  "audiogen/chatterbox_tts": {
    "name": "audiogen/chatterbox_tts",
    "schema": {
      "type": "object",
      "title": "Input",
      "required": [
        "text"
      ],
      "translatable": [
        "text"
      ],
      "speech_enabled": [
        "text"
      ],
      "linkto": {
        "*": "*"
      },
      "map": {
        "text": "prompt",
        "audio_prompt_path": "audio"
      },
      "poromptField": "text",
      "properties": {
        "text": {
          "type": "string",
          "title": "Text",
          "default": "Wow! That was an incredible firework display.",
          "x-order": 0,
          "description": "Text to synthesize"
        },
        "cfg_weight": {
          "type": "number",
          "title": "Cfg Weight",
          "default": 0.5,
          "minimum": 0,
          "maximum": 1,
          "step": 0.1,
          "x-order": 3,
          "display": "hidden",
          "description": "Balances text fidelity and creativity; higher values make speech closer to the input text."
        },
        "temperature": {
          "type": "number",
          "title": "Temperature",
          "default": 0.8,
          "minimum": 0.05,
          "maximum": 5,
          "step": 0.05,
          "x-order": 4,
          "display": "hidden",
          "description": "Adjusts randomness in speech generation; higher values produce more varied and natural output."
        },
        "exaggeration": {
          "type": "number",
          "title": "Exaggeration",
          "default": 0.5,
          "minimum": 0.25,
          "maximum": 2,
          "step": 0.05,
          "x-order": 2,
          "description": "Controls how expressive or exaggerated the speech sounds; higher values increase emotional intensity."
        },
        "audio_prompt_path": {
          "type": "string",
          "title": "Audio Prompt Path",
          "format": "uri",
          "fileType": "audio",
          "x-order": 1,
          "description": "Reference audio file to clone"
        }
      }
    }
  },
  "audiogen/chatterbox_multilingual": {
    "name": "audiogen/chatterbox_multilingual",
    "schema": {
      "type": "object",
      "title": "Input",
      "required": [
        "text"
      ],
      "translatable": [
        "text"
      ],
      "speech_enabled": [
        "text"
      ],
      "linkto": {
        "*": "*"
      },
      "map": {
        "text": "prompt",
        "audio_prompt_path": "audio"
      },
      "poromptField": "text",
      "properties": {
        "seed": {
          "type": "integer",
          "title": "Seed",
          "default": 0,
          "x-order": 6,
          "description": "Random seed for reproducible results (0 for random generation)"
        },
        "text": {
          "type": "string",
          "title": "Text",
          "x-order": 0,
          "description": "Text to synthesize into speech (maximum 300 characters)"
        },
        "language": {
          "enum": [
            "ar",
            "da",
            "de",
            "el",
            "en",
            "es",
            "fi",
            "fr",
            "he",
            "hi",
            "it",
            "ja",
            "ko",
            "ms",
            "nl",
            "no",
            "pl",
            "pt",
            "ru",
            "sv",
            "sw",
            "tr",
            "zh"
          ],
          "type": "string",
          "title": "language",
          "description": "Language for synthesis. Arabic (ar) • Chinese (zh) • Danish (da) • Dutch (nl) • English (en) • Finnish (fi) • French (fr) • German (de) • Greek (el) • Hebrew (he) • Hindi (hi) • Italian (it) • Japanese (ja) • Korean (ko) • Malay (ms) • Norwegian (no) • Polish (pl) • Portuguese (pt) • Russian (ru) • Spanish (es) • Swahili (sw) • Swedish (sv) • Turkish (tr)",
          "default": "en",
          "x-order": 1
        },
        "cfg_weight": {
          "type": "number",
          "title": "Cfg Weight",
          "default": 0.5,
          "maximum": 1,
          "minimum": 0.2,
          "step": 0.01,
          "display": "hidden",
          "x-order": 5,
          "description": "CFG/Pace weight controlling generation guidance (0.2-1.0). Use 0.5 for balanced results, 0 for language transfer"
        },
        "temperature": {
          "type": "number",
          "title": "Temperature",
          "default": 0.8,
          "maximum": 5,
          "minimum": 0.05,
          "x-order": 4,
          "description": "Controls randomness in generation (0.05-5.0, higher=more varied)"
        },
        "exaggeration": {
          "type": "number",
          "title": "Exaggeration",
          "default": 0.5,
          "maximum": 2,
          "minimum": 0.25,
          "x-order": 3,
          "description": "Controls speech expressiveness (0.25-2.0, neutral=0.5, extreme values may be unstable)"
        },
        "reference_audio": {
          "type": "string",
          "title": "Reference Audio",
          "format": "uri",
          "fileType": "audio",
          "x-order": 2,
          "description": "Reference audio file for voice cloning (optional). If not provided, uses default voice for the selected language."
        }
      }
    }
  },
  "audiogen/microsoft_vibevoice": {
    "name": "audiogen/microsoft_vibevoice",
    "schema": {
      "type": "object",
      "title": "Input",
      "required": [
        "script"
      ],
      "translatable": [
        "script"
      ],
      "speech_enabled": [
        "script"
      ],
      "properties": {
        "scale": {
          "type": "number",
          "title": "Scale",
          "default": 1.3,
          "x-order": 5,
          "description": "CFG Scale (Guidance Strength)"
        },
        "script": {
          "type": "string",
          "title": "Script",
          "x-order": 0,
          "description": "Script to convert to speech"
        },
        "speaker_1": {
          "enum": [
            "en-Alice_woman",
            "en-Carter_man",
            "en-Frank_man",
            "en-Mary_woman_bgm",
            "en-Maya_woman",
            "in-Samuel_man",
            "zh-Anchen_man_bgm",
            "zh-Bowen_man",
            "zh-Xinran_woman"
          ],
          "type": "string",
          "title": "speaker_1",
          "description": "The first speaker",
          "default": "en-Alice_woman",
          "x-order": 1
        },
        "speaker_2": {
          "enum": [
            "en-Alice_woman",
            "en-Carter_man",
            "en-Frank_man",
            "en-Mary_woman_bgm",
            "en-Maya_woman",
            "in-Samuel_man",
            "zh-Anchen_man_bgm",
            "zh-Bowen_man",
            "zh-Xinran_woman"
          ],
          "type": "string",
          "title": "speaker_2",
          "description": "The first speaker",
          "x-order": 2,
          "nullable": true
        },
        "speaker_3": {
          "enum": [
            "en-Alice_woman",
            "en-Carter_man",
            "en-Frank_man",
            "en-Mary_woman_bgm",
            "en-Maya_woman",
            "in-Samuel_man",
            "zh-Anchen_man_bgm",
            "zh-Bowen_man",
            "zh-Xinran_woman"
          ],
          "type": "string",
          "title": "speaker_3",
          "description": "The first speaker",
          "x-order": 3,
          "nullable": true
        },
        "speaker_4": {
          "enum": [
            "en-Alice_woman",
            "en-Carter_man",
            "en-Frank_man",
            "en-Mary_woman_bgm",
            "en-Maya_woman",
            "in-Samuel_man",
            "zh-Anchen_man_bgm",
            "zh-Bowen_man",
            "zh-Xinran_woman"
          ],
          "type": "string",
          "title": "speaker_4",
          "description": "The first speaker",
          "x-order": 4,
          "nullable": true
        }
      }
    }
  },
  "audiogen/cartesia_sonic2": {
    "name": "audiogen/cartesia_sonic2",
    "schema": {
      "type": "object",
      "title": "Input",
      "required": [
        "input",
        "voice",
        "language"
      ],
      "linkto": {
        "*": "*"
      },
      "map": {
        "input": "prompt"
      },
      "poromptField": "input",
      "properties": {
        "input": {
          "type": "string",
          "title": "Input Text",
          "x-order": 0,
          "default": "aap kaise ho aur kya kar rahe ho",
          "description": "The text you want to convert to speech"
        },
        "voice": {
          "type": "string",
          "title": "Voice",
          "x-order": 1,
          "default": "hindi narrator man",
          "description": "The voice style to use for speech generation",
          "enum": [
            "1920's radioman",
            "alabama male",
            "anime girl",
            "anna",
            "announcer man",
            "asmr lady",
            "australian customer support man",
            "australian male",
            "australian narrator lady",
            "australian woman",
            "barbershop man",
            "brazilian young man",
            "british customer support lady",
            "british lady",
            "british narration lady",
            "british reading lady",
            "california girl",
            "calm french woman",
            "calm lady",
            "child",
            "chinese call center man",
            "chinese commercial man",
            "chinese commercial woman",
            "chinese female conversational",
            "chinese woman narrator",
            "classy british man",
            "commercial lady",
            "commercial man",
            "confident british man",
            "customer support lady",
            "customer support man",
            "doctor mischief",
            "dutch confident man",
            "dutch man",
            "female nurse",
            "french conversational lady",
            "french narrator lady",
            "french narrator man",
            "friendly australian man",
            "friendly brazilian man",
            "friendly french man",
            "friendly german man",
            "friendly reading man",
            "friendly sidekick",
            "german conversation man",
            "german conversational woman",
            "german reporter man",
            "german reporter woman",
            "german storyteller man",
            "german woman",
            "helpful french lady",
            "helpful woman",
            "hindi calm man",
            "hindi narrator man",
            "hindi narrator woman",
            "hindi reporter man",
            "hinglish speaking lady",
            "indian customer support lady",
            "indian lady",
            "indian man",
            "italian calm man",
            "italian narrator man",
            "italian narrator woman",
            "japanese children book",
            "japanese male conversational",
            "japanese man book",
            "japanese woman conversational",
            "john",
            "kentucky man",
            "kentucky woman",
            "korean calm woman",
            "korean narrator man",
            "korean narrator woman",
            "laidback woman",
            "madame mischief",
            "maria",
            "meditation lady",
            "mexican man",
            "mexican woman",
            "middle eastern woman",
            "midwestern man",
            "midwestern woman",
            "movieman",
            "new york man",
            "new york woman",
            "newslady",
            "newsman",
            "nonfiction man",
            "pilot over intercom",
            "pleasant brazilian lady",
            "pleasant man",
            "polish confident man",
            "polish narrator man",
            "polish narrator woman",
            "polish young man",
            "polite man",
            "princess",
            "professional woman",
            "reading lady",
            "reading man",
            "reflective woman",
            "russian calm lady",
            "russian narrator man 1",
            "russian narrator man 2",
            "russian narrator woman",
            "salesman",
            "sarah",
            "sarah curious",
            "southern man",
            "southern woman",
            "spanish narrator lady",
            "spanish narrator man",
            "spanish-speaking lady",
            "spanish-speaking man",
            "spanish-speaking reporter man",
            "spanish-speaking storyteller man",
            "sportsman",
            "stern french man",
            "storyteller lady",
            "swedish calm lady",
            "swedish narrator man",
            "sweet lady",
            "teacher lady",
            "the merchant",
            "turkish calm man",
            "turkish narrator man",
            "tutorial man",
            "wise guide man",
            "wise lady",
            "wise man",
            "wizardman",
            "yogaman",
            "young spanish-speaking woman"
          ]
        },
        "language": {
          "type": "string",
          "title": "Language",
          "x-order": 2,
          "default": "hi",
          "enum": [
            "en",
            "fr",
            "de",
            "es",
            "pt",
            "zh",
            "ja",
            "hi",
            "it",
            "ko",
            "nl",
            "pl",
            "ru",
            "sv",
            "tr"
          ],
          "description": "The language code for the input text (e.g., 'hi' for Hindi)"
        },
        "response_encoding": {
          "type": "string",
          "title": "Response Encoding",
          "x-order": 3,
          "default": "pcm_f32le",
          "enum": [
            "pcm_f32le"
          ],
          "description": "The encoding format for the audio output",
          "display": "hidden"
        },
        "response_format": {
          "type": "string",
          "title": "Response Format",
          "x-order": 4,
          "default": "wav",
          "enum": [
            "wav",
            "mp3"
          ],
          "description": "The audio file format for the output"
        },
        "sample_rate": {
          "type": "integer",
          "title": "Sample Rate",
          "x-order": 5,
          "default": 44100,
          "enum": [
            16000,
            24000,
            44100,
            48000
          ],
          "description": "The sample rate of the generated audio in Hz"
        },
        "stream": {
          "type": "boolean",
          "title": "Stream",
          "x-order": 6,
          "default": false,
          "display": "hidden",
          "description": "Whether to stream the audio response"
        },
        "model": {
          "type": "string",
          "title": "Model",
          "x-order": 7,
          "default": "cartesia/sonic-2",
          "enum": [
            "cartesia/sonic-2",
            "cartesia/sonic"
          ],
          "description": "The model to use for speech generation",
          "display": "hidden"
        }
      }
    }
  },
  "audiogen/sonauto_text2music": {
    "name": "audiogen/sonauto_text2music",
    "schema": {
      "type": "object",
      "title": "Input",
      "required": [
        "prompt"
      ],
      "translatable": [
        "prompt",
        "lyrics_prompt"
      ],
      "speech_enabled": [
        "prompt",
        "lyrics_prompt"
      ],
      "linkto": {
        "*": "*"
      },
      "map": {
        "prompt": "prompt"
      },
      "properties": {
        "prompt": {
          "type": "string",
          "title": "Prompt",
          "description": "A description of the track you want to generate. This prompt will be used to automatically generate the tags and lyrics unless you manually set them. For example, if you set prompt and tags, then the prompt will be used to generate only the lyrics.",
          "x-order": 0
        },
        "tags": {
          "type": "array",
          "title": "Tags",
          "display": "hidden",
          "description": "Tags/styles of the music to generate. You can view a list of all available tags at https://sonauto.ai/tag-explorer.",
          "items": {
            "type": "string"
          },
          "x-order": 1
        },
        "lyrics_prompt": {
          "type": "string",
          "title": "Lyrics Prompt",
          "description": "The lyrics sung in the generated song. An empty string will generate an instrumental track.",
          "x-order": 2
        },
        "seed": {
          "type": "integer",
          "title": "Seed",
          "description": "The seed to use for generation. Will pick a random seed if not provided. Repeating a request with identical parameters (must use lyrics and tags, not prompt) and the same seed will generate the same song.",
          "x-order": 3
        },
        "prompt_strength": {
          "type": "number",
          "title": "Prompt Strength",
          "description": "Controls how strongly your prompt influences the output. Greater values adhere more to the prompt but sound less natural. (This is CFG.)",
          "default": 2,
          "display": "hidden",
          "minimum": 1.4,
          "maximum": 3.1,
          "step": 0.1,
          "x-order": 4
        },
        "balance_strength": {
          "type": "number",
          "title": "Balance Strength",
          "description": "Greater means more natural vocals. Lower means sharper instrumentals. We recommend 0.7.",
          "default": 0.7,
          "display": "hidden",
          "minimum": 0,
          "maximum": 1,
          "step": 0.1,
          "x-order": 5
        },
        "num_songs": {
          "type": "integer",
          "title": "Number of Songs",
          "description": "Generating 2 songs costs 1.5x the price of generating 1 song. Also, note that using the same seed may not result in identical songs if the number of songs generated is changed.",
          "default": 1,
          "display": "hidden",
          "minimum": 1,
          "maximum": 2,
          "step": 1,
          "x-order": 6
        },
        "output_format": {
          "type": "string",
          "title": "Output Format",
          "description": "The format of the generated audio file.",
          "enum": [
            "flac",
            "mp3",
            "wav",
            "ogg",
            "m4a"
          ],
          "default": "mp3",
          "display": "hidden",
          "x-order": 7
        },
        "output_bit_rate": {
          "type": "integer",
          "title": "Output Bit Rate",
          "description": "The bit rate to use for mp3 and m4a formats. Not available for other formats.",
          "enum": [
            128,
            192,
            256,
            320
          ],
          "default": 128,
          "x-order": 8
        },
        "bpm": {
          "type": [
            "integer",
            "string"
          ],
          "title": "BPM",
          "description": "The beats per minute of the song. This can be set to an integer or the literal string \"auto\" to pick a suitable bpm based on the tags. Set bpm to null to not condition the model on bpm information.",
          "default": "auto",
          "x-order": 9
        }
      }
    }
  },
  "audiogen/sonauto_text2music_extend": {
    "name": "audiogen/sonauto_text2music_extend",
    "schema": {
      "type": "object",
      "title": "Input",
      "required": [
        "audio_url"
      ],
      "translatable": [
        "prompt",
        "lyrics_prompt"
      ],
      "speech_enabled": [
        "prompt",
        "lyrics_prompt"
      ],
      "linkto": {
        "*": "*"
      },
      "map": {
        "prompt": "prompt"
      },
      "properties": {
        "audio_url": {
          "type": "string",
          "title": "Audio",
          "description": "The URL of the audio file to alter. Must be a valid publicly accessible URL.",
          "format": "uri",
          "fileType": "audio",
          "x-order": 0
        },
        "side": {
          "type": "string",
          "title": "Side",
          "description": "Add more to the beginning (left) or end (right) of the song",
          "enum": [
            "left",
            "right"
          ],
          "default": "left",
          "x-order": 1
        },
        "extend_duration": {
          "type": "integer",
          "title": "Extend Duration",
          "minimum": 2,
          "maximum": 85,
          "step": 1,
          "default": 10,
          "description": "Duration in seconds to extend the song. If not provided, will attempt to automatically determine.",
          "x-order": 2
        },
        "prompt": {
          "type": "string",
          "title": "Prompt",
          "description": "A description of the track you want to generate. This prompt will be used to automatically generate the tags and lyrics unless you manually set them. For example, if you set prompt and tags, then the prompt will be used to generate only the lyrics.",
          "x-order": 3
        },
        "tags": {
          "type": "array",
          "title": "Tags",
          "display": "hidden",
          "description": "Tags/styles of the music to generate. You can view a list of all available tags at https://sonauto.ai/tag-explorer.",
          "items": {
            "type": "string"
          },
          "x-order": 4
        },
        "lyrics_prompt": {
          "type": "string",
          "title": "Lyrics Prompt",
          "description": "The lyrics sung in the generated song. An empty string will generate an instrumental track.",
          "x-order": 5
        },
        "seed": {
          "type": "integer",
          "title": "Seed",
          "description": "The seed to use for generation. Will pick a random seed if not provided. Repeating a request with identical parameters (must use lyrics and tags, not prompt) and the same seed will generate the same song.",
          "x-order": 6
        },
        "prompt_strength": {
          "type": "number",
          "title": "Prompt Strength",
          "description": "Controls how strongly your prompt influences the output. Greater values adhere more to the prompt but sound less natural. (This is CFG.)",
          "default": 2,
          "display": "hidden",
          "minimum": 1.4,
          "maximum": 3.1,
          "step": 0.1,
          "x-order": 7
        },
        "balance_strength": {
          "type": "number",
          "title": "Balance Strength",
          "description": "Greater means more natural vocals. Lower means sharper instrumentals. We recommend 0.7.",
          "default": 0.7,
          "display": "hidden",
          "minimum": 0,
          "maximum": 1,
          "step": 0.1,
          "x-order": 8
        },
        "num_songs": {
          "type": "integer",
          "title": "Number of Songs",
          "description": "Generating 2 songs costs 1.5x the price of generating 1 song. Also, note that using the same seed may not result in identical songs if the number of songs generated is changed.",
          "default": 1,
          "display": "hidden",
          "minimum": 1,
          "maximum": 2,
          "step": 1,
          "x-order": 9
        },
        "output_format": {
          "type": "string",
          "title": "Output Format",
          "description": "The format of the generated audio file.",
          "enum": [
            "flac",
            "mp3",
            "wav",
            "ogg",
            "m4a"
          ],
          "default": "mp3",
          "display": "hidden",
          "x-order": 10
        },
        "output_bit_rate": {
          "type": "integer",
          "title": "Output Bit Rate",
          "description": "The bit rate to use for mp3 and m4a formats. Not available for other formats.",
          "enum": [
            128,
            192,
            256,
            320
          ],
          "default": 128,
          "x-order": 11
        },
        "bpm": {
          "type": [
            "integer",
            "string"
          ],
          "title": "BPM",
          "description": "The beats per minute of the song. This can be set to an integer or the literal string \"auto\" to pick a suitable bpm based on the tags. Set bpm to null to not condition the model on bpm information.",
          "default": "auto",
          "x-order": 12
        }
      }
    }
  },
  "audiogen/minimax_music1_5": {
    "name": "audiogen/minimax_music1_5",
    "schema": {
      "type": "object",
      "title": "Input",
      "required": [
        "prompt",
        "lyrics_prompt"
      ],
      "translatable": [
        "prompt",
        "lyrics_prompt"
      ],
      "speech_enabled": [
        "prompt",
        "lyrics_prompt"
      ],
      "linkto": {
        "*": "*"
      },
      "map": {
        "prompt": "prompt"
      },
      "properties": {
        "prompt": {
          "type": "string",
          "title": "Prompt",
          "description": "Lyrics, supports [intro][verse][chorus][bridge][outro] sections. 10-600 characters.",
          "default": "[Intro] GenVR, lets go! [Verse] Fast and limitless, AI brings the heat, generative power, future at our feet. [Chorus] GenVR, breaking the chain, lightning speed running through the vein. [Outro] GenVR! (hey!) GenVR! (hey!) Fast and limitless, paving the way!",
          "x-order": 0
        },
        "lyrics_prompt": {
          "type": "string",
          "title": "Lyrics Prompt",
          "description": "Control music generation. 10-300 characters.",
          "x-order": 1
        }
      }
    }
  },
  "imagegen/flux1_1_pro_ultra": {
    "name": "imagegen/flux1_1_pro_ultra",
    "schema": {
      "type": "object",
      "title": "Input",
      "translatable": [
        "prompt"
      ],
      "speech_enabled": [
        "prompt"
      ],
      "required": [
        "prompt"
      ],
      "linkto": {
        "*": "*"
      },
      "map": {
        "prompt": "prompt"
      },
      "properties": {
        "raw": {
          "type": "boolean",
          "title": "Raw",
          "default": false,
          "x-order": 6,
          "description": "Generate less processed, more natural-looking images"
        },
        "seed": {
          "type": "integer",
          "title": "Seed",
          "x-order": 5,
          "description": "Random seed. Set for reproducible generation"
        },
        "prompt": {
          "type": "string",
          "title": "Prompt",
          "x-order": 0,
          "description": "Text prompt for image generation"
        },
        "aspect_ratio": {
          "enum": [
            "21:9",
            "16:9",
            "3:2",
            "4:3",
            "5:4",
            "1:1",
            "4:5",
            "3:4",
            "2:3",
            "9:16",
            "9:21"
          ],
          "type": "string",
          "title": "aspect_ratio",
          "description": "Aspect ratio for the generated image",
          "default": "1:1",
          "x-order": 3
        },
        "image_prompt": {
          "type": "string",
          "title": "Image Prompt",
          "format": "uri",
          "x-order": 1,
          "description": "Image to use with Flux Redux. This is used together with the text prompt to guide the generation towards the composition of the image_prompt. Must be jpeg, png, gif, or webp."
        },
        "output_format": {
          "enum": [
            "jpg",
            "png"
          ],
          "type": "string",
          "title": "output_format",
          "description": "Format of the output images.",
          "default": "jpg",
          "x-order": 7
        },
        "safety_tolerance": {
          "type": "integer",
          "title": "Safety Tolerance",
          "default": 2,
          "maximum": 6,
          "minimum": 1,
          "x-order": 4,
          "description": "Safety tolerance, 1 is most strict and 6 is most permissive"
        },
        "image_prompt_strength": {
          "type": "number",
          "title": "Image Prompt Strength",
          "default": 0.1,
          "maximum": 1,
          "minimum": 0,
          "x-order": 2,
          "description": "Blend between the prompt and the image prompt."
        }
      }
    }
  },
  "imagegen/openai_dalle_3": {
    "name": "imagegen/openai_dalle_3",
    "schema": {
      "type": "object",
      "title": "Input",
      "required": [
        "prompt"
      ],
      "translatable": [
        "prompt"
      ],
      "speech_enabled": [
        "prompt"
      ],
      "linkto": {
        "*": "*"
      },
      "map": {
        "prompt": "prompt"
      },
      "properties": {
        "style": {
          "enum": [
            "vivid",
            "natural"
          ],
          "type": "string",
          "title": "style",
          "description": "The style of the generated images",
          "default": "vivid",
          "x-order": 2
        },
        "prompt": {
          "type": "string",
          "title": "Prompt",
          "x-order": 0,
          "description": "A text description of the desired image"
        },
        "aspect_ratio": {
          "enum": [
            "1:1",
            "3:2",
            "2:3"
          ],
          "type": "string",
          "title": "aspect_ratio",
          "description": "The aspect ratio of the generated image",
          "default": "1:1",
          "x-order": 1
        }
      }
    }
  },
  "imagegen/runway_gen4_image_reference": {
    "name": "imagegen/runway_gen4_image_reference",
    "schema": {
      "type": "object",
      "title": "Input",
      "required": [
        "prompt"
      ],
      "translatable": [
        "prompt"
      ],
      "speech_enabled": [
        "prompt"
      ],
      "linkto": {
        "*": "*"
      },
      "map": {
        "prompt": "prompt"
      },
      "properties": {
        "seed": {
          "type": "integer",
          "title": "Seed",
          "x-order": 1,
          "nullable": true,
          "description": "Random seed. Set for reproducible generation"
        },
        "prompt": {
          "type": "string",
          "title": "Prompt",
          "x-order": 0,
          "description": "Text prompt for image generation"
        },
        "resolution": {
          "enum": [
            "720p",
            "1080p"
          ],
          "type": "string",
          "title": "resolution",
          "description": "Image resolution",
          "default": "1080p",
          "x-order": 3
        },
        "aspect_ratio": {
          "enum": [
            "16:9",
            "9:16",
            "4:3",
            "3:4",
            "1:1",
            "21:9"
          ],
          "type": "string",
          "title": "aspect_ratio",
          "description": "Image aspect ratio",
          "default": "16:9",
          "x-order": 2
        },
        "reference_tags": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "Reference Tags",
          "x-order": 5,
          "display": "hidden",
          "description": "An optional tag for each of your reference images. Tags must be alphanumeric and start with a letter. You can reference them in your prompt using @tag_name. Tags must be between 3 and 15 characters."
        },
        "reference_images": {
          "type": "array",
          "items": {
            "type": "string",
            "format": "uri",
            "fileType": "image"
          },
          "title": "Reference Images",
          "x-order": 4,
          "maxItems": 3,
          "description": "Up to 3 reference images. Images must be between 0.5 and 2 aspect ratio."
        }
      }
    }
  },
  "imagegen/storyboard": {
    "name": "imagegen/storyboard",
    "schema": {
      "type": "object",
      "title": "Input",
      "translatable": [
        "character_description",
        "comic_description",
        "negative_prompt"
      ],
      "speech_enabled": [
        "character_description",
        "comic_description",
        "negative_prompt"
      ],
      "linkto": {
        "*": "*"
      },
      "map": {
        "negative_prompt": "negative_prompt"
      },
      "properties": {
        "seed": {
          "type": "integer",
          "title": "Seed",
          "x-order": 12,
          "description": "Random seed. Leave blank to randomize the seed"
        },
        "num_ids": {
          "type": "integer",
          "title": "Num Ids",
          "default": 3,
          "x-order": 15,
          "description": "Number of id images in total images. This should not exceed total number of line-separated prompts"
        },
        "sd_model": {
          "enum": [
            "Unstable",
            "RealVision"
          ],
          "type": "string",
          "title": "sd_model",
          "description": "Choose a model",
          "default": "Unstable",
          "x-order": 0
        },
        "num_steps": {
          "type": "integer",
          "title": "Num Steps",
          "default": 25,
          "maximum": 50,
          "minimum": 20,
          "x-order": 10,
          "description": "Number of sample steps"
        },
        "ref_image": {
          "type": "string",
          "title": "Ref Image",
          "format": "uri",
          "x-order": 1,
          "description": "Reference image for the character"
        },
        "style_name": {
          "enum": [
            "(No style)",
            "Japanese Anime",
            "Cinematic",
            "Disney Charactor",
            "Photographic",
            "Comic book",
            "Line art"
          ],
          "type": "string",
          "title": "style_name",
          "description": "Style template",
          "default": "Japanese Anime",
          "x-order": 5
        },
        "comic_style": {
          "enum": [
            "Four Pannel",
            "Classic Comic Style"
          ],
          "type": "string",
          "title": "comic_style",
          "description": "Select the comic style for the combined comic",
          "default": "Classic Comic Style",
          "x-order": 6
        },
        "image_width": {
          "enum": [
            256,
            288,
            320,
            352,
            384,
            416,
            448,
            480,
            512,
            544,
            576,
            608,
            640,
            672,
            704,
            736,
            768,
            800,
            832,
            864,
            896,
            928,
            960,
            992,
            1024
          ],
          "type": "integer",
          "title": "image_width",
          "description": "Width of output image",
          "default": 768,
          "x-order": 8
        },
        "image_height": {
          "enum": [
            256,
            288,
            320,
            352,
            384,
            416,
            448,
            480,
            512,
            544,
            576,
            608,
            640,
            672,
            704,
            736,
            768,
            800,
            832,
            864,
            896,
            928,
            960,
            992,
            1024
          ],
          "type": "integer",
          "title": "image_height",
          "description": "Height of output image",
          "default": 768,
          "x-order": 9
        },
        "sa32_setting": {
          "type": "number",
          "title": "Sa32 Setting",
          "display": "hidden",
          "default": 0.5,
          "maximum": 1,
          "minimum": 0,
          "x-order": 13,
          "description": "The degree of Paired Attention at 32 x 32 self-attention layers"
        },
        "sa64_setting": {
          "type": "number",
          "title": "Sa64 Setting",
          "display": "hidden",
          "default": 0.5,
          "maximum": 1,
          "minimum": 0,
          "x-order": 14,
          "description": "The degree of Paired Attention at 64 x 64 self-attention layers"
        },
        "output_format": {
          "enum": [
            "webp",
            "jpg",
            "png"
          ],
          "type": "string",
          "title": "output_format",
          "description": "Format of the output images",
          "default": "webp",
          "x-order": 16
        },
        "guidance_scale": {
          "type": "number",
          "title": "Guidance Scale",
          "default": 5,
          "maximum": 10,
          "minimum": 0.1,
          "x-order": 11,
          "description": "Scale for classifier-free guidance"
        },
        "output_quality": {
          "type": "integer",
          "title": "Output Quality",
          "default": 80,
          "maximum": 100,
          "minimum": 0,
          "x-order": 17,
          "description": "Quality of the output images, from 0 to 100. 100 is best quality, 0 is lowest quality"
        },
        "negative_prompt": {
          "type": "string",
          "title": "Negative Prompt",
          "default": "bad anatomy, bad hands, missing fingers, extra fingers, three hands, three legs, bad arms, missing legs, missing arms, poorly drawn face, bad face, fused face, cloned face, three crus, fused feet, fused thigh, extra crus, ugly fingers, horn, cartoon, cg, 3d, unreal, animate, amputation, disconnected limbs",
          "x-order": 3,
          "description": "Describe things you do not want to see in the output"
        },
        "comic_description": {
          "type": "string",
          "title": "Comic Description",
          "default": "at home, read new paper #at home, The newspaper says there is a treasure house in the forest.\non the road, near the forest\n[NC] The car on the road, near the forest #He drives to the forest in search of treasure.\n[NC]A tiger appeared in the forest, at night \nvery frightened, open mouth, in the forest, at night\nrunning very fast, in the forest, at night\n[NC] A house in the forest, at night #Suddenly, he discovers the treasure house!\nin the house filled with  treasure, laughing, at night #He is overjoyed inside the house.",
          "x-order": 4,
          "description": "Comic Description. Each frame is divided by a new line. Only the first 10 prompts are valid for demo speed! For comic_description NOT using ref_image: (1) Support Typesetting Style and Captioning. By default, the prompt is used as the caption for each image. If you need to change the caption, add a '#' at the end of each line. Only the part after the '#' will be added as a caption to the image. (2) The [NC] symbol is used as a flag to indicate that no characters should be present in the generated scene images. If you want do that, prepend the '[NC]' at the beginning of the line. If ref_image is provided, do not use [NC] symbol."
        },
        "style_strength_ratio": {
          "type": "integer",
          "title": "Style Strength Ratio",
          "default": 20,
          "maximum": 50,
          "minimum": 15,
          "x-order": 7,
          "description": "Style strength of Ref Image (%), only used if ref_image is provided"
        },
        "character_description": {
          "type": "string",
          "title": "Character Description",
          "default": "a man, wearing black suit",
          "x-order": 2,
          "description": "General description of the character. If ref_image above is provided, making sure to follow the class word you want to customize with the trigger word 'img', such as: 'man img' or 'woman img' or 'girl img'"
        }
      }
    }
  },
  "imagegen/recraft_v3": {
    "name": "imagegen/recraft_v3",
    "schema": {
      "type": "object",
      "title": "Input",
      "required": [
        "prompt"
      ],
      "translatable": [
        "prompt"
      ],
      "speech_enabled": [
        "prompt"
      ],
      "linkto": {
        "*": "*"
      },
      "map": {
        "prompt": "prompt"
      },
      "properties": {
        "size": {
          "enum": [
            "1024x1024",
            "1365x1024",
            "1024x1365",
            "1536x1024",
            "1024x1536",
            "1820x1024",
            "1024x1820",
            "1024x2048",
            "2048x1024",
            "1434x1024",
            "1024x1434",
            "1024x1280",
            "1280x1024",
            "1024x1707",
            "1707x1024"
          ],
          "type": "string",
          "title": "size",
          "description": "Width and height of the generated image",
          "default": "1024x1024",
          "x-order": 1
        },
        "style": {
          "enum": [
            "any",
            "realistic_image",
            "digital_illustration",
            "digital_illustration/pixel_art",
            "digital_illustration/hand_drawn",
            "digital_illustration/grain",
            "digital_illustration/infantile_sketch",
            "digital_illustration/2d_art_poster",
            "digital_illustration/handmade_3d",
            "digital_illustration/hand_drawn_outline",
            "digital_illustration/engraving_color",
            "digital_illustration/2d_art_poster_2",
            "realistic_image/b_and_w",
            "realistic_image/hard_flash",
            "realistic_image/hdr",
            "realistic_image/natural_light",
            "realistic_image/studio_portrait",
            "realistic_image/enterprise",
            "realistic_image/motion_blur"
          ],
          "type": "string",
          "title": "style",
          "description": "Style of the generated image.",
          "default": "any",
          "x-order": 2
        },
        "prompt": {
          "type": "string",
          "title": "Prompt",
          "x-order": 0,
          "description": "Text prompt for image generation"
        }
      }
    }
  },
  "imagegen/ideogram_v2": {
    "name": "imagegen/ideogram_v2",
    "schema": {
      "type": "object",
      "title": "Input",
      "translatable": [
        "prompt",
        "negative_prompt"
      ],
      "speech_enabled": [
        "prompt",
        "negative_prompt"
      ],
      "required": [
        "prompt"
      ],
      "linkto": {
        "*": "*"
      },
      "map": {
        "prompt": "prompt",
        "negative_prompt": "negative_prompt"
      },
      "properties": {
        "mask": {
          "type": "string",
          "title": "Mask",
          "display": "hidden",
          "format": "uri",
          "x-order": 6,
          "description": "A black and white image. Black pixels are inpainted, white pixels are preserved. The mask will be resized to match the image size."
        },
        "seed": {
          "type": "integer",
          "title": "Seed",
          "maximum": 2147483647,
          "x-order": 8,
          "description": "Random seed. Set for reproducible generation"
        },
        "image": {
          "type": "string",
          "title": "Image",
          "display": "hidden",
          "format": "uri",
          "x-order": 5,
          "description": "An image file to use for inpainting. You must also use a mask."
        },
        "prompt": {
          "type": "string",
          "title": "Prompt",
          "x-order": 0,
          "description": "Text prompt for image generation"
        },
        "resolution": {
          "enum": [
            "None",
            "512x1536",
            "576x1408",
            "576x1472",
            "576x1536",
            "640x1344",
            "640x1408",
            "640x1472",
            "640x1536",
            "704x1152",
            "704x1216",
            "704x1280",
            "704x1344",
            "704x1408",
            "704x1472",
            "736x1312",
            "768x1088",
            "768x1216",
            "768x1280",
            "768x1344",
            "832x960",
            "832x1024",
            "832x1088",
            "832x1152",
            "832x1216",
            "832x1248",
            "864x1152",
            "896x960",
            "896x1024",
            "896x1088",
            "896x1120",
            "896x1152",
            "960x832",
            "960x896",
            "960x1024",
            "960x1088",
            "1024x832",
            "1024x896",
            "1024x960",
            "1024x1024",
            "1088x768",
            "1088x832",
            "1088x896",
            "1088x960",
            "1120x896",
            "1152x704",
            "1152x832",
            "1152x864",
            "1152x896",
            "1216x704",
            "1216x768",
            "1216x832",
            "1248x832",
            "1280x704",
            "1280x768",
            "1280x800",
            "1312x736",
            "1344x640",
            "1344x704",
            "1344x768",
            "1408x576",
            "1408x640",
            "1408x704",
            "1472x576",
            "1472x640",
            "1472x704",
            "1536x512",
            "1536x576",
            "1536x640"
          ],
          "type": "string",
          "title": "resolution",
          "description": "Resolution. Overrides aspect ratio. Ignored if an inpainting image is given.",
          "default": "None",
          "x-order": 3
        },
        "style_type": {
          "enum": [
            "None",
            "Auto",
            "General",
            "Realistic",
            "Design",
            "Render 3D",
            "Anime"
          ],
          "type": "string",
          "title": "style_type",
          "description": "The styles help define the specific aesthetic of the image you want to generate.",
          "default": "None",
          "x-order": 7
        },
        "aspect_ratio": {
          "enum": [
            "1:1",
            "16:9",
            "9:16",
            "4:3",
            "3:4",
            "3:2",
            "2:3",
            "16:10",
            "10:16",
            "3:1",
            "1:3"
          ],
          "type": "string",
          "title": "aspect_ratio",
          "description": "Aspect ratio. Ignored if a resolution or inpainting image is given.",
          "default": "1:1",
          "x-order": 2
        },
        "negative_prompt": {
          "type": "string",
          "title": "Negative Prompt",
          "x-order": 1,
          "description": "Things you do not want to see in the generated image."
        },
        "magic_prompt_option": {
          "enum": [
            "Auto",
            "On",
            "Off"
          ],
          "type": "string",
          "title": "magic_prompt_option",
          "description": "Magic Prompt will interpret your prompt and optimize it to maximize variety and quality of the images generated. You can also use it to write prompts in different languages.",
          "default": "Auto",
          "x-order": 4
        }
      }
    }
  },
  "imagegen/flux1_1_pro": {
    "name": "imagegen/flux1_1_pro",
    "schema": {
      "type": "object",
      "title": "Input",
      "translatable": [
        "prompt"
      ],
      "speech_enabled": [
        "prompt"
      ],
      "required": [
        "prompt"
      ],
      "linkto": {
        "*": "*"
      },
      "map": {
        "prompt": "prompt"
      },
      "properties": {
        "seed": {
          "type": "integer",
          "title": "Seed",
          "x-order": 6,
          "description": "Random seed. Set for reproducible generation"
        },
        "width": {
          "type": "integer",
          "title": "Width",
          "maximum": 1440,
          "minimum": 256,
          "default": 1024,
          "display": "hidden",
          "x-order": 3,
          "description": "Width of the generated image in text-to-image mode. Only used when aspect_ratio=custom. Must be a multiple of 32 (if it's not, it will be rounded to nearest multiple of 32). Note: Ignored in img2img and inpainting modes."
        },
        "height": {
          "type": "integer",
          "title": "Height",
          "maximum": 1440,
          "minimum": 256,
          "default": 1024,
          "display": "hidden",
          "x-order": 4,
          "description": "Height of the generated image in text-to-image mode. Only used when aspect_ratio=custom. Must be a multiple of 32 (if it's not, it will be rounded to nearest multiple of 32). Note: Ignored in img2img and inpainting modes."
        },
        "prompt": {
          "type": "string",
          "title": "Prompt",
          "x-order": 0,
          "description": "Text prompt for image generation"
        },
        "aspect_ratio": {
          "enum": [
            "custom",
            "1:1",
            "16:9",
            "3:2",
            "2:3",
            "4:5",
            "5:4",
            "9:16",
            "3:4",
            "4:3"
          ],
          "type": "string",
          "title": "aspect_ratio",
          "description": "Aspect ratio for the generated image",
          "default": "1:1",
          "x-order": 2
        },
        "image_prompt": {
          "type": "string",
          "title": "Image Prompt",
          "format": "uri",
          "x-order": 1,
          "description": "Image to use with Flux Redux. This is used together with the text prompt to guide the generation towards the composition of the image_prompt. Must be jpeg, png, gif, or webp."
        },
        "output_format": {
          "enum": [
            "webp",
            "jpg",
            "png"
          ],
          "type": "string",
          "title": "output_format",
          "description": "Format of the output images.",
          "default": "webp",
          "x-order": 8
        },
        "output_quality": {
          "type": "integer",
          "title": "Output Quality",
          "default": 80,
          "maximum": 100,
          "minimum": 0,
          "x-order": 9,
          "description": "Quality when saving the output images, from 0 to 100. 100 is best quality, 0 is lowest quality. Not relevant for .png outputs"
        },
        "safety_tolerance": {
          "type": "integer",
          "title": "Safety Tolerance",
          "default": 2,
          "maximum": 6,
          "minimum": 1,
          "x-order": 5,
          "description": "Safety tolerance, 1 is most strict and 6 is most permissive"
        },
        "prompt_upsampling": {
          "type": "boolean",
          "title": "Prompt Upsampling",
          "default": false,
          "x-order": 7,
          "description": "Automatically modify the prompt for more creative generation"
        }
      }
    }
  },
  "imagegen/stable_diffusion_3_5": {
    "name": "imagegen/stable_diffusion_3_5",
    "schema": {
      "type": "object",
      "title": "Input",
      "translatable": [
        "prompt"
      ],
      "speech_enabled": [
        "prompt"
      ],
      "linkto": {
        "*": "*"
      },
      "map": {
        "prompt": "prompt"
      },
      "properties": {
        "cfg": {
          "type": "number",
          "title": "Cfg",
          "default": 4.5,
          "maximum": 20,
          "minimum": 0,
          "x-order": 2,
          "description": "The guidance scale tells the model how similar the output should be to the prompt."
        },
        "seed": {
          "type": "integer",
          "title": "Seed",
          "x-order": 6,
          "description": "Set a seed for reproducibility. Random by default."
        },
        "image": {
          "type": "string",
          "title": "Image",
          "format": "uri",
          "x-order": 3,
          "description": "Input image for image to image mode. The aspect ratio of your output will match this image."
        },
        "steps": {
          "type": "integer",
          "title": "Steps",
          "default": 40,
          "maximum": 50,
          "minimum": 1,
          "x-order": 5,
          "description": "Number of steps to run the sampler for."
        },
        "prompt": {
          "type": "string",
          "title": "Prompt",
          "default": "",
          "x-order": 0,
          "description": "Text prompt for image generation"
        },
        "aspect_ratio": {
          "enum": [
            "1:1",
            "16:9",
            "21:9",
            "3:2",
            "2:3",
            "4:5",
            "5:4",
            "3:4",
            "4:3",
            "9:16",
            "9:21"
          ],
          "type": "string",
          "title": "aspect_ratio",
          "description": "The aspect ratio of your output image. This value is ignored if you are using an input image.",
          "default": "1:1",
          "x-order": 1
        },
        "output_format": {
          "enum": [
            "webp",
            "jpg",
            "png"
          ],
          "type": "string",
          "title": "output_format",
          "description": "Format of the output images",
          "default": "webp",
          "x-order": 7
        },
        "output_quality": {
          "type": "integer",
          "title": "Output Quality",
          "default": 90,
          "maximum": 100,
          "minimum": 0,
          "x-order": 8,
          "description": "Quality of the output images, from 0 to 100. 100 is best quality, 0 is lowest quality."
        },
        "prompt_strength": {
          "type": "number",
          "title": "Prompt Strength",
          "default": 0.85,
          "x-order": 4,
          "description": "Prompt strength (or denoising strength) when using image to image. 1.0 corresponds to full destruction of information in image."
        }
      }
    }
  },
  "imagegen/recraft_v3_svg": {
    "name": "imagegen/recraft_v3_svg",
    "schema": {
      "type": "object",
      "title": "Input",
      "required": [
        "prompt"
      ],
      "translatable": [
        "prompt"
      ],
      "speech_enabled": [
        "prompt"
      ],
      "linkto": {
        "*": "*"
      },
      "map": {
        "prompt": "prompt"
      },
      "properties": {
        "size": {
          "enum": [
            "1024x1024",
            "1365x1024",
            "1024x1365",
            "1536x1024",
            "1024x1536",
            "1820x1024",
            "1024x1820",
            "1024x2048",
            "2048x1024",
            "1434x1024",
            "1024x1434",
            "1024x1280",
            "1280x1024",
            "1024x1707",
            "1707x1024"
          ],
          "type": "string",
          "title": "size",
          "description": "Width and height of the generated image",
          "default": "1024x1024",
          "x-order": 1
        },
        "style": {
          "enum": [
            "any",
            "engraving",
            "line_art",
            "line_circuit",
            "linocut"
          ],
          "type": "string",
          "title": "style",
          "description": "Style of the generated image.",
          "default": "any",
          "x-order": 2
        },
        "prompt": {
          "type": "string",
          "title": "Prompt",
          "x-order": 0,
          "description": "Text prompt for image generation"
        }
      }
    }
  },
  "imagegen/nvidia_sana": {
    "name": "imagegen/nvidia_sana",
    "schema": {
      "type": "object",
      "title": "Input",
      "translatable": [
        "prompt",
        "negative_prompt"
      ],
      "speech_enabled": [
        "prompt",
        "negative_prompt"
      ],
      "linkto": {
        "*": "*"
      },
      "map": {
        "prompt": "prompt",
        "negative_prompt": "negative_prompt"
      },
      "properties": {
        "seed": {
          "type": "integer",
          "title": "Seed",
          "x-order": 8,
          "description": "Random seed. Leave blank to randomize the seed"
        },
        "width": {
          "type": "integer",
          "title": "Width",
          "default": 1024,
          "x-order": 3,
          "description": "Width of output image"
        },
        "height": {
          "type": "integer",
          "title": "Height",
          "default": 1024,
          "x-order": 4,
          "description": "Height of output image"
        },
        "prompt": {
          "type": "string",
          "title": "Prompt",
          "default": "a cyberpunk cat with a neon sign that says \"Sana\"",
          "x-order": 0,
          "description": "Input prompt"
        },
        "model_variant": {
          "enum": [
            "1600M-1024px",
            "1600M-1024px-multilang",
            "1600M-512px",
            "600M-1024px-multilang",
            "600M-512px-multilang"
          ],
          "type": "string",
          "title": "model_variant",
          "description": "Model variant. 1600M variants are slower but produce higher quality than 600M, 1024px variants are optimized for 1024x1024px images, 512px variants are optimized for 512x512px images, 'multilang' variants can be prompted in both English and Chinese",
          "default": "1600M-1024px",
          "x-order": 2
        },
        "guidance_scale": {
          "type": "number",
          "title": "Guidance Scale",
          "display": "hidden",
          "default": 5,
          "maximum": 20,
          "minimum": 1,
          "x-order": 6,
          "description": "Classifier-free guidance scale"
        },
        "negative_prompt": {
          "type": "string",
          "title": "Negative Prompt",
          "default": "",
          "x-order": 1,
          "description": "Specify things to not see in the output"
        },
        "pag_guidance_scale": {
          "type": "number",
          "title": "Pag Guidance Scale",
          "display": "hidden",
          "default": 2,
          "maximum": 20,
          "minimum": 1,
          "x-order": 7,
          "description": "PAG Guidance scale"
        },
        "num_inference_steps": {
          "type": "integer",
          "title": "Num Inference Steps",
          "display": "hidden",
          "default": 18,
          "minimum": 1,
          "x-order": 5,
          "description": "Number of denoising steps"
        }
      }
    }
  },
  "imagegen/nirman": {
    "name": "imagegen/nirman",
    "schema": {
      "type": "object",
      "title": "Input",
      "required": [
        "prompt"
      ],
      "translatable": [
        "prompt",
        "negative_prompt"
      ],
      "speech_enabled": [
        "prompt",
        "negative_prompt"
      ],
      "linkto": {
        "*": "*"
      },
      "map": {
        "prompt": "prompt",
        "negative_prompt": "negative_prompt"
      },
      "properties": {
        "mask": {
          "type": "string",
          "title": "Mask",
          "display": "hidden",
          "format": "uri",
          "x-order": 3,
          "description": "Input mask for inpaint mode. Black areas will be preserved, white areas will be inpainted."
        },
        "seed": {
          "type": "integer",
          "title": "Seed",
          "x-order": 11,
          "description": "Random seed. Leave blank to randomize the seed"
        },
        "image": {
          "type": "string",
          "title": "Image",
          "display": "hidden",
          "format": "uri",
          "x-order": 2,
          "description": "Input image for img2img or inpaint mode"
        },
        "width": {
          "type": "integer",
          "title": "Width",
          "default": 1024,
          "x-order": 4,
          "description": "Width of output image. Recommended 1024 or 1280"
        },
        "height": {
          "type": "integer",
          "title": "Height",
          "default": 1024,
          "x-order": 5,
          "description": "Height of output image. Recommended 1024 or 1280"
        },
        "prompt": {
          "type": "string",
          "title": "Prompt",
          "x-order": 0,
          "description": "Input prompt"
        },
        "scheduler": {
          "enum": [
            "DDIM",
            "DPMSolverMultistep",
            "HeunDiscrete",
            "KarrasDPM",
            "K_EULER_ANCESTRAL",
            "K_EULER",
            "PNDM",
            "DPM++2MSDE"
          ],
          "type": "string",
          "title": "scheduler",
          "description": "scheduler",
          "display": "hidden",
          "default": "K_EULER_ANCESTRAL",
          "x-order": 7
        },
        "num_outputs": {
          "type": "integer",
          "title": "Num Outputs",
          "default": 1,
          "maximum": 4,
          "minimum": 1,
          "x-order": 6,
          "description": "Number of images to output."
        },
        "guidance_scale": {
          "type": "number",
          "title": "Guidance Scale",
          "default": 2,
          "maximum": 10,
          "minimum": 0,
          "step": 0.1,
          "x-order": 9,
          "description": "Scale for classifier-free guidance"
        },
        "apply_watermark": {
          "type": "boolean",
          "title": "Apply Watermark",
          "default": false,
          "display": "hidden",
          "x-order": 12,
          "description": "Applies a watermark to enable determining if an image is generated in downstream applications. If you have other provisions for generating or deploying images safely, you can use this to disable watermarking."
        },
        "negative_prompt": {
          "type": "string",
          "title": "Negative Prompt",
          "default": "nsfw, bad quality, bad anatomy, worst quality, low quality, low resolutions, extra fingers, blur, blurry, ugly, wrongs proportions, watermark, image artifacts, lowres, ugly, jpeg artifacts, deformed, noisy image",
          "x-order": 1,
          "description": "Negative Input prompt"
        },
        "prompt_strength": {
          "type": "number",
          "title": "Prompt Strength",
          "display": "hidden",
          "default": 0.8,
          "maximum": 1,
          "minimum": 0,
          "x-order": 10,
          "description": "Prompt strength when using img2img / inpaint. 1.0 corresponds to full destruction of information in image"
        },
        "num_inference_steps": {
          "type": "integer",
          "title": "Num Inference Steps",
          "display": "hidden",
          "default": 8,
          "maximum": 100,
          "minimum": 1,
          "x-order": 8,
          "description": "Number of denoising steps"
        }
      }
    }
  },
  "imagegen/google_imagen3": {
    "name": "imagegen/google_imagen3",
    "schema": {
      "type": "object",
      "title": "Input",
      "required": [
        "prompt"
      ],
      "linkto": {
        "*": "*"
      },
      "map": {
        "prompt": "prompt",
        "negative_prompt": "negative_prompt"
      },
      "properties": {
        "prompt": {
          "type": "string",
          "title": "Prompt",
          "description": "The text prompt describing what you want to see",
          "x-order": 3
        },
        "negative_prompt": {
          "type": "string",
          "title": "Negative Prompt",
          "description": "A description of what to discourage in the generated images",
          "default": "",
          "x-order": 4
        },
        "aspect_ratio": {
          "type": "string",
          "title": "Aspect Ratio",
          "description": "The aspect ratio of the generated image",
          "enum": [
            "1:1",
            "16:9",
            "9:16",
            "3:4",
            "4:3"
          ],
          "default": "1:1",
          "x-order": 5
        },
        "num_images": {
          "type": "integer",
          "title": "Number of Images",
          "description": "Number of images to generate (1-4)",
          "minimum": 1,
          "maximum": 4,
          "default": 1,
          "x-order": 6
        },
        "seed": {
          "type": "integer",
          "title": "Seed",
          "description": "Random seed for reproducible generation",
          "x-order": 7
        }
      }
    }
  },
  "imagegen/google_imagen4": {
    "name": "imagegen/google_imagen4",
    "schema": {
      "type": "object",
      "title": "Input",
      "required": [
        "prompt"
      ],
      "translatable": [
        "prompt",
        "negative_prompt"
      ],
      "speech_enabled": [
        "prompt",
        "negative_prompt"
      ],
      "linkto": {
        "*": "*"
      },
      "map": {
        "prompt": "prompt",
        "negative_prompt": "negative_prompt"
      },
      "basic_properties": [
        "prompt",
        "negative_prompt",
        "aspect_ratio",
        "num_images"
      ],
      "advanced_properties": [
        "num_images",
        "seed"
      ],
      "bottom_properties": [
        "prompt",
        "num_images"
      ],
      "properties": {
        "prompt": {
          "type": "string",
          "title": "Prompt",
          "description": "The text prompt describing what you want to see",
          "x-order": 3
        },
        "negative_prompt": {
          "type": "string",
          "title": "Negative Prompt",
          "description": "A description of what to discourage in the generated images",
          "default": "",
          "x-order": 4
        },
        "aspect_ratio": {
          "type": "string",
          "title": "Aspect Ratio",
          "description": "The aspect ratio of the generated image",
          "enum": [
            "1:1",
            "16:9",
            "9:16",
            "3:4",
            "4:3"
          ],
          "default": "1:1",
          "x-order": 5
        },
        "num_images": {
          "type": "integer",
          "title": "Number of Images",
          "description": "Number of images to generate (1-4)",
          "minimum": 1,
          "maximum": 4,
          "default": 1,
          "x-order": 6
        },
        "seed": {
          "type": "integer",
          "title": "Seed",
          "description": "Random seed for reproducible generation",
          "x-order": 7
        }
      }
    }
  },
  "imagegen/flux_dev": {
    "name": "imagegen/flux_dev",
    "schema": {
      "type": "object",
      "title": "Input",
      "required": [
        "prompt"
      ],
      "translatable": [
        "prompt"
      ],
      "speech_enabled": [
        "prompt"
      ],
      "linkto": {
        "*": "*"
      },
      "map": {
        "prompt": "prompt"
      },
      "properties": {
        "seed": {
          "type": "integer",
          "title": "Seed",
          "default": -1,
          "x-order": 4,
          "description": "Seed"
        },
        "prompt": {
          "type": "string",
          "title": "Prompt",
          "x-order": 0,
          "description": "Prompt"
        },
        "guidance": {
          "type": "number",
          "title": "Guidance",
          "default": 7.5,
          "x-order": 3,
          "display": "hidden",
          "description": "Guidance scale"
        },
        "image_size": {
          "type": "integer",
          "title": "Image Size",
          "default": 1024,
          "display": "hidden",
          "x-order": 6,
          "description": "Base image size (longest side)"
        },
        "speed_mode": {
          "enum": [
            "Lightly Juiced 🍊 (more consistent)",
            "Juiced 🔥 (default)",
            "Extra Juiced 🔥 (more speed)",
            "Blink of an eye 👁️"
          ],
          "type": "string",
          "title": "speed_mode",
          "description": "Speed optimization level",
          "default": "Juiced 🔥 (default)",
          "display": "hidden",
          "x-order": 1
        },
        "aspect_ratio": {
          "enum": [
            "1:1",
            "16:9",
            "21:9",
            "3:2",
            "2:3",
            "4:5",
            "5:4",
            "3:4",
            "4:3",
            "9:16",
            "9:21"
          ],
          "type": "string",
          "title": "aspect_ratio",
          "description": "Aspect ratio of the output image",
          "default": "16:9",
          "x-order": 5
        },
        "output_format": {
          "enum": [
            "png",
            "jpg",
            "webp"
          ],
          "type": "string",
          "title": "output_format",
          "description": "Output format",
          "default": "png",
          "x-order": 7
        },
        "output_quality": {
          "type": "integer",
          "title": "Output Quality",
          "default": 80,
          "maximum": 100,
          "minimum": 1,
          "x-order": 8,
          "description": "Output quality (for jpg and webp)"
        },
        "num_inference_steps": {
          "type": "integer",
          "title": "Num Inference Steps",
          "default": 28,
          "x-order": 2,
          "display": "hidden",
          "description": "Number of inference steps"
        }
      }
    }
  },
  "imagegen/flux_dev_lora": {
    "name": "imagegen/flux_dev_lora",
    "schema": {
      "type": "object",
      "title": "Input",
      "required": [
        "prompt"
      ],
      "translatable": [
        "prompt"
      ],
      "speech_enabled": [
        "prompt"
      ],
      "linkto": {
        "*": "*"
      },
      "map": {
        "prompt": "prompt",
        "lora_air": "lora_air",
        "trigger_word": "trigger_word",
        "lora_name": "lora_name",
        "lora_hero": "lora_hero"
      },
      "properties": {
        "seed": {
          "type": "integer",
          "title": "Seed",
          "default": -1,
          "x-order": 4,
          "description": "Seed"
        },
        "prompt": {
          "type": "string",
          "title": "Prompt",
          "x-order": 0,
          "description": "Prompt"
        },
        "lora_air": {
          "type": "string",
          "title": "LoRA Model",
          "x-order": 9,
          "display": "hidden",
          "description": "LoRA model to use for generation"
        },
        "lora_name": {
          "type": "string",
          "title": "LoRA Name",
          "x-order": 11,
          "description": "LoRA name. Go to /creation/lora to find LoRA models."
        },
        "trigger_word": {
          "type": "string",
          "title": "Trigger Word for LORA",
          "x-order": 12,
          "description": "Trigger word to use for generation"
        },
        "lora_hero": {
          "type": "string",
          "title": "LoRA Image",
          "x-order": 10,
          "format": "uri",
          "fileType": "image",
          "description": "LoRA hero image. Go to /creation/lora to find LoRA models."
        },
        "lora_weight": {
          "type": "number",
          "title": "LoRA Weight",
          "x-order": 12,
          "default": 1,
          "minimum": -4,
          "maximum": 4,
          "step": 0.1,
          "description": "LoRA weight to use for generation"
        },
        "guidance": {
          "type": "number",
          "title": "Guidance",
          "default": 7.5,
          "x-order": 3,
          "display": "hidden",
          "description": "Guidance scale"
        },
        "image_size": {
          "type": "integer",
          "title": "Image Size",
          "default": 1024,
          "display": "hidden",
          "x-order": 6,
          "description": "Base image size (longest side)"
        },
        "speed_mode": {
          "enum": [
            "Lightly Juiced 🍊 (more consistent)",
            "Juiced 🔥 (default)",
            "Extra Juiced 🔥 (more speed)",
            "Blink of an eye 👁️"
          ],
          "type": "string",
          "title": "speed_mode",
          "description": "Speed optimization level",
          "default": "Juiced 🔥 (default)",
          "display": "hidden",
          "x-order": 1
        },
        "aspect_ratio": {
          "enum": [
            "1:1",
            "16:9",
            "21:9",
            "3:2",
            "2:3",
            "4:5",
            "5:4",
            "3:4",
            "4:3",
            "9:16",
            "9:21"
          ],
          "type": "string",
          "title": "aspect_ratio",
          "description": "Aspect ratio of the output image",
          "default": "1:1",
          "x-order": 5
        },
        "output_format": {
          "enum": [
            "png",
            "jpg",
            "webp"
          ],
          "type": "string",
          "title": "output_format",
          "display": "hidden",
          "description": "Output format",
          "default": "png",
          "x-order": 7
        },
        "output_quality": {
          "type": "integer",
          "title": "Output Quality",
          "default": 80,
          "maximum": 100,
          "minimum": 1,
          "x-order": 8,
          "display": "hidden",
          "description": "Output quality (for jpg and webp)"
        },
        "num_inference_steps": {
          "type": "integer",
          "title": "Num Inference Steps",
          "default": 28,
          "x-order": 2,
          "display": "hidden",
          "description": "Number of inference steps"
        }
      }
    }
  },
  "imagegen/finetuned_base": {
    "name": "imagegen/finetuned_base",
    "schema": {
      "type": "object",
      "title": "Input",
      "required": [
        "prompt"
      ],
      "translatable": [
        "prompt"
      ],
      "speech_enabled": [
        "prompt"
      ],
      "linkto": {
        "*": "*"
      },
      "map": {
        "prompt": "prompt",
        "model_air": "model_air",
        "model_name": "model_name",
        "model_hero": "model_hero",
        "architecture": "architecture"
      },
      "properties": {
        "seed": {
          "type": "integer",
          "title": "Seed",
          "default": -1,
          "x-order": 4,
          "description": "Seed"
        },
        "prompt": {
          "type": "string",
          "title": "Prompt",
          "x-order": 0,
          "description": "Prompt"
        },
        "model_air": {
          "type": "string",
          "title": "Model Air",
          "x-order": 9,
          "display": "hidden",
          "description": "model air to use for generation"
        },
        "architecture": {
          "type": "string",
          "title": "Architecture",
          "x-order": 10,
          "display": "hidden",
          "description": "Architecture"
        },
        "model_name": {
          "type": "string",
          "title": "Model Name",
          "x-order": 11,
          "description": "Model name. Go to /creation/finetuned_base to find model models."
        },
        "trigger_word": {
          "type": "string",
          "title": "Trigger Word for model",
          "x-order": 12,
          "display": "hidden",
          "description": "Trigger word to use for generation"
        },
        "model_hero": {
          "type": "string",
          "title": "Model Image",
          "x-order": 10,
          "format": "uri",
          "fileType": "image",
          "description": "Model hero image. Go to /creation/finetuned_base to find model models."
        },
        "guidance": {
          "type": "number",
          "title": "Guidance",
          "default": 7.5,
          "x-order": 3,
          "display": "hidden",
          "description": "Guidance scale"
        },
        "image_size": {
          "type": "integer",
          "title": "Image Size",
          "default": 1024,
          "display": "hidden",
          "x-order": 6,
          "description": "Base image size (longest side)"
        },
        "speed_mode": {
          "enum": [
            "Lightly Juiced 🍊 (more consistent)",
            "Juiced 🔥 (default)",
            "Extra Juiced 🔥 (more speed)",
            "Blink of an eye 👁️"
          ],
          "type": "string",
          "title": "speed_mode",
          "description": "Speed optimization level",
          "default": "Juiced 🔥 (default)",
          "display": "hidden",
          "x-order": 1
        },
        "aspect_ratio": {
          "enum": [
            "1:1",
            "16:9",
            "21:9",
            "3:2",
            "2:3",
            "4:5",
            "5:4",
            "3:4",
            "4:3",
            "9:16",
            "9:21"
          ],
          "type": "string",
          "title": "aspect_ratio",
          "description": "Aspect ratio of the output image",
          "default": "1:1",
          "x-order": 5
        },
        "output_format": {
          "enum": [
            "png",
            "jpg",
            "webp"
          ],
          "type": "string",
          "title": "output_format",
          "display": "hidden",
          "description": "Output format",
          "default": "png",
          "x-order": 7
        },
        "output_quality": {
          "type": "integer",
          "title": "Output Quality",
          "default": 80,
          "maximum": 100,
          "minimum": 1,
          "x-order": 8,
          "display": "hidden",
          "description": "Output quality (for jpg and webp)"
        },
        "num_inference_steps": {
          "type": "integer",
          "title": "Num Inference Steps",
          "default": 28,
          "x-order": 2,
          "display": "hidden",
          "description": "Number of inference steps"
        }
      }
    }
  },
  "imagegen/sdxl_lora": {
    "name": "imagegen/sdxl_lora",
    "schema": {
      "type": "object",
      "title": "Input",
      "required": [
        "prompt"
      ],
      "translatable": [
        "prompt"
      ],
      "speech_enabled": [
        "prompt"
      ],
      "linkto": {
        "*": "*"
      },
      "map": {
        "prompt": "prompt",
        "lora_air": "lora_air",
        "trigger_word": "trigger_word",
        "lora_name": "lora_name",
        "lora_hero": "lora_hero"
      },
      "properties": {
        "seed": {
          "type": "integer",
          "title": "Seed",
          "default": -1,
          "x-order": 4,
          "description": "Seed"
        },
        "prompt": {
          "type": "string",
          "title": "Prompt",
          "x-order": 0,
          "description": "Prompt"
        },
        "lora_air": {
          "type": "string",
          "title": "LoRA Model",
          "x-order": 9,
          "display": "hidden",
          "description": "LoRA model to use for generation"
        },
        "lora_name": {
          "type": "string",
          "title": "LoRA Name",
          "x-order": 11,
          "description": "LoRA name. Go to /creation/lora to find LoRA models."
        },
        "trigger_word": {
          "type": "string",
          "title": "Trigger Word for LORA",
          "x-order": 12,
          "description": "Trigger word to use for generation"
        },
        "lora_hero": {
          "type": "string",
          "title": "LoRA Image",
          "x-order": 10,
          "format": "uri",
          "fileType": "image",
          "description": "LoRA hero image. Go to /creation/lora to find LoRA models."
        },
        "lora_weight": {
          "type": "number",
          "title": "LoRA Weight",
          "x-order": 12,
          "default": 1,
          "minimum": -4,
          "maximum": 4,
          "step": 0.1,
          "description": "LoRA weight to use for generation"
        },
        "guidance": {
          "type": "number",
          "title": "Guidance",
          "default": 7.5,
          "x-order": 3,
          "display": "hidden",
          "description": "Guidance scale"
        },
        "image_size": {
          "type": "integer",
          "title": "Image Size",
          "default": 1024,
          "display": "hidden",
          "x-order": 6,
          "description": "Base image size (longest side)"
        },
        "speed_mode": {
          "enum": [
            "Lightly Juiced 🍊 (more consistent)",
            "Juiced 🔥 (default)",
            "Extra Juiced 🔥 (more speed)",
            "Blink of an eye 👁️"
          ],
          "type": "string",
          "title": "speed_mode",
          "description": "Speed optimization level",
          "default": "Juiced 🔥 (default)",
          "display": "hidden",
          "x-order": 1
        },
        "aspect_ratio": {
          "enum": [
            "1:1",
            "16:9",
            "21:9",
            "3:2",
            "2:3",
            "4:5",
            "5:4",
            "3:4",
            "4:3",
            "9:16",
            "9:21"
          ],
          "type": "string",
          "title": "aspect_ratio",
          "description": "Aspect ratio of the output image",
          "default": "1:1",
          "x-order": 5
        },
        "output_format": {
          "enum": [
            "png",
            "jpg",
            "webp"
          ],
          "type": "string",
          "title": "output_format",
          "display": "hidden",
          "description": "Output format",
          "default": "png",
          "x-order": 7
        },
        "output_quality": {
          "type": "integer",
          "title": "Output Quality",
          "default": 80,
          "maximum": 100,
          "minimum": 1,
          "x-order": 8,
          "display": "hidden",
          "description": "Output quality (for jpg and webp)"
        },
        "num_inference_steps": {
          "type": "integer",
          "title": "Num Inference Steps",
          "default": 28,
          "x-order": 2,
          "display": "hidden",
          "description": "Number of inference steps"
        }
      }
    }
  },
  "imagegen/generic_lora": {
    "name": "imagegen/generic_lora",
    "schema": {
      "type": "object",
      "title": "Input",
      "required": [
        "prompt"
      ],
      "translatable": [
        "prompt"
      ],
      "speech_enabled": [
        "prompt"
      ],
      "linkto": {
        "*": "*"
      },
      "map": {
        "prompt": "prompt",
        "lora_air": "lora_air",
        "model_air": "model_air",
        "architecture": "architecture",
        "trigger_word": "trigger_word",
        "lora_name": "lora_name",
        "lora_hero": "lora_hero"
      },
      "properties": {
        "seed": {
          "type": "integer",
          "title": "Seed",
          "default": -1,
          "x-order": 4,
          "description": "Seed"
        },
        "prompt": {
          "type": "string",
          "title": "Prompt",
          "x-order": 0,
          "description": "Prompt"
        },
        "lora_air": {
          "type": "string",
          "title": "LoRA Model",
          "x-order": 9,
          "display": "hidden",
          "description": "LoRA model to use for generation"
        },
        "lora_name": {
          "type": "string",
          "title": "LoRA Name",
          "x-order": 11,
          "description": "LoRA name. Go to /creation/lora to find LoRA models."
        },
        "model_air": {
          "type": "string",
          "title": "Model",
          "x-order": 11,
          "display": "hidden",
          "description": "Model to use for generation"
        },
        "architecture": {
          "type": "string",
          "title": "Architecture",
          "x-order": 11,
          "display": "hidden",
          "description": "Architecture"
        },
        "trigger_word": {
          "type": "string",
          "title": "Trigger Word for LORA",
          "x-order": 12,
          "description": "Trigger word to use for generation"
        },
        "lora_hero": {
          "type": "string",
          "title": "LoRA Image",
          "x-order": 10,
          "format": "uri",
          "fileType": "image",
          "description": "LoRA hero image. Go to /creation/lora to find LoRA models."
        },
        "lora_weight": {
          "type": "number",
          "title": "LoRA Weight",
          "x-order": 12,
          "default": 1,
          "minimum": -4,
          "maximum": 4,
          "step": 0.1,
          "description": "LoRA weight to use for generation"
        },
        "guidance": {
          "type": "number",
          "title": "Guidance",
          "default": 7.5,
          "x-order": 3,
          "display": "hidden",
          "description": "Guidance scale"
        },
        "image_size": {
          "type": "integer",
          "title": "Image Size",
          "default": 1024,
          "display": "hidden",
          "x-order": 6,
          "description": "Base image size (longest side)"
        },
        "speed_mode": {
          "enum": [
            "Lightly Juiced 🍊 (more consistent)",
            "Juiced 🔥 (default)",
            "Extra Juiced 🔥 (more speed)",
            "Blink of an eye 👁️"
          ],
          "type": "string",
          "title": "speed_mode",
          "description": "Speed optimization level",
          "default": "Juiced 🔥 (default)",
          "display": "hidden",
          "x-order": 1
        },
        "aspect_ratio": {
          "enum": [
            "1:1",
            "16:9",
            "21:9",
            "3:2",
            "2:3",
            "4:5",
            "5:4",
            "3:4",
            "4:3",
            "9:16",
            "9:21"
          ],
          "type": "string",
          "title": "aspect_ratio",
          "description": "Aspect ratio of the output image",
          "default": "1:1",
          "x-order": 5
        },
        "output_format": {
          "enum": [
            "png",
            "jpg",
            "webp"
          ],
          "type": "string",
          "title": "output_format",
          "display": "hidden",
          "description": "Output format",
          "default": "png",
          "x-order": 7
        },
        "output_quality": {
          "type": "integer",
          "title": "Output Quality",
          "default": 80,
          "maximum": 100,
          "minimum": 1,
          "x-order": 8,
          "display": "hidden",
          "description": "Output quality (for jpg and webp)"
        },
        "num_inference_steps": {
          "type": "integer",
          "title": "Num Inference Steps",
          "default": 28,
          "x-order": 2,
          "display": "hidden",
          "description": "Number of inference steps"
        }
      }
    }
  },
  "imagegen/google_imagen4_ultra": {
    "name": "imagegen/google_imagen4_ultra",
    "schema": {
      "type": "object",
      "title": "Input",
      "required": [
        "prompt"
      ],
      "translatable": [
        "prompt",
        "negative_prompt"
      ],
      "speech_enabled": [
        "prompt",
        "negative_prompt"
      ],
      "linkto": {
        "*": "*"
      },
      "map": {
        "prompt": "prompt",
        "negative_prompt": "negative_prompt"
      },
      "basic_properties": [
        "prompt",
        "negative_prompt",
        "aspect_ratio",
        "num_images"
      ],
      "advanced_properties": [
        "num_images",
        "seed"
      ],
      "bottom_properties": [
        "prompt",
        "num_images"
      ],
      "properties": {
        "prompt": {
          "type": "string",
          "title": "Prompt",
          "description": "The text prompt describing what you want to see",
          "x-order": 3
        },
        "negative_prompt": {
          "type": "string",
          "title": "Negative Prompt",
          "description": "A description of what to discourage in the generated images",
          "default": "",
          "display": "hidden",
          "x-order": 4
        },
        "aspect_ratio": {
          "type": "string",
          "title": "Aspect Ratio",
          "description": "The aspect ratio of the generated image",
          "enum": [
            "1:1",
            "16:9",
            "9:16",
            "3:4",
            "4:3"
          ],
          "default": "1:1",
          "x-order": 5
        },
        "num_images": {
          "type": "integer",
          "title": "Number of Images",
          "description": "Number of images to generate (1-4)",
          "minimum": 1,
          "maximum": 4,
          "default": 1,
          "x-order": 6
        },
        "seed": {
          "type": "integer",
          "title": "Seed",
          "description": "Random seed for reproducible generation",
          "x-order": 7
        }
      }
    }
  },
  "imagegen/minimax-image-o1": {
    "name": "imagegen/minimax-image-o1",
    "schema": {
      "type": "object",
      "title": "Input",
      "required": [
        "prompt"
      ],
      "translatable": [
        "prompt"
      ],
      "speech_enabled": [
        "prompt"
      ],
      "linkto": {
        "*": "*"
      },
      "map": {
        "prompt": "prompt"
      },
      "properties": {
        "prompt": {
          "type": "string",
          "title": "Prompt",
          "x-order": 0,
          "description": "Text prompt for generation"
        },
        "aspect_ratio": {
          "enum": [
            "1:1",
            "16:9",
            "4:3",
            "3:2",
            "2:3",
            "3:4",
            "9:16",
            "21:9"
          ],
          "type": "string",
          "title": "aspect_ratio",
          "description": "Image aspect ratio",
          "default": "1:1",
          "x-order": 1
        },
        "number_of_images": {
          "type": "integer",
          "title": "Number Of Images",
          "default": 1,
          "maximum": 9,
          "minimum": 1,
          "x-order": 2,
          "description": "Number of images to generate"
        },
        "prompt_optimizer": {
          "type": "boolean",
          "title": "Prompt Optimizer",
          "default": true,
          "x-order": 3,
          "description": "Use prompt optimizer"
        },
        "subject_reference": {
          "type": "string",
          "title": "Subject Reference",
          "fileType": "image",
          "format": "uri",
          "x-order": 4,
          "description": "An optional character reference image (human face) to use as the subject in the generated image(s)."
        }
      }
    }
  },
  "imagegen/hidream_l1_full": {
    "name": "imagegen/hidream_l1_full",
    "schema": {
      "type": "object",
      "title": "Input",
      "required": [
        "prompt"
      ],
      "translatable": [
        "prompt"
      ],
      "speech_enabled": [
        "prompt"
      ],
      "linkto": {
        "*": "*"
      },
      "map": {
        "prompt": "prompt"
      },
      "properties": {
        "seed": {
          "type": "integer",
          "title": "Seed",
          "default": -1,
          "x-order": 4,
          "description": "Random seed (-1 for random)"
        },
        "prompt": {
          "type": "string",
          "title": "Prompt",
          "x-order": 0,
          "description": "Prompt"
        },
        "model_type": {
          "enum": [
            "full"
          ],
          "type": "string",
          "title": "model_type",
          "description": "Model type",
          "default": "full",
          "x-order": 1
        },
        "resolution": {
          "enum": [
            "1024 × 1024 (Square)",
            "768 × 1360 (Portrait)",
            "1360 × 768 (Landscape)",
            "880 × 1168 (Portrait)",
            "1168 × 880 (Landscape)",
            "1248 × 832 (Landscape)",
            "832 × 1248 (Portrait)"
          ],
          "type": "string",
          "title": "resolution",
          "description": "Output resolution",
          "default": "1024 × 1024 (Square)",
          "x-order": 3
        },
        "speed_mode": {
          "enum": [
            "Unsqueezed 🍋 (highest quality)",
            "Lightly Juiced 🍊 (more consistent)",
            "Juiced 🔥 (more speed)",
            "Extra Juiced 🚀 (even more speed)"
          ],
          "type": "string",
          "title": "speed_mode",
          "description": "Speed optimization level",
          "default": "Lightly Juiced 🍊 (more consistent)",
          "x-order": 2
        },
        "output_format": {
          "enum": [
            "png",
            "jpg",
            "webp"
          ],
          "type": "string",
          "title": "output_format",
          "description": "Output format",
          "default": "webp",
          "x-order": 5
        },
        "output_quality": {
          "type": "integer",
          "title": "Output Quality",
          "default": 100,
          "maximum": 100,
          "minimum": 1,
          "x-order": 6,
          "description": "Output quality (for jpg and webp)"
        }
      }
    }
  },
  "imagegen/hidream_e1_full": {
    "name": "imagegen/hidream_e1_full",
    "schema": {
      "type": "object",
      "title": "Input",
      "required": [
        "edit_instruction",
        "image_url"
      ],
      "translatable": [
        "edit_instruction",
        "target_image_description",
        "negative_prompt"
      ],
      "speech_enabled": [
        "edit_instruction",
        "target_image_description",
        "negative_prompt"
      ],
      "linkto": {
        "*": "*"
      },
      "map": {
        "edit_instruction": "prompt",
        "negative_prompt": "negative_prompt"
      },
      "properties": {
        "edit_instruction": {
          "type": "string",
          "title": "Edit Instruction",
          "description": "The instruction to edit the image.",
          "x-order": 0
        },
        "target_image_description": {
          "type": "string",
          "title": "Target Image Description",
          "description": "The description of the target image after your edits have been made. Leave this blank to allow the model to use its own imagination.",
          "x-order": 1
        },
        "negative_prompt": {
          "type": "string",
          "title": "Negative Prompt",
          "description": "The negative prompt to use. Use it to address details that you don't want in the image. This could be colors, objects, scenery and even the small details (e.g. moustache, blurry, low resolution).",
          "default": "low resolution, blur",
          "x-order": 2
        },
        "image_url": {
          "type": "string",
          "title": "Image URL",
          "description": "URL of an input image to edit.",
          "format": "uri",
          "x-order": 3
        },
        "num_inference_steps": {
          "type": "integer",
          "title": "Number of Inference Steps",
          "description": "The number of inference steps to perform.",
          "default": 50,
          "minimum": 1,
          "maximum": 50,
          "x-order": 4
        },
        "seed": {
          "type": "integer",
          "title": "Seed",
          "description": "The same seed and the same prompt given to the same version of the model will output the same image every time.",
          "x-order": 5
        },
        "guidance_scale": {
          "type": "number",
          "title": "Guidance Scale",
          "description": "The CFG (Classifier Free Guidance) scale is a measure of how close you want the model to stick to your prompt when looking for a related image to show you.",
          "default": 3.5,
          "minimum": 0,
          "maximum": 20,
          "x-order": 6
        },
        "image_guidance_scale": {
          "type": "number",
          "title": "Image Guidance Scale",
          "description": "The CFG (Classifier Free Guidance) scale is a measure of how close you want the model to stick to your initial image when looking for a related image to show you.",
          "default": 2,
          "minimum": 0,
          "maximum": 20,
          "x-order": 7
        },
        "num_images": {
          "type": "integer",
          "title": "Number of Images",
          "description": "The number of images to generate.",
          "default": 1,
          "minimum": 1,
          "maximum": 4,
          "x-order": 9
        },
        "enable_safety_checker": {
          "type": "boolean",
          "title": "Enable Safety Checker",
          "description": "If set to true, the safety checker will be enabled.",
          "default": true,
          "x-order": 10
        },
        "output_format": {
          "type": "string",
          "title": "Output Format",
          "description": "The format of the generated image.",
          "enum": [
            "jpeg",
            "png"
          ],
          "default": "jpeg",
          "x-order": 11
        }
      }
    }
  },
  "imagegen/freepik_f_lite": {
    "name": "imagegen/freepik_f_lite",
    "schema": {
      "type": "object",
      "title": "Input",
      "required": [
        "prompt"
      ],
      "translatable": [
        "prompt"
      ],
      "speech_enabled": [
        "prompt"
      ],
      "linkto": {
        "*": "*"
      },
      "map": {
        "prompt": "prompt"
      },
      "properties": {
        "seed": {
          "type": "integer",
          "title": "Seed",
          "default": -1,
          "x-order": 3,
          "description": "Seed"
        },
        "prompt": {
          "type": "string",
          "title": "Prompt",
          "x-order": 0,
          "description": "Prompt"
        },
        "guidance": {
          "type": "number",
          "title": "Guidance",
          "default": 3,
          "x-order": 2,
          "description": "Guidance scale"
        },
        "image_size": {
          "type": "integer",
          "title": "Image Size",
          "default": 1024,
          "x-order": 5,
          "description": "Base image size (longest side)"
        },
        "aspect_ratio": {
          "enum": [
            "1:1",
            "16:9",
            "21:9",
            "3:2",
            "2:3",
            "4:5",
            "5:4",
            "3:4",
            "4:3",
            "9:16",
            "9:21"
          ],
          "type": "string",
          "title": "aspect_ratio",
          "description": "Aspect ratio of the output image",
          "default": "1:1",
          "x-order": 4
        },
        "output_format": {
          "enum": [
            "png",
            "jpg",
            "webp"
          ],
          "type": "string",
          "title": "output_format",
          "description": "Output format",
          "default": "png",
          "x-order": 6
        },
        "output_quality": {
          "type": "integer",
          "title": "Output Quality",
          "default": 80,
          "maximum": 100,
          "minimum": 1,
          "x-order": 7,
          "description": "Output quality (for jpg and webp)"
        },
        "num_inference_steps": {
          "type": "integer",
          "title": "Num Inference Steps",
          "default": 30,
          "x-order": 1,
          "description": "Number of inference steps"
        }
      }
    }
  },
  "imagegen/ideogram_v3": {
    "name": "imagegen/ideogram_v3",
    "schema": {
      "type": "object",
      "title": "Input",
      "required": [
        "prompt"
      ],
      "transatable": [
        "prompt"
      ],
      "speech_enabled": [
        "prompt"
      ],
      "linkto": {
        "*": "*"
      },
      "map": {
        "prompt": "prompt"
      },
      "properties": {
        "mask": {
          "type": "string",
          "title": "Mask",
          "format": "uri",
          "extra": "Create mask",
          "default_extra": "image",
          "default_type": "mask",
          "x-order": 5,
          "display": "hidden",
          "description": "A black and white image. Black pixels are inpainted, white pixels are preserved. The mask will be resized to match the image size."
        },
        "seed": {
          "type": "integer",
          "title": "Seed",
          "maximum": 2147483647,
          "x-order": 8,
          "description": "Random seed. Set for reproducible generation"
        },
        "image": {
          "type": "string",
          "title": "Image",
          "format": "uri",
          "x-order": 4,
          "display": "hidden",
          "description": "An image file to use for inpainting. You must also use a mask."
        },
        "prompt": {
          "type": "string",
          "title": "Prompt",
          "x-order": 0,
          "description": "Text prompt for image generation"
        },
        "resolution": {
          "enum": [
            "None",
            "512x1536",
            "576x1408",
            "576x1472",
            "576x1536",
            "640x1344",
            "640x1408",
            "640x1472",
            "640x1536",
            "704x1152",
            "704x1216",
            "704x1280",
            "704x1344",
            "704x1408",
            "704x1472",
            "736x1312",
            "768x1088",
            "768x1216",
            "768x1280",
            "768x1344",
            "800x1280",
            "832x960",
            "832x1024",
            "832x1088",
            "832x1152",
            "832x1216",
            "832x1248",
            "864x1152",
            "896x960",
            "896x1024",
            "896x1088",
            "896x1120",
            "896x1152",
            "960x832",
            "960x896",
            "960x1024",
            "960x1088",
            "1024x832",
            "1024x896",
            "1024x960",
            "1024x1024",
            "1088x768",
            "1088x832",
            "1088x896",
            "1088x960",
            "1120x896",
            "1152x704",
            "1152x832",
            "1152x864",
            "1152x896",
            "1216x704",
            "1216x768",
            "1216x832",
            "1248x832",
            "1280x704",
            "1280x768",
            "1280x800",
            "1312x736",
            "1344x640",
            "1344x704",
            "1344x768",
            "1408x576",
            "1408x640",
            "1408x704",
            "1472x576",
            "1472x640",
            "1472x704",
            "1536x512",
            "1536x576",
            "1536x640"
          ],
          "type": "string",
          "title": "resolution",
          "description": "Resolution. Overrides aspect ratio. Ignored if an inpainting image is given.",
          "default": "None",
          "x-order": 2
        },
        "style_type": {
          "enum": [
            "None",
            "Auto",
            "General",
            "Realistic",
            "Design"
          ],
          "type": "string",
          "title": "style_type",
          "description": "The styles help define the specific aesthetic of the image you want to generate.",
          "default": "None",
          "x-order": 6
        },
        "aspect_ratio": {
          "enum": [
            "1:3",
            "3:1",
            "1:2",
            "2:1",
            "9:16",
            "16:9",
            "10:16",
            "16:10",
            "2:3",
            "3:2",
            "3:4",
            "4:3",
            "4:5",
            "5:4",
            "1:1"
          ],
          "type": "string",
          "title": "aspect_ratio",
          "description": "Aspect ratio. Ignored if a resolution or inpainting image is given.",
          "default": "1:1",
          "x-order": 1
        },
        "magic_prompt_option": {
          "enum": [
            "Auto",
            "On",
            "Off"
          ],
          "type": "string",
          "title": "magic_prompt_option",
          "description": "Magic Prompt will interpret your prompt and optimize it to maximize variety and quality of the images generated. You can also use it to write prompts in different languages.",
          "default": "Auto",
          "x-order": 3
        },
        "style_reference_images": {
          "type": "array",
          "items": {
            "type": "string",
            "format": "uri"
          },
          "title": "Style Reference Images",
          "x-order": 7,
          "description": "A list of images to use as style references. Provide image or zip"
        }
      }
    }
  },
  "imagegen/flux1_1_pro_ultra_finetuned": {
    "name": "imagegen/flux1_1_pro_ultra_finetuned",
    "schema": {
      "type": "object",
      "title": "Input",
      "required": [
        "prompt",
        "finetune_id"
      ],
      "translatable": [
        "prompt"
      ],
      "speech_enabled": [
        "prompt"
      ],
      "linkto": {
        "*": "*"
      },
      "map": {
        "prompt": "prompt"
      },
      "properties": {
        "raw": {
          "type": "boolean",
          "title": "Raw",
          "default": false,
          "x-order": 8,
          "description": "Generate less processed, more natural-looking images"
        },
        "seed": {
          "type": "integer",
          "title": "Seed",
          "x-order": 7,
          "description": "Random seed. Set for reproducible generation"
        },
        "prompt": {
          "type": "string",
          "title": "Prompt",
          "x-order": 0,
          "description": "Text prompt for image generation"
        },
        "finetune_id": {
          "type": "string",
          "title": "Finetune Id",
          "x-order": 1,
          "description": "Finetune ID for making images using a previously trained fine-tune. Only IDs from trainings made using Flux Pro Ultra fine-tuning model are supported.",
          "extra": "Select a finetune",
          "default_type": "link",
          "default_extra": "https://app.genvrresearch.com/creation/training"
        },
        "aspect_ratio": {
          "enum": [
            "21:9",
            "16:9",
            "3:2",
            "4:3",
            "5:4",
            "1:1",
            "4:5",
            "3:4",
            "2:3",
            "9:16",
            "9:21"
          ],
          "type": "string",
          "title": "aspect_ratio",
          "description": "Aspect ratio for the generated image",
          "default": "1:1",
          "x-order": 5
        },
        "image_prompt": {
          "type": "string",
          "title": "Image Prompt",
          "format": "uri",
          "x-order": 3,
          "description": "Image to use with Flux Redux. This is used together with the text prompt to guide the generation towards the composition of the image_prompt. Must be jpeg, png, gif, or webp."
        },
        "output_format": {
          "enum": [
            "jpg",
            "png"
          ],
          "type": "string",
          "title": "output_format",
          "description": "Format of the output images.",
          "default": "jpg",
          "x-order": 9
        },
        "safety_tolerance": {
          "type": "integer",
          "title": "Safety Tolerance",
          "default": 2,
          "maximum": 6,
          "minimum": 1,
          "x-order": 6,
          "description": "Safety tolerance, 1 is most strict and 6 is most permissive"
        },
        "finetune_strength": {
          "type": "number",
          "title": "Finetune Strength",
          "default": 1,
          "maximum": 2,
          "minimum": 0,
          "x-order": 2,
          "description": "Controls finetune influence"
        },
        "image_prompt_strength": {
          "type": "number",
          "title": "Image Prompt Strength",
          "default": 0.1,
          "maximum": 1,
          "minimum": 0,
          "x-order": 4,
          "description": "Blend between the prompt and the image prompt."
        }
      }
    }
  },
  "imagegen/flux_dev_finetuned": {
    "name": "imagegen/flux_dev_finetuned",
    "schema": {
      "type": "object",
      "title": "Input",
      "required": [
        "prompt"
      ],
      "translatable": [
        "prompt"
      ],
      "speech_enabled": [
        "prompt"
      ],
      "linkto": {
        "*": "*"
      },
      "map": {
        "prompt": "prompt"
      },
      "properties": {
        "prompt": {
          "type": "string",
          "title": "Prompt",
          "description": "The prompt to generate an image from.",
          "x-order": 0
        },
        "image_size": {
          "type": "string",
          "enum": [
            "square_hd",
            "square",
            "portrait_4_3",
            "portrait_16_9",
            "landscape_4_3",
            "landscape_16_9"
          ],
          "title": "Image Size",
          "description": "The size of the generated image. You can use predefined sizes or specify custom width and height.",
          "default": "landscape_4_3",
          "x-order": 1
        },
        "num_inference_steps": {
          "type": "integer",
          "title": "Number of Inference Steps",
          "description": "The number of inference steps to perform.",
          "default": 28,
          "minimum": 1,
          "maximum": 50,
          "step": 1,
          "x-order": 2
        },
        "seed": {
          "type": "integer",
          "title": "Seed",
          "description": "The same seed and the same prompt given to the same version of the model will output the same image every time.",
          "x-order": 3
        },
        "loras": {
          "type": "array",
          "title": "LoRAs",
          "description": "The LoRAs to use for the image generation. You can use any number of LoRAs and they will be merged together to generate the final image.",
          "items": {
            "type": "string",
            "format": "uri",
            "fileType": "image"
          },
          "display": "hidden",
          "default": [],
          "action": "pass",
          "x-order": 4
        },
        "guidance_scale": {
          "type": "number",
          "title": "Guidance Scale",
          "description": "The CFG (Classifier Free Guidance) scale is a measure of how close you want the model to stick to your prompt when looking for a related image to show you.",
          "default": 3.5,
          "minimum": 0,
          "maximum": 20,
          "step": 0.1,
          "x-order": 5
        },
        "lora_scale": {
          "type": "number",
          "title": "LoRA Scale",
          "description": "The scale of the LoRA to use for the image generation.",
          "default": 1,
          "minimum": 0,
          "maximum": 4,
          "step": 0.1,
          "x-order": 6
        },
        "sync_mode": {
          "type": "boolean",
          "title": "Sync Mode",
          "description": "If set to true, the function will wait for the image to be generated and uploaded before returning the response. This will increase the latency of the function but it allows you to get the image directly in the response without going through the CDN.",
          "default": false,
          "display": "hidden",
          "x-order": 6
        },
        "num_images": {
          "type": "integer",
          "title": "Number of Images",
          "description": "The number of images to generate. This is always set to 1 for streaming output.",
          "default": 1,
          "minimum": 1,
          "maximum": 4,
          "display": "hidden",
          "x-order": 7
        },
        "enable_safety_checker": {
          "type": "boolean",
          "title": "Enable Safety Checker",
          "description": "If set to true, the safety checker will be enabled.",
          "default": false,
          "display": "hidden",
          "x-order": 8
        },
        "output_format": {
          "type": "string",
          "title": "Output Format",
          "description": "The format of the generated image.",
          "enum": [
            "jpeg",
            "png"
          ],
          "default": "jpeg",
          "x-order": 9
        }
      }
    }
  },
  "imagegen/leanardo_pheonix1": {
    "name": "imagegen/leanardo_pheonix1",
    "schema": {
      "type": "object",
      "title": "Input",
      "required": [
        "prompt"
      ],
      "translatable": [
        "prompt"
      ],
      "speech_enabled": [
        "prompt"
      ],
      "linkto": {
        "*": "*"
      },
      "map": {
        "prompt": "prompt"
      },
      "properties": {
        "style": {
          "enum": [
            "3d_render",
            "bokeh",
            "cinematic",
            "cinematic_concept",
            "creative",
            "dynamic",
            "fashion",
            "graphic_design_pop_art",
            "graphic_design_vector",
            "hdr",
            "illustration",
            "macro",
            "minimalist",
            "moody",
            "none",
            "portrait",
            "pro_bw_photography",
            "pro_color_photography",
            "pro_film_photography",
            "portrait_fashion",
            "ray_traced",
            "sketch_bw",
            "sketch_color",
            "stock_photo",
            "vibrant"
          ],
          "type": "string",
          "title": "style",
          "description": "Style to use for the output image",
          "default": "none",
          "x-order": 6
        },
        "prompt": {
          "type": "string",
          "title": "Prompt",
          "x-order": 0,
          "description": "Text prompt for generation"
        },
        "contrast": {
          "enum": [
            "low",
            "medium",
            "high"
          ],
          "type": "string",
          "title": "contrast",
          "description": "Contrast level",
          "default": "medium",
          "x-order": 3
        },
        "num_images": {
          "type": "integer",
          "title": "Num Images",
          "default": 1,
          "maximum": 8,
          "minimum": 1,
          "x-order": 5,
          "description": "Number of images to generate"
        },
        "aspect_ratio": {
          "enum": [
            "1:1",
            "16:9",
            "9:16",
            "3:2",
            "2:3",
            "4:5",
            "5:4",
            "3:4",
            "4:3",
            "2:1",
            "1:2",
            "3:1",
            "1:3"
          ],
          "type": "string",
          "title": "aspect_ratio",
          "description": "Aspect ratio of the output image",
          "default": "3:2",
          "x-order": 1
        },
        "prompt_enhance": {
          "type": "boolean",
          "title": "Prompt Enhance",
          "default": true,
          "x-order": 4,
          "description": "Whether to enhance the prompt"
        },
        "generation_mode": {
          "enum": [
            "fast",
            "quality",
            "ultra"
          ],
          "type": "string",
          "title": "generation_mode",
          "description": "Generation mode",
          "default": "quality",
          "x-order": 2
        }
      }
    }
  },
  "imagegen/gpt_image1": {
    "name": "imagegen/gpt_image1",
    "schema": {
      "type": "object",
      "title": "Input",
      "required": [
        "prompt"
      ],
      "translatable": [
        "prompt"
      ],
      "speech_enabled": [
        "prompt"
      ],
      "linkto": {
        "*": "*"
      },
      "map": {
        "prompt": "prompt"
      },
      "properties": {
        "prompt": {
          "type": "string",
          "title": "Prompt",
          "description": "The prompt to generate the image from.",
          "x-order": 1
        },
        "image_size": {
          "type": "string",
          "title": "Image Size",
          "description": "The size of the image to generate.",
          "enum": [
            "auto",
            "1024x1024",
            "1536x1024",
            "1024x1536"
          ],
          "default": "auto",
          "x-order": 2
        },
        "num_images": {
          "type": "integer",
          "title": "Number of Images",
          "description": "The number of images to generate.",
          "minimum": 1,
          "maximum": 4,
          "display": "hidden",
          "default": 1,
          "x-order": 3
        },
        "quality": {
          "type": "string",
          "title": "Quality",
          "description": "The quality of the image to generate.",
          "enum": [
            "auto",
            "low",
            "medium",
            "high"
          ],
          "default": "auto",
          "x-order": 4
        },
        "background": {
          "type": "string",
          "title": "Background",
          "description": "The background of the image to generate.",
          "enum": [
            "auto",
            "transparent",
            "opaque"
          ],
          "default": "auto",
          "x-order": 5
        }
      }
    }
  },
  "imagegen/bytedance_seedream3": {
    "name": "imagegen/bytedance_seedream3",
    "schema": {
      "type": "object",
      "title": "Input",
      "required": [
        "prompt"
      ],
      "translatable": [
        "prompt"
      ],
      "speech_enabled": [
        "prompt"
      ],
      "linkto": {
        "*": "*"
      },
      "map": {
        "prompt": "prompt"
      },
      "properties": {
        "seed": {
          "type": "integer",
          "title": "Seed",
          "x-order": 1,
          "nullable": true,
          "description": "Random seed. Set for reproducible generation"
        },
        "size": {
          "enum": [
            "small",
            "regular",
            "big"
          ],
          "type": "string",
          "title": "size",
          "description": "Big images will have their longest dimension be 2048px. Small images will have their shortest dimension be 512px. Regular images will always be 1 megapixel. Ignored if aspect ratio is custom.",
          "default": "regular",
          "x-order": 3
        },
        "width": {
          "type": "integer",
          "title": "Width",
          "default": 2048,
          "maximum": 2048,
          "minimum": 512,
          "x-order": 4,
          "description": "Image width"
        },
        "height": {
          "type": "integer",
          "title": "Height",
          "default": 2048,
          "maximum": 2048,
          "minimum": 512,
          "x-order": 5,
          "description": "Image height"
        },
        "prompt": {
          "type": "string",
          "title": "Prompt",
          "x-order": 0,
          "description": "Text prompt for image generation"
        },
        "aspect_ratio": {
          "enum": [
            "1:1",
            "3:4",
            "4:3",
            "16:9",
            "9:16",
            "2:3",
            "3:2",
            "21:9",
            "custom"
          ],
          "type": "string",
          "title": "aspect_ratio",
          "description": "Image aspect ratio. Set to 'custom' to specify width and height.",
          "default": "16:9",
          "x-order": 2
        },
        "guidance_scale": {
          "type": "number",
          "title": "Guidance Scale",
          "default": 2.5,
          "maximum": 10,
          "minimum": 1,
          "x-order": 6,
          "description": "Prompt adherence. Higher = more literal."
        }
      }
    }
  },
  "imagegen/bytedance_seedream4": {
    "name": "imagegen/bytedance_seedream4",
    "schema": {
      "type": "object",
      "title": "Input",
      "required": [
        "prompt"
      ],
      "translatable": [
        "prompt"
      ],
      "speech_enabled": [
        "prompt"
      ],
      "linkto": {
        "*": "*"
      },
      "map": {
        "prompt": "prompt"
      },
      "properties": {
        "prompt": {
          "type": "string",
          "title": "Prompt",
          "description": "The text prompt used to generate the image.",
          "x-order": 0
        },
        "image_size": {
          "type": "string",
          "title": "Image Size",
          "description": "The size of the generated image. Width and height must be between 512 and 4096.",
          "enum": [
            "square_hd",
            "square",
            "portrait_4_3",
            "portrait_16_9",
            "landscape_4_3",
            "landscape_16_9"
          ],
          "x-order": 1
        },
        "num_images": {
          "type": "integer",
          "title": "Number of Images",
          "description": "Number of times to retry generation with the prompt.",
          "default": 1,
          "minimum": 1,
          "display": "hidden",
          "x-order": 2
        },
        "seed": {
          "type": "integer",
          "title": "Seed",
          "description": "Random seed to control the stochasticity of image generation.",
          "x-order": 3
        },
        "enable_safety_checker": {
          "type": "boolean",
          "title": "Enable Safety Checker",
          "description": "Enable safety checker to prevent generating unsafe images",
          "default": false,
          "display": "hidden",
          "x-order": 4
        }
      }
    }
  },
  "imagegen/flux1_0_fast": {
    "name": "imagegen/flux1_0_fast",
    "schema": {
      "type": "object",
      "title": "Input",
      "required": [
        "prompt"
      ],
      "translatable": [
        "prompt"
      ],
      "speech_enabled": [
        "prompt"
      ],
      "linkto": {
        "*": "*"
      },
      "map": {
        "prompt": "prompt"
      },
      "properties": {
        "seed": {
          "type": "integer",
          "title": "Seed",
          "x-order": 4,
          "description": "Random seed. Set for reproducible generation"
        },
        "prompt": {
          "type": "string",
          "title": "Prompt",
          "x-order": 0,
          "description": "Prompt for generated image"
        },
        "megapixels": {
          "enum": [
            "1",
            "0.25"
          ],
          "type": "string",
          "title": "megapixels",
          "description": "Approximate number of megapixels for generated image",
          "default": "1",
          "x-order": 8
        },
        "speed_mode": {
          "enum": [
            "Base Model",
            "Lightly Juiced 🍊 (more consistent)",
            "Juiced 🔥 (default)",
            "Extra Juiced 💥 (more speed)"
          ],
          "type": "string",
          "title": "speed_mode",
          "description": "Run faster predictions with model optimized for speed",
          "default": "Juiced 🔥 (default)",
          "x-order": 7
        },
        "num_outputs": {
          "type": "integer",
          "title": "Num Outputs",
          "default": 1,
          "maximum": 4,
          "minimum": 1,
          "x-order": 2,
          "description": "Number of outputs to generate"
        },
        "aspect_ratio": {
          "enum": [
            "1:1",
            "16:9",
            "21:9",
            "3:2",
            "2:3",
            "4:5",
            "5:4",
            "3:4",
            "4:3",
            "9:16",
            "9:21"
          ],
          "type": "string",
          "title": "aspect_ratio",
          "description": "Aspect ratio of the output image",
          "default": "1:1",
          "x-order": 1
        },
        "output_format": {
          "enum": [
            "png",
            "jpg",
            "webp"
          ],
          "type": "string",
          "title": "output_format",
          "description": "Format of the output images",
          "default": "jpg",
          "x-order": 5
        },
        "output_quality": {
          "type": "integer",
          "title": "Output Quality",
          "default": 80,
          "maximum": 100,
          "minimum": 0,
          "x-order": 6,
          "description": "Quality when saving the output images, from 0 to 100. 100 is best quality, 0 is lowest quality. Not relevant for .png outputs"
        },
        "num_inference_steps": {
          "type": "integer",
          "title": "Num Inference Steps",
          "default": 4,
          "maximum": 4,
          "minimum": 1,
          "x-order": 3,
          "description": "Number of denoising steps. 4 is recommended, and lower number of steps produce lower quality outputs, faster."
        }
      }
    }
  },
  "imagegen/google_imagen4_fast": {
    "name": "imagegen/google_imagen4_fast",
    "schema": {
      "type": "object",
      "title": "Input",
      "required": [
        "prompt"
      ],
      "translatable": [
        "prompt",
        "negative_prompt"
      ],
      "speech_enabled": [
        "prompt",
        "negative_prompt"
      ],
      "linkto": {
        "*": "*"
      },
      "map": {
        "prompt": "prompt",
        "negative_prompt": "negative_prompt"
      },
      "basic_properties": [
        "prompt",
        "negative_prompt",
        "aspect_ratio",
        "num_images"
      ],
      "advanced_properties": [
        "num_images",
        "seed"
      ],
      "bottom_properties": [
        "prompt",
        "num_images"
      ],
      "properties": {
        "prompt": {
          "type": "string",
          "title": "Prompt",
          "description": "The text prompt describing what you want to see",
          "x-order": 3
        },
        "negative_prompt": {
          "type": "string",
          "title": "Negative Prompt",
          "description": "A description of what to discourage in the generated images",
          "default": "",
          "x-order": 4
        },
        "aspect_ratio": {
          "type": "string",
          "title": "Aspect Ratio",
          "description": "The aspect ratio of the generated image",
          "enum": [
            "1:1",
            "16:9",
            "9:16",
            "3:4",
            "4:3"
          ],
          "default": "1:1",
          "x-order": 5
        },
        "num_images": {
          "type": "integer",
          "title": "Number of Images",
          "description": "Number of images to generate (1-4)",
          "minimum": 1,
          "maximum": 4,
          "default": 1,
          "x-order": 6
        },
        "seed": {
          "type": "integer",
          "title": "Seed",
          "description": "Random seed for reproducible generation",
          "x-order": 7
        }
      }
    }
  },
  "imagegen/ideogram_v3_fast": {
    "name": "imagegen/ideogram_v3_fast",
    "schema": {
      "type": "object",
      "title": "Input",
      "required": [
        "prompt"
      ],
      "transatable": [
        "prompt"
      ],
      "speech_enabled": [
        "prompt"
      ],
      "linkto": {
        "*": "*"
      },
      "map": {
        "prompt": "prompt"
      },
      "properties": {
        "mask": {
          "type": "string",
          "title": "Mask",
          "format": "uri",
          "fileType": "image",
          "display": "hidden",
          "x-order": 5,
          "description": "A black and white image. Black pixels are inpainted, white pixels are preserved. The mask will be resized to match the image size."
        },
        "seed": {
          "type": "integer",
          "title": "Seed",
          "maximum": 2147483647,
          "x-order": 8,
          "description": "Random seed. Set for reproducible generation"
        },
        "image": {
          "type": "string",
          "title": "Image",
          "fileType": "image",
          "display": "hidden",
          "format": "uri",
          "x-order": 4,
          "description": "An image file to use for inpainting. You must also use a mask."
        },
        "prompt": {
          "type": "string",
          "title": "Prompt",
          "x-order": 0,
          "description": "Text prompt for image generation"
        },
        "resolution": {
          "enum": [
            "None",
            "512x1536",
            "576x1408",
            "576x1472",
            "576x1536",
            "640x1344",
            "640x1408",
            "640x1472",
            "640x1536",
            "704x1152",
            "704x1216",
            "704x1280",
            "704x1344",
            "704x1408",
            "704x1472",
            "736x1312",
            "768x1088",
            "768x1216",
            "768x1280",
            "768x1344",
            "800x1280",
            "832x960",
            "832x1024",
            "832x1088",
            "832x1152",
            "832x1216",
            "832x1248",
            "864x1152",
            "896x960",
            "896x1024",
            "896x1088",
            "896x1120",
            "896x1152",
            "960x832",
            "960x896",
            "960x1024",
            "960x1088",
            "1024x832",
            "1024x896",
            "1024x960",
            "1024x1024",
            "1088x768",
            "1088x832",
            "1088x896",
            "1088x960",
            "1120x896",
            "1152x704",
            "1152x832",
            "1152x864",
            "1152x896",
            "1216x704",
            "1216x768",
            "1216x832",
            "1248x832",
            "1280x704",
            "1280x768",
            "1280x800",
            "1312x736",
            "1344x640",
            "1344x704",
            "1344x768",
            "1408x576",
            "1408x640",
            "1408x704",
            "1472x576",
            "1472x640",
            "1472x704",
            "1536x512",
            "1536x576",
            "1536x640"
          ],
          "type": "string",
          "title": "resolution",
          "display": "hidden",
          "description": "Resolution. Overrides aspect ratio. Ignored if an inpainting image is given.",
          "default": "None",
          "x-order": 2
        },
        "style_type": {
          "enum": [
            "None",
            "Auto",
            "General",
            "Realistic",
            "Design"
          ],
          "type": "string",
          "title": "style_type",
          "description": "The styles help define the specific aesthetic of the image you want to generate.",
          "default": "None",
          "x-order": 6
        },
        "aspect_ratio": {
          "enum": [
            "1:3",
            "3:1",
            "1:2",
            "2:1",
            "9:16",
            "16:9",
            "10:16",
            "16:10",
            "2:3",
            "3:2",
            "3:4",
            "4:3",
            "4:5",
            "5:4",
            "1:1"
          ],
          "type": "string",
          "title": "aspect_ratio",
          "description": "Aspect ratio. Ignored if a resolution or inpainting image is given.",
          "default": "1:1",
          "x-order": 1
        },
        "magic_prompt_option": {
          "enum": [
            "Auto",
            "On",
            "Off"
          ],
          "type": "string",
          "title": "magic_prompt_option",
          "description": "Magic Prompt will interpret your prompt and optimize it to maximize variety and quality of the images generated. You can also use it to write prompts in different languages.",
          "default": "Auto",
          "x-order": 3
        },
        "style_reference_images": {
          "type": "array",
          "items": {
            "type": "string",
            "format": "uri"
          },
          "title": "Style Reference Images",
          "x-order": 7,
          "maxItems": 1,
          "description": "A list of images to use as style references."
        }
      }
    }
  },
  "imagegen/qwen_image": {
    "name": "imagegen/qwen_image",
    "schema": {
      "type": "object",
      "title": "Input",
      "required": [
        "prompt"
      ],
      "translatable": [
        "prompt"
      ],
      "speech_enabled": [
        "prompt"
      ],
      "linkto": {
        "*": "*"
      },
      "map": {
        "prompt": "prompt"
      },
      "properties": {
        "seed": {
          "type": "integer",
          "title": "Seed",
          "x-order": 6,
          "nullable": true,
          "description": "Random seed. Set for reproducible generation"
        },
        "prompt": {
          "type": "string",
          "title": "Prompt",
          "x-order": 0,
          "description": "Prompt for generated image"
        },
        "go_fast": {
          "type": "boolean",
          "title": "Go Fast",
          "default": false,
          "display": "hidden",
          "x-order": 3,
          "description": "Run faster predictions with additional optimizations."
        },
        "guidance": {
          "type": "number",
          "title": "Guidance",
          "default": 4,
          "maximum": 10,
          "minimum": 0,
          "display": "hidden",
          "x-order": 5,
          "description": "Guidance for generated image. Lower values can give more realistic images. Good values to try are 2, 2.5, 3 and 3.5"
        },
        "aspect_ratio": {
          "enum": [
            "1:1",
            "16:9",
            "9:16",
            "4:3",
            "3:4"
          ],
          "type": "string",
          "title": "aspect_ratio",
          "description": "Aspect ratio for the generated image",
          "default": "16:9",
          "x-order": 2
        },
        "output_format": {
          "enum": [
            "webp",
            "jpg",
            "png"
          ],
          "type": "string",
          "title": "output_format",
          "description": "Format of the output images",
          "default": "webp",
          "x-order": 7
        },
        "enhance_prompt": {
          "type": "boolean",
          "title": "Enhance Prompt",
          "default": false,
          "x-order": 1,
          "description": "Enhance the prompt with positive magic."
        },
        "output_quality": {
          "type": "integer",
          "title": "Output Quality",
          "default": 100,
          "maximum": 100,
          "minimum": 0,
          "display": "hidden",
          "x-order": 8,
          "description": "Quality when saving the output images, from 0 to 100. 100 is best quality, 0 is lowest quality. Not relevant for .png outputs"
        },
        "num_inference_steps": {
          "type": "integer",
          "title": "Num Inference Steps",
          "default": 50,
          "maximum": 50,
          "minimum": 1,
          "display": "hidden",
          "x-order": 4,
          "description": "Number of denoising steps. Recommended range is 28-50, and lower number of steps produce lower quality outputs, faster."
        },
        "disable_safety_checker": {
          "type": "boolean",
          "title": "Disable Safety Checker",
          "default": true,
          "display": "hidden",
          "x-order": 9,
          "description": "Disable safety checker for generated images."
        }
      }
    }
  },
  "imagegen/bytedance_dreamina3_1": {
    "name": "imagegen/bytedance_dreamina3_1",
    "schema": {
      "type": "object",
      "title": "Input",
      "translatable": [
        "prompt"
      ],
      "speech_enabled": [
        "prompt"
      ],
      "linkto": {
        "*": "*"
      },
      "map": {
        "prompt": "prompt"
      },
      "required": [
        "prompt"
      ],
      "properties": {
        "seed": {
          "type": "integer",
          "title": "Seed",
          "x-order": 6,
          "description": "Random seed. Set for reproducible generation"
        },
        "width": {
          "type": "integer",
          "title": "Width",
          "default": 1328,
          "maximum": 3024,
          "minimum": 512,
          "x-order": 4,
          "description": "Image width (only used when aspect_ratio is 'custom')"
        },
        "height": {
          "type": "integer",
          "title": "Height",
          "default": 1328,
          "maximum": 3024,
          "minimum": 512,
          "x-order": 5,
          "description": "Image height (only used when aspect_ratio is 'custom')"
        },
        "prompt": {
          "type": "string",
          "title": "Prompt",
          "x-order": 0,
          "description": "Text prompt for image generation"
        },
        "resolution": {
          "enum": [
            "1K",
            "2K"
          ],
          "type": "string",
          "title": "resolution",
          "description": "Image resolution quality",
          "default": "2K",
          "x-order": 3
        },
        "aspect_ratio": {
          "enum": [
            "1:1",
            "4:3",
            "3:4",
            "3:2",
            "2:3",
            "16:9",
            "9:16",
            "21:9",
            "9:21",
            "custom"
          ],
          "type": "string",
          "title": "aspect_ratio",
          "description": "Image aspect ratio. Set to 'custom' to specify width and height.",
          "default": "1:1",
          "x-order": 2
        },
        "enhance_prompt": {
          "type": "boolean",
          "title": "Enhance Prompt",
          "default": true,
          "x-order": 1,
          "description": "Enable text expansion for better results with short prompts"
        }
      }
    }
  },
  "imagegen/google_nano_banana": {
    "name": "imagegen/google_nano_banana",
    "schema": {
      "type": "object",
      "title": "Input",
      "required": [
        "prompt"
      ],
      "translatable": [
        "prompt"
      ],
      "speech_enabled": [
        "prompt"
      ],
      "linkto": {
        "*": "*"
      },
      "map": {
        "prompt": "prompt"
      },
      "properties": {
        "prompt": {
          "type": "string",
          "title": "Prompt",
          "description": "The prompt for image editing.",
          "x-order": 0
        },
        "aspect_ratio": {
          "enum": [
            "1:1",
            "2:3",
            "3:2",
            "3:4",
            "4:3",
            "4:5",
            "5:4",
            "9:16",
            "16:9",
            "21:9"
          ],
          "type": "string",
          "title": "aspect_ratio",
          "description": "Aspect ratio of the generated image",
          "default": "1:1",
          "x-order": 2
        }
      }
    }
  },
  "imagegen/higgsfield_soul": {
    "name": "imagegen/higgsfield_soul",
    "schema": {
      "type": "object",
      "title": "Input",
      "required": [
        "prompt",
        "width_and_height"
      ],
      "translatable": [
        "prompt"
      ],
      "speech_enabled": [
        "prompt"
      ],
      "linkto": {
        "*": "*"
      },
      "map": {
        "prompt": "prompt"
      },
      "properties": {
        "prompt": {
          "type": "string",
          "title": "Prompt",
          "x-order": 0,
          "description": "Prompt"
        },
        "width_and_height": {
          "enum": [
            "1152x2048",
            "2048x1152",
            "2048x1536",
            "1536x2048",
            "1344x2016",
            "2016x1344",
            "960x1696",
            "1536x1536",
            "1536x1152",
            "1696x960",
            "1152x1536",
            "1120x1680",
            "1680x1120"
          ],
          "type": "string",
          "default": "1536x1536",
          "title": "Width and Height",
          "description": "Desired width and height of output image",
          "x-order": 1
        },
        "enhance_prompt": {
          "type": "boolean",
          "title": "Enhance Prompt",
          "default": false,
          "x-order": 2,
          "description": "Enhance prompt"
        },
        "style_id": {
          "type": "string",
          "title": "Style ID",
          "extra": "modal",
          "default": "464ea177-8d40-4940-8d9d-b438bab269c7",
          "x-order": 3,
          "description": "Chosen preset for soul image generation. If null then General soul style is applied."
        },
        "style_strength": {
          "type": "number",
          "title": "Style Strength",
          "default": 1,
          "minimum": 0,
          "maximum": 1,
          "step": 0.01,
          "x-order": 4,
          "description": "Style strength"
        },
        "quality": {
          "enum": [
            "720p",
            "1080p"
          ],
          "type": "string",
          "title": "Quality",
          "display": "hidden",
          "description": "Output quality",
          "default": "720p",
          "x-order": 5
        },
        "seed": {
          "type": "integer",
          "title": "Seed",
          "minimum": 1,
          "maximum": 1000000,
          "step": 1,
          "x-order": 6,
          "description": "Seed for reproducibility. If null then random seed is applied."
        },
        "custom_reference_id": {
          "type": "string",
          "title": "Custom Reference ID",
          "display": "hidden",
          "x-order": 7,
          "description": "The id of character that already created."
        },
        "custom_reference_strength": {
          "type": "number",
          "title": "Custom Reference Strength",
          "display": "hidden",
          "default": 1,
          "minimum": 0,
          "maximum": 1,
          "step": 0.01,
          "x-order": 8,
          "description": "Custom reference strength"
        },
        "image_reference": {
          "type": "string",
          "title": "Image Reference",
          "format": "uri",
          "fileType": "image",
          "x-order": 9,
          "description": "This image will be used a source for image generation."
        },
        "batch_size": {
          "enum": [
            1,
            4
          ],
          "type": "integer",
          "title": "Batch Size",
          "description": "Number of images to generate",
          "display": "hidden",
          "default": 1,
          "x-order": 10
        }
      }
    }
  },
  "imagegen/hunyuan2_1_image": {
    "name": "imagegen/hunyuan2_1_image",
    "schema": {
      "type": "object",
      "title": "Input",
      "required": [
        "prompt"
      ],
      "translatable": [
        "prompt",
        "negative_prompt"
      ],
      "speech_enabled": [
        "prompt",
        "negative_prompt"
      ],
      "linkto": {
        "*": "*"
      },
      "map": {
        "prompt": "prompt"
      },
      "properties": {
        "prompt": {
          "type": "string",
          "title": "Prompt",
          "description": "The text prompt to generate an image from",
          "x-order": 0
        },
        "negative_prompt": {
          "type": "string",
          "title": "Negative Prompt",
          "description": "The negative prompt to guide the image generation away from certain concepts",
          "default": "",
          "x-order": 1
        },
        "image_size": {
          "type": "string",
          "title": "Image Size",
          "description": "The desired size of the generated image",
          "enum": [
            "square_hd",
            "square",
            "portrait_4_3",
            "portrait_16_9",
            "landscape_4_3",
            "landscape_16_9"
          ],
          "default": "square_hd",
          "x-order": 2
        },
        "num_images": {
          "type": "integer",
          "title": "Number of Images",
          "description": "The number of images to generate",
          "default": 1,
          "minimum": 1,
          "maximum": 4,
          "step": 1,
          "display": "hidden",
          "x-order": 3
        },
        "num_inference_steps": {
          "type": "integer",
          "title": "Number of Inference Steps",
          "description": "Number of denoising steps",
          "default": 28,
          "minimum": 1,
          "maximum": 50,
          "step": 1,
          "display": "hidden",
          "x-order": 4
        },
        "guidance_scale": {
          "type": "number",
          "title": "Guidance Scale",
          "description": "Controls how much the model adheres to the prompt. Higher values mean stricter adherence",
          "default": 3.5,
          "minimum": 1,
          "maximum": 20,
          "step": 0.1,
          "display": "hidden",
          "x-order": 5
        },
        "seed": {
          "type": "integer",
          "title": "Seed",
          "description": "Random seed for reproducible results. If None, a random seed is used",
          "x-order": 6
        },
        "use_reprompt": {
          "type": "boolean",
          "title": "Use Reprompt",
          "description": "Enable prompt enhancement for potentially better results",
          "default": true,
          "x-order": 7
        },
        "use_refiner": {
          "type": "boolean",
          "title": "Use Refiner",
          "description": "Enable the refiner model for improved image quality",
          "default": false,
          "display": "hidden",
          "x-order": 8
        }
      }
    }
  },
  "imagegen/leanardo_lucid_origin": {
    "name": "imagegen/leanardo_lucid_origin",
    "schema": {
      "type": "object",
      "title": "Input",
      "required": [
        "prompt"
      ],
      "translatable": [
        "prompt"
      ],
      "speech_enabled": [
        "prompt"
      ],
      "linkto": {
        "*": "*"
      },
      "map": {
        "prompt": "prompt"
      },
      "properties": {
        "style": {
          "enum": [
            "bokeh",
            "cinematic",
            "cinematic_close_up",
            "creative",
            "dynamic",
            "fashion",
            "film",
            "food",
            "hdr",
            "long_exposure",
            "macro",
            "minimalist",
            "monochrome",
            "moody",
            "neutral",
            "none",
            "portrait",
            "retro",
            "stock_photo",
            "unprocessed",
            "vibrant"
          ],
          "type": "string",
          "title": "style",
          "description": "Style to use for the output image",
          "default": "none",
          "x-order": 6
        },
        "prompt": {
          "type": "string",
          "title": "Prompt",
          "x-order": 0,
          "description": "Text prompt for generation"
        },
        "contrast": {
          "enum": [
            "low",
            "medium",
            "high"
          ],
          "type": "string",
          "title": "contrast",
          "description": "Contrast level",
          "default": "medium",
          "x-order": 3
        },
        "num_images": {
          "type": "integer",
          "title": "Num Images",
          "default": 1,
          "maximum": 8,
          "minimum": 1,
          "step": 1,
          "display": "hidden",
          "x-order": 5,
          "description": "Number of images to generate"
        },
        "aspect_ratio": {
          "enum": [
            "1:1",
            "16:9",
            "9:16",
            "3:2",
            "2:3",
            "4:5",
            "5:4",
            "3:4",
            "4:3",
            "2:1",
            "1:2",
            "3:1",
            "1:3"
          ],
          "type": "string",
          "title": "aspect_ratio",
          "description": "Aspect ratio of the output image",
          "default": "16:9",
          "x-order": 1
        },
        "prompt_enhance": {
          "type": "boolean",
          "title": "Prompt Enhance",
          "default": true,
          "x-order": 4,
          "description": "Whether to enhance the prompt"
        },
        "generation_mode": {
          "enum": [
            "standard",
            "ultra"
          ],
          "type": "string",
          "title": "generation_mode",
          "description": "Generation mode",
          "default": "ultra",
          "display": "hidden",
          "x-order": 2
        }
      }
    }
  },
  "imagegen/flux_spro_dev": {
    "name": "imagegen/flux_spro_dev",
    "schema": {
      "type": "object",
      "title": "Input",
      "required": [
        "prompt"
      ],
      "translatable": [
        "prompt"
      ],
      "speech_enabled": [
        "prompt"
      ],
      "linkto": {
        "*": "*"
      },
      "map": {
        "prompt": "prompt"
      },
      "properties": {
        "prompt": {
          "type": "string",
          "title": "Prompt",
          "description": "The prompt to generate an image from",
          "x-order": 0
        },
        "image_size": {
          "type": "string",
          "title": "Image Size",
          "description": "The size of the generated image",
          "enum": [
            "square_hd",
            "square",
            "portrait_4_3",
            "portrait_16_9",
            "landscape_4_3",
            "landscape_16_9"
          ],
          "default": "landscape_4_3",
          "x-order": 1
        },
        "num_inference_steps": {
          "type": "integer",
          "title": "Number of Inference Steps",
          "description": "The number of inference steps to perform",
          "default": 28,
          "minimum": 1,
          "maximum": 50,
          "step": 1,
          "display": "hidden",
          "x-order": 2
        },
        "seed": {
          "type": "integer",
          "title": "Seed",
          "description": "The same seed and the same prompt given to the same version of the model will output the same image every time",
          "x-order": 3
        },
        "guidance_scale": {
          "type": "number",
          "title": "Guidance Scale",
          "description": "The CFG (Classifier Free Guidance) scale is a measure of how close you want the model to stick to your prompt when looking for a related image to show you",
          "default": 4.5,
          "minimum": 1,
          "maximum": 20,
          "step": 0.1,
          "display": "hidden",
          "x-order": 4
        },
        "sync_mode": {
          "type": "boolean",
          "title": "Sync Mode",
          "description": "If set to true, the function will wait for the image to be generated and uploaded before returning the response. This will increase the latency of the function but it allows you to get the image directly in the response without going through the CDN",
          "default": false,
          "display": "hidden",
          "x-order": 5
        },
        "num_images": {
          "type": "integer",
          "title": "Number of Images",
          "description": "The number of images to generate",
          "default": 1,
          "minimum": 1,
          "maximum": 4,
          "step": 1,
          "display": "hidden",
          "x-order": 6
        },
        "enable_safety_checker": {
          "type": "boolean",
          "title": "Enable Safety Checker",
          "description": "If set to true, the safety checker will be enabled",
          "default": false,
          "display": "hidden",
          "x-order": 7
        },
        "output_format": {
          "type": "string",
          "title": "Output Format",
          "description": "The format of the generated image",
          "enum": [
            "jpeg",
            "png"
          ],
          "default": "jpeg",
          "x-order": 8
        },
        "acceleration": {
          "type": "string",
          "title": "Acceleration",
          "description": "The speed of the generation. The higher the speed, the faster the generation",
          "enum": [
            "none",
            "regular",
            "high"
          ],
          "default": "none",
          "display": "hidden",
          "x-order": 9
        }
      }
    }
  },
  "imagegen/imagineart1": {
    "name": "imagegen/imagineart1",
    "schema": {
      "type": "object",
      "title": "Input",
      "required": [
        "prompt"
      ],
      "translatable": [
        "prompt"
      ],
      "speech_enabled": [
        "prompt"
      ],
      "linkto": {
        "*": "*"
      },
      "map": {
        "prompt": "prompt"
      },
      "properties": {
        "prompt": {
          "type": "string",
          "title": "Prompt",
          "x-order": 0,
          "description": "A highly detailed photorealistic image of..."
        },
        "aspect_ratio": {
          "enum": [
            "1:1",
            "16:9",
            "9:16",
            "4:3",
            "3:4",
            "3:2",
            "2:3",
            "1:3",
            "3:1"
          ],
          "type": "string",
          "title": "aspect_ratio",
          "description": "Aspect Ratio for the generated image",
          "default": "1:1",
          "x-order": 1
        }
      }
    }
  },
  "imagegen/hunyuan3_image": {
    "name": "imagegen/hunyuan3_image",
    "schema": {
      "type": "object",
      "title": "Input",
      "required": [
        "prompt"
      ],
      "translatable": [
        "prompt",
        "negative_prompt"
      ],
      "speech_enabled": [
        "prompt",
        "negative_prompt"
      ],
      "linkto": {
        "*": "*"
      },
      "map": {
        "prompt": "prompt"
      },
      "properties": {
        "prompt": {
          "type": "string",
          "title": "Prompt",
          "description": "The text prompt to generate an image from",
          "x-order": 0
        },
        "negative_prompt": {
          "type": "string",
          "title": "Negative Prompt",
          "description": "The negative prompt to guide the image generation away from certain concepts",
          "default": "",
          "x-order": 1
        },
        "image_size": {
          "type": "string",
          "title": "Image Size",
          "description": "The desired size of the generated image",
          "enum": [
            "square_hd",
            "square",
            "portrait_4_3",
            "portrait_16_9",
            "landscape_4_3",
            "landscape_16_9"
          ],
          "default": "square_hd",
          "x-order": 2
        },
        "num_images": {
          "type": "integer",
          "title": "Number of Images",
          "description": "The number of images to generate",
          "default": 4,
          "minimum": 1,
          "maximum": 4,
          "step": 1,
          "x-order": 3
        },
        "num_inference_steps": {
          "type": "integer",
          "title": "Number of Inference Steps",
          "description": "Number of denoising steps",
          "default": 28,
          "minimum": 1,
          "maximum": 50,
          "step": 1,
          "display": "hidden",
          "x-order": 4
        },
        "guidance_scale": {
          "type": "number",
          "title": "Guidance Scale",
          "description": "Controls how much the model adheres to the prompt. Higher values mean stricter adherence",
          "default": 7.5,
          "minimum": 1,
          "maximum": 20,
          "step": 0.1,
          "display": "hidden",
          "x-order": 5
        },
        "seed": {
          "type": "integer",
          "title": "Seed",
          "description": "Random seed for reproducible results. If None, a random seed is used",
          "x-order": 6
        },
        "enable_safety_checker": {
          "type": "boolean",
          "title": "Enable Safety Checker",
          "description": "Enable the safety checker to prevent generation of unsafe content",
          "default": false,
          "display": "hidden",
          "x-order": 7
        },
        "sync_mode": {
          "type": "boolean",
          "title": "Sync Mode",
          "description": "If set to true, the function will wait for the image to be generated and uploaded before returning the response. This will increase the latency of the function but it allows you to get the image directly in the response without going through the CDN",
          "default": false,
          "display": "hidden",
          "x-order": 8
        },
        "output_format": {
          "type": "string",
          "title": "Output Format",
          "description": "The format of the generated image",
          "enum": [
            "jpeg",
            "png"
          ],
          "default": "png",
          "x-order": 9
        },
        "enable_prompt_expansion": {
          "type": "boolean",
          "title": "Enable Prompt Expansion",
          "description": "Enable the prompt expansion to generate more images",
          "default": true,
          "x-order": 10
        }
      }
    }
  },
  "imgedit/object_removal": {
    "name": "imgedit/object_removal",
    "schema": {
      "type": "object",
      "title": "Object Removal Input",
      "required": [
        "image_url",
        "prompt"
      ],
      "linkto": {
        "*": "*"
      },
      "map": {
        "image_url": "image"
      },
      "translatable": [
        "prompt"
      ],
      "speech_enabled": [
        "prompt"
      ],
      "properties": {
        "image_url": {
          "type": "string",
          "title": "Image",
          "format": "uri",
          "fileType": "image",
          "description": "The image you want to edit",
          "x-order": 0
        },
        "prompt": {
          "type": "string",
          "title": "Prompt",
          "description": "Specify which objects to remove from the image",
          "default": "background people",
          "x-order": 1
        },
        "guidance_scale": {
          "type": "number",
          "title": "Guidance Scale",
          "description": "The CFG (Classifier Free Guidance) scale is a measure of how close you want the model to stick to your prompt when looking for a related image to show you",
          "default": 3.5,
          "display": "hidden",
          "x-order": 2
        },
        "num_inference_steps": {
          "type": "integer",
          "title": "Number of Inference Steps",
          "description": "Number of inference steps for sampling",
          "default": 30,
          "display": "hidden",
          "x-order": 3
        },
        "safety_tolerance": {
          "type": "string",
          "title": "Safety Tolerance",
          "description": "The safety tolerance level for the generated image. 1 being the most strict and 6 being the most permissive",
          "enum": [
            "1",
            "2",
            "3",
            "4",
            "5",
            "6"
          ],
          "default": "6",
          "display": "hidden",
          "x-order": 4
        },
        "output_format": {
          "type": "string",
          "title": "Output Format",
          "description": "The format of the generated image",
          "enum": [
            "jpeg",
            "png"
          ],
          "default": "jpeg",
          "x-order": 5
        },
        "seed": {
          "type": "integer",
          "title": "Seed",
          "description": "The same seed and the same prompt given to the same version of the model will output the same image every time",
          "x-order": 6
        },
        "sync_mode": {
          "type": "boolean",
          "title": "Sync Mode",
          "description": "If set to true, the function will wait for the image to be generated and uploaded before returning the response. This will increase the latency of the function but it allows you to get the image directly in the response without going through the CDN",
          "x-order": 7,
          "display": "hidden"
        }
      }
    }
  },
  "imgedit/deaging": {
    "name": "imgedit/deaging",
    "schema": {
      "type": "object",
      "title": "Object Removal Input",
      "required": [
        "image_url",
        "prompt"
      ],
      "linkto": {
        "*": "*"
      },
      "translatable": [
        "prompt"
      ],
      "speech_enabled": [
        "prompt"
      ],
      "map": {
        "image_url": "image"
      },
      "properties": {
        "image_url": {
          "type": "string",
          "title": "Image",
          "format": "uri",
          "fileType": "image",
          "description": "The image you want to edit",
          "x-order": 0
        },
        "prompt": {
          "type": "string",
          "title": "Prompt",
          "description": "Specify how much younger or older you want to make the image",
          "default": "20 years older or 15 years younger",
          "x-order": 1
        },
        "guidance_scale": {
          "type": "number",
          "title": "Guidance Scale",
          "description": "The CFG (Classifier Free Guidance) scale is a measure of how close you want the model to stick to your prompt when looking for a related image to show you",
          "default": 3.5,
          "display": "hidden",
          "x-order": 2
        },
        "num_inference_steps": {
          "type": "integer",
          "title": "Number of Inference Steps",
          "description": "Number of inference steps for sampling",
          "default": 30,
          "display": "hidden",
          "x-order": 3
        },
        "safety_tolerance": {
          "type": "string",
          "title": "Safety Tolerance",
          "description": "The safety tolerance level for the generated image. 1 being the most strict and 6 being the most permissive",
          "enum": [
            "1",
            "2",
            "3",
            "4",
            "5",
            "6"
          ],
          "default": "6",
          "display": "hidden",
          "x-order": 4
        },
        "output_format": {
          "type": "string",
          "title": "Output Format",
          "description": "The format of the generated image",
          "enum": [
            "jpeg",
            "png"
          ],
          "default": "jpeg",
          "x-order": 5
        },
        "seed": {
          "type": "integer",
          "title": "Seed",
          "description": "The same seed and the same prompt given to the same version of the model will output the same image every time",
          "x-order": 6
        },
        "sync_mode": {
          "type": "boolean",
          "title": "Sync Mode",
          "description": "If set to true, the function will wait for the image to be generated and uploaded before returning the response. This will increase the latency of the function but it allows you to get the image directly in the response without going through the CDN",
          "x-order": 7,
          "display": "hidden"
        }
      }
    }
  },
  "imgedit/background_change": {
    "name": "imgedit/background_change",
    "schema": {
      "type": "object",
      "title": "Object Removal Input",
      "required": [
        "image_url",
        "prompt"
      ],
      "linkto": {
        "*": "*"
      },
      "map": {
        "image_url": "image",
        "prompt": "prompt"
      },
      "translatable": [
        "prompt"
      ],
      "speech_enabled": [
        "prompt"
      ],
      "properties": {
        "image_url": {
          "type": "string",
          "title": "Image",
          "format": "uri",
          "fileType": "image",
          "description": "The image you want to edit",
          "x-order": 0
        },
        "prompt": {
          "type": "string",
          "title": "Prompt",
          "description": "Specify the background you want to change to",
          "default": "a beautiful sunset",
          "x-order": 1
        },
        "guidance_scale": {
          "type": "number",
          "title": "Guidance Scale",
          "description": "The CFG (Classifier Free Guidance) scale is a measure of how close you want the model to stick to your prompt when looking for a related image to show you",
          "default": 3.5,
          "display": "hidden",
          "x-order": 2
        },
        "num_inference_steps": {
          "type": "integer",
          "title": "Number of Inference Steps",
          "description": "Number of inference steps for sampling",
          "default": 30,
          "display": "hidden",
          "x-order": 3
        },
        "safety_tolerance": {
          "type": "string",
          "title": "Safety Tolerance",
          "description": "The safety tolerance level for the generated image. 1 being the most strict and 6 being the most permissive",
          "enum": [
            "1",
            "2",
            "3",
            "4",
            "5",
            "6"
          ],
          "default": "6",
          "display": "hidden",
          "x-order": 4
        },
        "output_format": {
          "type": "string",
          "title": "Output Format",
          "description": "The format of the generated image",
          "enum": [
            "jpeg",
            "png"
          ],
          "default": "jpeg",
          "x-order": 5
        },
        "seed": {
          "type": "integer",
          "title": "Seed",
          "description": "The same seed and the same prompt given to the same version of the model will output the same image every time",
          "x-order": 6
        },
        "sync_mode": {
          "type": "boolean",
          "title": "Sync Mode",
          "description": "If set to true, the function will wait for the image to be generated and uploaded before returning the response. This will increase the latency of the function but it allows you to get the image directly in the response without going through the CDN",
          "x-order": 7,
          "display": "hidden"
        }
      }
    }
  },
  "imgedit/cartoonify": {
    "name": "imgedit/cartoonify",
    "schema": {
      "type": "object",
      "title": "Object Removal Input",
      "required": [
        "image_url"
      ],
      "linkto": {
        "*": "*"
      },
      "map": {
        "image_url": "image"
      },
      "properties": {
        "image_url": {
          "type": "string",
          "title": "Image",
          "format": "uri",
          "fileType": "image",
          "description": "The image you want to edit",
          "x-order": 0
        },
        "guidance_scale": {
          "type": "number",
          "title": "Guidance Scale",
          "description": "The CFG (Classifier Free Guidance) scale is a measure of how close you want the model to stick to your prompt when looking for a related image to show you",
          "default": 3.5,
          "display": "hidden",
          "x-order": 2
        },
        "num_inference_steps": {
          "type": "integer",
          "title": "Number of Inference Steps",
          "description": "Number of inference steps for sampling",
          "default": 30,
          "display": "hidden",
          "x-order": 3
        },
        "safety_tolerance": {
          "type": "string",
          "title": "Safety Tolerance",
          "description": "The safety tolerance level for the generated image. 1 being the most strict and 6 being the most permissive",
          "enum": [
            "1",
            "2",
            "3",
            "4",
            "5",
            "6"
          ],
          "default": "6",
          "display": "hidden",
          "x-order": 4
        },
        "output_format": {
          "type": "string",
          "title": "Output Format",
          "description": "The format of the generated image",
          "enum": [
            "jpeg",
            "png"
          ],
          "default": "jpeg",
          "x-order": 5
        },
        "seed": {
          "type": "integer",
          "title": "Seed",
          "description": "The same seed and the same prompt given to the same version of the model will output the same image every time",
          "x-order": 6
        },
        "sync_mode": {
          "type": "boolean",
          "title": "Sync Mode",
          "description": "If set to true, the function will wait for the image to be generated and uploaded before returning the response. This will increase the latency of the function but it allows you to get the image directly in the response without going through the CDN",
          "x-order": 7,
          "display": "hidden"
        }
      }
    }
  },
  "imgedit/color_correction": {
    "name": "imgedit/color_correction",
    "schema": {
      "type": "object",
      "title": "Object Removal Input",
      "required": [
        "image_url"
      ],
      "linkto": {
        "*": "*"
      },
      "map": {
        "image_url": "image"
      },
      "properties": {
        "image_url": {
          "type": "string",
          "title": "Image",
          "format": "uri",
          "fileType": "image",
          "description": "The image you want to edit",
          "x-order": 0
        },
        "guidance_scale": {
          "type": "number",
          "title": "Guidance Scale",
          "description": "The CFG (Classifier Free Guidance) scale is a measure of how close you want the model to stick to your prompt when looking for a related image to show you",
          "default": 3.5,
          "display": "hidden",
          "x-order": 2
        },
        "num_inference_steps": {
          "type": "integer",
          "title": "Number of Inference Steps",
          "description": "Number of inference steps for sampling",
          "default": 30,
          "display": "hidden",
          "x-order": 3
        },
        "safety_tolerance": {
          "type": "string",
          "title": "Safety Tolerance",
          "description": "The safety tolerance level for the generated image. 1 being the most strict and 6 being the most permissive",
          "enum": [
            "1",
            "2",
            "3",
            "4",
            "5",
            "6"
          ],
          "default": "6",
          "display": "hidden",
          "x-order": 4
        },
        "output_format": {
          "type": "string",
          "title": "Output Format",
          "description": "The format of the generated image",
          "enum": [
            "jpeg",
            "png"
          ],
          "default": "jpeg",
          "x-order": 5
        },
        "seed": {
          "type": "integer",
          "title": "Seed",
          "description": "The same seed and the same prompt given to the same version of the model will output the same image every time",
          "x-order": 6
        },
        "sync_mode": {
          "type": "boolean",
          "title": "Sync Mode",
          "description": "If set to true, the function will wait for the image to be generated and uploaded before returning the response. This will increase the latency of the function but it allows you to get the image directly in the response without going through the CDN",
          "x-order": 7,
          "display": "hidden"
        }
      }
    }
  },
  "imgedit/color_correction_ddcolor": {
    "name": "imgedit/color_correction_ddcolor",
    "schema": {
      "type": "object",
      "title": "Input",
      "required": [
        "image"
      ],
      "linkto": {
        "*": "*"
      },
      "map": {
        "image_filter": "image_filter",
        "aspect_ratio": "aspect_ratio",
        "seed": "seed",
        "image": "image"
      },
      "properties": {
        "image": {
          "type": "string",
          "title": "Image",
          "format": "uri",
          "fileType": "image",
          "x-order": 0,
          "description": "Grayscale input image."
        },
        "model_size": {
          "enum": [
            "large",
            "tiny"
          ],
          "type": "string",
          "title": "model_size",
          "description": "Choose the model size.",
          "default": "large",
          "x-order": 1
        }
      }
    }
  },
  "imgedit/expression_change": {
    "name": "imgedit/expression_change",
    "schema": {
      "type": "object",
      "title": "Object Removal Input",
      "required": [
        "image_url",
        "prompt"
      ],
      "linkto": {
        "*": "*"
      },
      "map": {
        "image_url": "image"
      },
      "translatable": [
        "prompt"
      ],
      "speech_enabled": [
        "prompt"
      ],
      "properties": {
        "image_url": {
          "type": "string",
          "title": "Image",
          "format": "uri",
          "fileType": "image",
          "description": "The image you want to edit",
          "x-order": 0
        },
        "prompt": {
          "type": "string",
          "title": "Prompt",
          "description": "The desired facial expression to apply.",
          "default": "happy",
          "x-order": 1
        },
        "guidance_scale": {
          "type": "number",
          "title": "Guidance Scale",
          "description": "The CFG (Classifier Free Guidance) scale is a measure of how close you want the model to stick to your prompt when looking for a related image to show you",
          "default": 3.5,
          "display": "hidden",
          "x-order": 2
        },
        "num_inference_steps": {
          "type": "integer",
          "title": "Number of Inference Steps",
          "description": "Number of inference steps for sampling",
          "default": 30,
          "display": "hidden",
          "x-order": 3
        },
        "safety_tolerance": {
          "type": "string",
          "title": "Safety Tolerance",
          "description": "The safety tolerance level for the generated image. 1 being the most strict and 6 being the most permissive",
          "enum": [
            "1",
            "2",
            "3",
            "4",
            "5",
            "6"
          ],
          "default": "6",
          "display": "hidden",
          "x-order": 4
        },
        "output_format": {
          "type": "string",
          "title": "Output Format",
          "description": "The format of the generated image",
          "enum": [
            "jpeg",
            "png"
          ],
          "default": "jpeg",
          "x-order": 5
        },
        "seed": {
          "type": "integer",
          "title": "Seed",
          "description": "The same seed and the same prompt given to the same version of the model will output the same image every time",
          "x-order": 6
        },
        "sync_mode": {
          "type": "boolean",
          "title": "Sync Mode",
          "description": "If set to true, the function will wait for the image to be generated and uploaded before returning the response. This will increase the latency of the function but it allows you to get the image directly in the response without going through the CDN",
          "x-order": 7,
          "display": "hidden"
        }
      }
    }
  },
  "imgedit/face_enhance": {
    "name": "imgedit/face_enhance",
    "schema": {
      "type": "object",
      "title": "Object Removal Input",
      "required": [
        "image_url"
      ],
      "linkto": {
        "*": "*"
      },
      "map": {
        "image_url": "image"
      },
      "properties": {
        "image_url": {
          "type": "string",
          "title": "Image",
          "format": "uri",
          "fileType": "image",
          "description": "The image you want to edit",
          "x-order": 0
        },
        "guidance_scale": {
          "type": "number",
          "title": "Guidance Scale",
          "description": "The CFG (Classifier Free Guidance) scale is a measure of how close you want the model to stick to your prompt when looking for a related image to show you",
          "default": 3.5,
          "display": "hidden",
          "x-order": 2
        },
        "num_inference_steps": {
          "type": "integer",
          "title": "Number of Inference Steps",
          "description": "Number of inference steps for sampling",
          "default": 30,
          "display": "hidden",
          "x-order": 3
        },
        "safety_tolerance": {
          "type": "string",
          "title": "Safety Tolerance",
          "description": "The safety tolerance level for the generated image. 1 being the most strict and 6 being the most permissive",
          "enum": [
            "1",
            "2",
            "3",
            "4",
            "5",
            "6"
          ],
          "default": "6",
          "display": "hidden",
          "x-order": 4
        },
        "output_format": {
          "type": "string",
          "title": "Output Format",
          "description": "The format of the generated image",
          "enum": [
            "jpeg",
            "png"
          ],
          "default": "jpeg",
          "x-order": 5
        },
        "seed": {
          "type": "integer",
          "title": "Seed",
          "description": "The same seed and the same prompt given to the same version of the model will output the same image every time",
          "x-order": 6
        },
        "sync_mode": {
          "type": "boolean",
          "title": "Sync Mode",
          "description": "If set to true, the function will wait for the image to be generated and uploaded before returning the response. This will increase the latency of the function but it allows you to get the image directly in the response without going through the CDN",
          "x-order": 7,
          "display": "hidden"
        }
      }
    }
  },
  "imgedit/face_realism": {
    "name": "imgedit/face_realism",
    "schema": {
      "type": "object",
      "title": "Face Realism Enhancement Input",
      "required": [
        "image_url"
      ],
      "linkto": {
        "*": "*"
      },
      "map": {
        "image_url": "image"
      },
      "translatable": [],
      "speech_enabled": [],
      "properties": {
        "image_url": {
          "type": "string",
          "title": "Image",
          "format": "uri",
          "fileType": "image",
          "description": "Image to enhance with realism details",
          "x-order": 0
        },
        "guidance_scale": {
          "type": "number",
          "title": "Guidance Scale",
          "description": "The CFG (Classifier Free Guidance) scale is a measure of how close you want the model to stick to your prompt when looking for a related image to show you",
          "default": 3.5,
          "minimum": 0,
          "maximum": 20,
          "step": 0.5,
          "display": "hidden",
          "x-order": 1
        },
        "num_inference_steps": {
          "type": "integer",
          "title": "Number of Inference Steps",
          "description": "Number of inference steps for sampling",
          "default": 30,
          "minimum": 1,
          "maximum": 50,
          "step": 1,
          "display": "hidden",
          "x-order": 2
        },
        "enable_safety_checker": {
          "type": "boolean",
          "title": "Enable Safety Checker",
          "description": "Whether to enable the safety checker for the generated image",
          "default": false,
          "display": "hidden",
          "x-order": 3
        },
        "lora_scale": {
          "type": "number",
          "title": "LoRA Scale",
          "description": "The scale factor for the LoRA model. Controls the strength of the LoRA effect",
          "default": 0.6,
          "minimum": 0,
          "maximum": 2,
          "step": 0.1,
          "display": "hidden",
          "x-order": 4
        },
        "seed": {
          "type": "integer",
          "title": "Seed",
          "description": "The same seed and the same prompt given to the same version of the model will output the same image every time",
          "x-order": 5
        },
        "sync_mode": {
          "type": "boolean",
          "title": "Sync Mode",
          "description": "If set to true, the function will wait for the image to be generated and uploaded before returning the response. This will increase the latency of the function but it allows you to get the image directly in the response without going through the CDN",
          "default": false,
          "display": "hidden",
          "x-order": 6
        }
      }
    }
  },
  "imgedit/face_enhance_codeformer": {
    "name": "imgedit/face_enhance_codeformer",
    "schema": {
      "type": "object",
      "title": "Input",
      "required": [
        "image"
      ],
      "linkto": {
        "*": "*"
      },
      "map": {
        "image_filter": "image_filter",
        "aspect_ratio": "aspect_ratio",
        "seed": "seed",
        "image": "image"
      },
      "properties": {
        "image": {
          "type": "string",
          "title": "Image",
          "format": "uri",
          "fileType": "image",
          "x-order": 0,
          "description": "Grayscale input image."
        },
        "upscale": {
          "type": "integer",
          "title": "Upscale",
          "default": 2,
          "enum": [
            1,
            2,
            4
          ],
          "x-order": 4,
          "description": "The final upsampling scale of the image"
        },
        "face_upsample": {
          "type": "boolean",
          "title": "Face Upsample",
          "default": true,
          "x-order": 3,
          "description": "Upsample restored faces for high-resolution AI-created images"
        },
        "background_enhance": {
          "type": "boolean",
          "title": "Background Enhance",
          "default": true,
          "x-order": 2,
          "description": "Enhance background image with Real-ESRGAN"
        },
        "codeformer_fidelity": {
          "type": "number",
          "title": "Codeformer Fidelity",
          "default": 0.5,
          "maximum": 1,
          "minimum": 0,
          "x-order": 1,
          "description": "Balance the quality (lower number) and fidelity (higher number)."
        }
      }
    }
  },
  "imgedit/face_enhance_gfpgan": {
    "name": "imgedit/face_enhance_gfpgan",
    "schema": {
      "type": "object",
      "title": "Input",
      "required": [
        "image"
      ],
      "linkto": {
        "*": "*"
      },
      "map": {
        "image_filter": "image_filter",
        "aspect_ratio": "aspect_ratio",
        "seed": "seed",
        "img": "image"
      },
      "properties": {
        "img": {
          "type": "string",
          "title": "Img",
          "format": "uri",
          "fileType": "image",
          "x-order": 0,
          "description": "Input"
        },
        "scale": {
          "type": "number",
          "title": "Scale",
          "default": 2,
          "x-order": 2,
          "description": "Rescaling factor"
        },
        "version": {
          "enum": [
            "v1.2",
            "v1.3",
            "v1.4",
            "RestoreFormer"
          ],
          "type": "string",
          "title": "version",
          "description": "GFPGAN version. v1.3: better quality. v1.4: more details and better identity.",
          "default": "v1.4",
          "x-order": 1
        }
      }
    }
  },
  "imgedit/hair_change": {
    "name": "imgedit/hair_change",
    "schema": {
      "type": "object",
      "title": "Object Removal Input",
      "required": [
        "image_url",
        "prompt"
      ],
      "linkto": {
        "*": "*"
      },
      "map": {
        "image_url": "image",
        "prompt": "prompt"
      },
      "translatable": [
        "prompt"
      ],
      "speech_enabled": [
        "prompt"
      ],
      "properties": {
        "image_url": {
          "type": "string",
          "title": "Image",
          "format": "uri",
          "fileType": "image",
          "description": "The image you want to edit",
          "x-order": 0
        },
        "prompt": {
          "type": "string",
          "title": "Prompt",
          "description": "The desired hair style to apply.",
          "default": "bald",
          "x-order": 1
        },
        "guidance_scale": {
          "type": "number",
          "title": "Guidance Scale",
          "description": "The CFG (Classifier Free Guidance) scale is a measure of how close you want the model to stick to your prompt when looking for a related image to show you",
          "default": 3.5,
          "display": "hidden",
          "x-order": 2
        },
        "num_inference_steps": {
          "type": "integer",
          "title": "Number of Inference Steps",
          "description": "Number of inference steps for sampling",
          "default": 30,
          "display": "hidden",
          "x-order": 3
        },
        "safety_tolerance": {
          "type": "string",
          "title": "Safety Tolerance",
          "description": "The safety tolerance level for the generated image. 1 being the most strict and 6 being the most permissive",
          "enum": [
            "1",
            "2",
            "3",
            "4",
            "5",
            "6"
          ],
          "default": "6",
          "display": "hidden",
          "x-order": 4
        },
        "output_format": {
          "type": "string",
          "title": "Output Format",
          "description": "The format of the generated image",
          "enum": [
            "jpeg",
            "png"
          ],
          "default": "jpeg",
          "x-order": 5
        },
        "seed": {
          "type": "integer",
          "title": "Seed",
          "description": "The same seed and the same prompt given to the same version of the model will output the same image every time",
          "x-order": 6
        },
        "sync_mode": {
          "type": "boolean",
          "title": "Sync Mode",
          "description": "If set to true, the function will wait for the image to be generated and uploaded before returning the response. This will increase the latency of the function but it allows you to get the image directly in the response without going through the CDN",
          "x-order": 7,
          "display": "hidden"
        }
      }
    }
  },
  "imgedit/professional_shot": {
    "name": "imgedit/professional_shot",
    "schema": {
      "type": "object",
      "title": "Object Removal Input",
      "required": [
        "image_url"
      ],
      "linkto": {
        "*": "*"
      },
      "map": {
        "image_url": "image"
      },
      "properties": {
        "image_url": {
          "type": "string",
          "title": "Image",
          "format": "uri",
          "fileType": "image",
          "description": "The image you want to edit",
          "x-order": 0
        },
        "guidance_scale": {
          "type": "number",
          "title": "Guidance Scale",
          "description": "The CFG (Classifier Free Guidance) scale is a measure of how close you want the model to stick to your prompt when looking for a related image to show you",
          "default": 3.5,
          "display": "hidden",
          "x-order": 2
        },
        "num_inference_steps": {
          "type": "integer",
          "title": "Number of Inference Steps",
          "description": "Number of inference steps for sampling",
          "default": 30,
          "display": "hidden",
          "x-order": 3
        },
        "safety_tolerance": {
          "type": "string",
          "title": "Safety Tolerance",
          "description": "The safety tolerance level for the generated image. 1 being the most strict and 6 being the most permissive",
          "enum": [
            "1",
            "2",
            "3",
            "4",
            "5",
            "6"
          ],
          "default": "6",
          "display": "hidden",
          "x-order": 4
        },
        "output_format": {
          "type": "string",
          "title": "Output Format",
          "description": "The format of the generated image",
          "enum": [
            "jpeg",
            "png"
          ],
          "default": "jpeg",
          "x-order": 5
        },
        "seed": {
          "type": "integer",
          "title": "Seed",
          "description": "The same seed and the same prompt given to the same version of the model will output the same image every time",
          "x-order": 6
        },
        "sync_mode": {
          "type": "boolean",
          "title": "Sync Mode",
          "description": "If set to true, the function will wait for the image to be generated and uploaded before returning the response. This will increase the latency of the function but it allows you to get the image directly in the response without going through the CDN",
          "x-order": 7,
          "display": "hidden"
        }
      }
    }
  },
  "imgedit/scene_composition": {
    "name": "imgedit/scene_composition",
    "schema": {
      "type": "object",
      "title": "Object Removal Input",
      "required": [
        "image_url",
        "prompt"
      ],
      "linkto": {
        "*": "*"
      },
      "map": {
        "image_url": "image",
        "prompt": "prompt"
      },
      "translatable": [
        "prompt"
      ],
      "speech_enabled": [
        "prompt"
      ],
      "properties": {
        "image_url": {
          "type": "string",
          "title": "Image",
          "format": "uri",
          "fileType": "image",
          "description": "The image you want to edit",
          "x-order": 0
        },
        "prompt": {
          "type": "string",
          "title": "Prompt",
          "description": "Describe the scene where you want to place the subject.",
          "default": "Enchanted forest",
          "x-order": 1
        },
        "guidance_scale": {
          "type": "number",
          "title": "Guidance Scale",
          "description": "The CFG (Classifier Free Guidance) scale is a measure of how close you want the model to stick to your prompt when looking for a related image to show you",
          "default": 3.5,
          "display": "hidden",
          "x-order": 2
        },
        "num_inference_steps": {
          "type": "integer",
          "title": "Number of Inference Steps",
          "description": "Number of inference steps for sampling",
          "default": 30,
          "display": "hidden",
          "x-order": 3
        },
        "safety_tolerance": {
          "type": "string",
          "title": "Safety Tolerance",
          "description": "The safety tolerance level for the generated image. 1 being the most strict and 6 being the most permissive",
          "enum": [
            "1",
            "2",
            "3",
            "4",
            "5",
            "6"
          ],
          "default": "6",
          "display": "hidden",
          "x-order": 4
        },
        "output_format": {
          "type": "string",
          "title": "Output Format",
          "description": "The format of the generated image",
          "enum": [
            "jpeg",
            "png"
          ],
          "default": "jpeg",
          "x-order": 5
        },
        "seed": {
          "type": "integer",
          "title": "Seed",
          "description": "The same seed and the same prompt given to the same version of the model will output the same image every time",
          "x-order": 6
        },
        "sync_mode": {
          "type": "boolean",
          "title": "Sync Mode",
          "description": "If set to true, the function will wait for the image to be generated and uploaded before returning the response. This will increase the latency of the function but it allows you to get the image directly in the response without going through the CDN",
          "x-order": 7,
          "display": "hidden"
        }
      }
    }
  },
  "imgedit/stylize_sdxl": {
    "name": "imgedit/stylize_sdxl",
    "schema": {
      "type": "object",
      "title": "Input",
      "required": [
        "style_image"
      ],
      "translatable": [
        "prompt",
        "negative_prompt"
      ],
      "speech_enabled": [
        "prompt",
        "negative_prompt"
      ],
      "linkto": {
        "*": "*"
      },
      "map": {
        "style_image": "image",
        "prompt": "prompt"
      },
      "properties": {
        "seed": {
          "type": "integer",
          "title": "Seed",
          "x-order": 12,
          "description": "Set a seed for reproducibility. Random by default."
        },
        "model": {
          "enum": [
            "fast",
            "high-quality",
            "realistic",
            "cinematic",
            "animated"
          ],
          "type": "string",
          "title": "model",
          "description": "Model to use for the generation",
          "default": "fast",
          "x-order": 6
        },
        "width": {
          "type": "integer",
          "title": "Width",
          "default": 1024,
          "x-order": 4,
          "description": "Width of the output image (ignored if structure image given)"
        },
        "height": {
          "type": "integer",
          "title": "Height",
          "default": 1024,
          "x-order": 5,
          "description": "Height of the output image (ignored if structure image given)"
        },
        "prompt": {
          "type": "string",
          "title": "Prompt",
          "default": "An astronaut riding a unicorn",
          "x-order": 2,
          "description": "Prompt for the image"
        },
        "style_image": {
          "type": "string",
          "title": "Style Image",
          "fileType": "image",
          "format": "uri",
          "x-order": 0,
          "description": "Copy the style from this image"
        },
        "output_format": {
          "enum": [
            "webp",
            "jpg",
            "png"
          ],
          "type": "string",
          "title": "output_format",
          "description": "Format of the output images",
          "default": "webp",
          "x-order": 10
        },
        "output_quality": {
          "type": "integer",
          "title": "Output Quality",
          "default": 80,
          "maximum": 100,
          "minimum": 0,
          "x-order": 11,
          "description": "Quality of the output images, from 0 to 100. 100 is best quality, 0 is lowest quality."
        },
        "negative_prompt": {
          "type": "string",
          "title": "Negative Prompt",
          "default": "",
          "x-order": 3,
          "description": "Things you do not want to see in your image"
        },
        "structure_image": {
          "type": "string",
          "title": "Structure Image",
          "fileType": "image",
          "format": "uri",
          "x-order": 1,
          "description": "An optional image to copy structure from. Output images will use the same aspect ratio."
        },
        "number_of_images": {
          "type": "integer",
          "title": "Number Of Images",
          "default": 1,
          "maximum": 10,
          "minimum": 1,
          "x-order": 7,
          "display": "hidden",
          "description": "Number of images to generate"
        },
        "structure_depth_strength": {
          "type": "number",
          "title": "Structure Depth Strength",
          "default": 1,
          "maximum": 2,
          "minimum": 0,
          "x-order": 8,
          "description": "Strength of the depth controlnet"
        },
        "structure_denoising_strength": {
          "type": "number",
          "title": "Structure Denoising Strength",
          "default": 0.65,
          "maximum": 1,
          "minimum": 0,
          "x-order": 9,
          "description": "How much of the original image (and colors) to preserve (0 is all, 1 is none, 0.65 is a good balance)"
        }
      }
    }
  },
  "imgedit/stylize_flux": {
    "name": "imgedit/stylize_flux",
    "schema": {
      "type": "object",
      "title": "Object Removal Input",
      "required": [
        "image_url",
        "prompt"
      ],
      "linkto": {
        "*": "*"
      },
      "map": {
        "image_url": "image",
        "prompt": "prompt"
      },
      "translatable": [
        "prompt"
      ],
      "speech_enabled": [
        "prompt"
      ],
      "properties": {
        "image_url": {
          "type": "string",
          "title": "Image",
          "format": "uri",
          "fileType": "image",
          "description": "The image you want to edit",
          "x-order": 0
        },
        "prompt": {
          "type": "string",
          "title": "Prompt",
          "description": "The artistic style to apply.",
          "default": "Van Gogh's Starry Night",
          "x-order": 1
        },
        "guidance_scale": {
          "type": "number",
          "title": "Guidance Scale",
          "description": "The CFG (Classifier Free Guidance) scale is a measure of how close you want the model to stick to your prompt when looking for a related image to show you",
          "default": 3.5,
          "display": "hidden",
          "x-order": 2
        },
        "num_inference_steps": {
          "type": "integer",
          "title": "Number of Inference Steps",
          "description": "Number of inference steps for sampling",
          "default": 30,
          "display": "hidden",
          "x-order": 3
        },
        "safety_tolerance": {
          "type": "string",
          "title": "Safety Tolerance",
          "description": "The safety tolerance level for the generated image. 1 being the most strict and 6 being the most permissive",
          "enum": [
            "1",
            "2",
            "3",
            "4",
            "5",
            "6"
          ],
          "default": "6",
          "display": "hidden",
          "x-order": 4
        },
        "output_format": {
          "type": "string",
          "title": "Output Format",
          "description": "The format of the generated image",
          "enum": [
            "jpeg",
            "png"
          ],
          "default": "jpeg",
          "x-order": 5
        },
        "seed": {
          "type": "integer",
          "title": "Seed",
          "description": "The same seed and the same prompt given to the same version of the model will output the same image every time",
          "x-order": 6
        },
        "sync_mode": {
          "type": "boolean",
          "title": "Sync Mode",
          "description": "If set to true, the function will wait for the image to be generated and uploaded before returning the response. This will increase the latency of the function but it allows you to get the image directly in the response without going through the CDN",
          "x-order": 7,
          "display": "hidden"
        }
      }
    }
  },
  "imgedit/daytime_change": {
    "name": "imgedit/daytime_change",
    "schema": {
      "type": "object",
      "title": "Object Removal Input",
      "required": [
        "image_url",
        "prompt"
      ],
      "linkto": {
        "*": "*"
      },
      "map": {
        "image_url": "image",
        "prompt": "prompt"
      },
      "translatable": [
        "prompt"
      ],
      "speech_enabled": [
        "prompt"
      ],
      "properties": {
        "image_url": {
          "type": "string",
          "title": "Image",
          "format": "uri",
          "fileType": "image",
          "description": "The image you want to edit",
          "x-order": 0
        },
        "prompt": {
          "type": "string",
          "title": "Prompt",
          "description": "The time of day to transform the scene to.",
          "default": "Golden hour.",
          "x-order": 1
        },
        "guidance_scale": {
          "type": "number",
          "title": "Guidance Scale",
          "description": "The CFG (Classifier Free Guidance) scale is a measure of how close you want the model to stick to your prompt when looking for a related image to show you",
          "default": 3.5,
          "display": "hidden",
          "x-order": 2
        },
        "num_inference_steps": {
          "type": "integer",
          "title": "Number of Inference Steps",
          "description": "Number of inference steps for sampling",
          "default": 30,
          "display": "hidden",
          "x-order": 3
        },
        "safety_tolerance": {
          "type": "string",
          "title": "Safety Tolerance",
          "description": "The safety tolerance level for the generated image. 1 being the most strict and 6 being the most permissive",
          "enum": [
            "1",
            "2",
            "3",
            "4",
            "5",
            "6"
          ],
          "default": "6",
          "display": "hidden",
          "x-order": 4
        },
        "output_format": {
          "type": "string",
          "title": "Output Format",
          "description": "The format of the generated image",
          "enum": [
            "jpeg",
            "png"
          ],
          "default": "jpeg",
          "x-order": 5
        },
        "seed": {
          "type": "integer",
          "title": "Seed",
          "description": "The same seed and the same prompt given to the same version of the model will output the same image every time",
          "x-order": 6
        },
        "sync_mode": {
          "type": "boolean",
          "title": "Sync Mode",
          "description": "If set to true, the function will wait for the image to be generated and uploaded before returning the response. This will increase the latency of the function but it allows you to get the image directly in the response without going through the CDN",
          "x-order": 7,
          "display": "hidden"
        }
      }
    }
  },
  "imgedit/weather_effect": {
    "name": "imgedit/weather_effect",
    "schema": {
      "type": "object",
      "title": "Object Removal Input",
      "required": [
        "image_url",
        "prompt"
      ],
      "linkto": {
        "*": "*"
      },
      "map": {
        "image_url": "image",
        "prompt": "prompt"
      },
      "translatable": [
        "prompt"
      ],
      "speech_enabled": [
        "prompt"
      ],
      "properties": {
        "image_url": {
          "type": "string",
          "title": "Image",
          "format": "uri",
          "fileType": "image",
          "description": "The image you want to edit",
          "x-order": 0
        },
        "prompt": {
          "type": "string",
          "title": "Prompt",
          "description": "The weather effect to apply.",
          "default": "heavy snowfall",
          "x-order": 1
        },
        "guidance_scale": {
          "type": "number",
          "title": "Guidance Scale",
          "description": "The CFG (Classifier Free Guidance) scale is a measure of how close you want the model to stick to your prompt when looking for a related image to show you",
          "default": 3.5,
          "display": "hidden",
          "x-order": 2
        },
        "num_inference_steps": {
          "type": "integer",
          "title": "Number of Inference Steps",
          "description": "Number of inference steps for sampling",
          "default": 30,
          "display": "hidden",
          "x-order": 3
        },
        "safety_tolerance": {
          "type": "string",
          "title": "Safety Tolerance",
          "description": "The safety tolerance level for the generated image. 1 being the most strict and 6 being the most permissive",
          "enum": [
            "1",
            "2",
            "3",
            "4",
            "5",
            "6"
          ],
          "default": "6",
          "display": "hidden",
          "x-order": 4
        },
        "output_format": {
          "type": "string",
          "title": "Output Format",
          "description": "The format of the generated image",
          "enum": [
            "jpeg",
            "png"
          ],
          "default": "jpeg",
          "x-order": 5
        },
        "seed": {
          "type": "integer",
          "title": "Seed",
          "description": "The same seed and the same prompt given to the same version of the model will output the same image every time",
          "x-order": 6
        },
        "sync_mode": {
          "type": "boolean",
          "title": "Sync Mode",
          "description": "If set to true, the function will wait for the image to be generated and uploaded before returning the response. This will increase the latency of the function but it allows you to get the image directly in the response without going through the CDN",
          "x-order": 7,
          "display": "hidden"
        }
      }
    }
  },
  "imgedit/filters": {
    "name": "imgedit/filters",
    "schema": {
      "type": "object",
      "title": "Input",
      "required": [
        "input_image"
      ],
      "linkto": {
        "*": "*"
      },
      "map": {
        "image_filter": "image_filter",
        "aspect_ratio": "aspect_ratio",
        "seed": "seed",
        "input_image": "image"
      },
      "properties": {
        "seed": {
          "type": "integer",
          "title": "Seed",
          "x-order": 3,
          "nullable": true,
          "description": "Random seed. Set for reproducible generation"
        },
        "input_image": {
          "type": "string",
          "title": "Input Image",
          "format": "uri",
          "fileType": "image",
          "x-order": 0,
          "description": "Image to apply filter to. Must be jpeg, png, gif, or webp."
        },
        "aspect_ratio": {
          "enum": [
            "match_input_image",
            "1:1",
            "16:9",
            "9:16",
            "4:3",
            "3:4",
            "3:2",
            "2:3",
            "4:5",
            "5:4",
            "21:9",
            "9:21",
            "2:1",
            "1:2"
          ],
          "type": "string",
          "title": "aspect_ratio",
          "description": "Aspect ratio of the generated image. Use 'match_input_image' to match the aspect ratio of the input image.",
          "default": "match_input_image",
          "x-order": 2
        },
        "image_filter": {
          "enum": [
            "Vivid",
            "Black and White",
            "Sepia",
            "Grayscale",
            "Warm",
            "Cool"
          ],
          "type": "string",
          "title": "image_filter",
          "description": "The filter to apply to the image",
          "default": "Vivid",
          "x-order": 1
        }
      }
    }
  },
  "imgedit/restore_image": {
    "name": "imgedit/restore_image",
    "schema": {
      "type": "object",
      "title": "Input",
      "required": [
        "input_image"
      ],
      "linkto": {
        "*": "*"
      },
      "map": {
        "image_filter": "image_filter",
        "aspect_ratio": "aspect_ratio",
        "seed": "seed",
        "input_image": "image"
      },
      "properties": {
        "seed": {
          "type": "integer",
          "title": "Seed",
          "x-order": 1,
          "description": "Random seed. Set for reproducible generation"
        },
        "input_image": {
          "type": "string",
          "title": "Input Image",
          "fileType": "image",
          "format": "uri",
          "x-order": 0,
          "description": "Image to restore. Must be jpeg, png, gif, or webp."
        },
        "output_format": {
          "enum": [
            "jpg",
            "png"
          ],
          "type": "string",
          "title": "output_format",
          "description": "Output format for the generated image",
          "default": "png",
          "x-order": 2
        },
        "safety_tolerance": {
          "type": "integer",
          "title": "Safety Tolerance",
          "default": 2,
          "maximum": 2,
          "minimum": 0,
          "x-order": 3,
          "description": "Safety tolerance, 0 is most strict and 2 is most permissive. 2 is currently the maximum allowed."
        }
      }
    }
  },
  "imgedit/magic_image_refiner": {
    "name": "imgedit/magic_image_refiner",
    "schema": {
      "type": "object",
      "title": "Input",
      "required": [
        "image",
        "prompt"
      ],
      "translatable": [
        "prompt"
      ],
      "speech_enabled": [
        "prompt"
      ],
      "linkto": {
        "*": "*"
      },
      "map": {
        "image_filter": "image_filter",
        "aspect_ratio": "aspect_ratio",
        "seed": "seed",
        "image": "image",
        "mask": "mask",
        "prompt": "prompt"
      },
      "properties": {
        "hdr": {
          "type": "number",
          "title": "Hdr",
          "default": 0,
          "maximum": 1,
          "minimum": 0,
          "x-order": 6,
          "description": "HDR improvement over the original image"
        },
        "mask": {
          "type": "string",
          "title": "Mask",
          "format": "uri",
          "fileType": "image",
          "extra": "Create mask",
          "default_type": "mask",
          "default_extra": "image",
          "x-order": 2,
          "description": "When provided, refines some section of the image. Must be the same size as the image"
        },
        "seed": {
          "type": "integer",
          "title": "Seed",
          "x-order": 10,
          "description": "Seed"
        },
        "image": {
          "type": "string",
          "title": "Image",
          "format": "uri",
          "fileType": "image",
          "x-order": 1,
          "description": "Image to refine"
        },
        "steps": {
          "type": "integer",
          "title": "Steps",
          "default": 20,
          "x-order": 8,
          "description": "Steps"
        },
        "prompt": {
          "type": "string",
          "title": "Prompt",
          "x-order": 0,
          "description": "Prompt for the model"
        },
        "scheduler": {
          "enum": [
            "DDIM",
            "DPMSolverMultistep",
            "K_EULER_ANCESTRAL",
            "K_EULER"
          ],
          "type": "string",
          "title": "scheduler",
          "description": "Choose a scheduler.",
          "default": "DDIM",
          "x-order": 7
        },
        "creativity": {
          "type": "number",
          "title": "Creativity",
          "default": 0.25,
          "maximum": 1,
          "minimum": 0,
          "x-order": 5,
          "description": "Denoising strength. 1 means total destruction of the original image"
        },
        "guess_mode": {
          "type": "boolean",
          "title": "Guess Mode",
          "default": false,
          "x-order": 12,
          "description": "In this mode, the ControlNet encoder will try best to recognize the content of the input image even if you remove all prompts. The `guidance_scale` between 3.0 and 5.0 is recommended."
        },
        "resolution": {
          "enum": [
            "original",
            "1024",
            "2048"
          ],
          "type": "string",
          "title": "resolution",
          "description": "Image resolution",
          "default": "original",
          "x-order": 3
        },
        "resemblance": {
          "type": "number",
          "title": "Resemblance",
          "default": 0.75,
          "maximum": 1,
          "minimum": 0,
          "x-order": 4,
          "description": "Conditioning scale for controlnet"
        },
        "guidance_scale": {
          "type": "number",
          "title": "Guidance Scale",
          "default": 7,
          "maximum": 30,
          "minimum": 0.1,
          "x-order": 9,
          "description": "Scale for classifier-free guidance"
        },
        "negative_prompt": {
          "type": "string",
          "title": "Negative Prompt",
          "default": "teeth, tooth, open mouth, longbody, lowres, bad anatomy, bad hands, missing fingers, extra digit, fewer digits, cropped, worst quality, low quality, mutant",
          "x-order": 11,
          "description": "Negative prompt"
        }
      }
    }
  },
  "imgedit/text_removal": {
    "name": "imgedit/text_removal",
    "schema": {
      "type": "object",
      "title": "Input",
      "required": [
        "input_image"
      ],
      "linkto": {
        "*": "*"
      },
      "map": {
        "image_filter": "image_filter",
        "aspect_ratio": "aspect_ratio",
        "seed": "seed",
        "input_image": "image"
      },
      "properties": {
        "seed": {
          "type": "integer",
          "title": "Seed",
          "x-order": 2,
          "nullable": true,
          "description": "Random seed. Set for reproducible generation"
        },
        "input_image": {
          "type": "string",
          "title": "Input Image",
          "format": "uri",
          "fileType": "image",
          "x-order": 0,
          "description": "Image to remove text from. Must be jpeg, png, gif, or webp."
        },
        "aspect_ratio": {
          "enum": [
            "match_input_image",
            "1:1",
            "16:9",
            "9:16",
            "4:3",
            "3:4",
            "3:2",
            "2:3",
            "4:5",
            "5:4",
            "21:9",
            "9:21",
            "2:1",
            "1:2"
          ],
          "type": "string",
          "title": "aspect_ratio",
          "description": "Aspect ratio of the generated image. Use 'match_input_image' to match the aspect ratio of the input image.",
          "default": "match_input_image",
          "x-order": 1
        },
        "output_format": {
          "enum": [
            "jpg",
            "png"
          ],
          "type": "string",
          "title": "output_format",
          "description": "Output format for the generated image",
          "default": "png",
          "x-order": 3
        },
        "safety_tolerance": {
          "type": "integer",
          "title": "Safety Tolerance",
          "default": 2,
          "maximum": 2,
          "minimum": 0,
          "x-order": 4,
          "description": "Safety tolerance, 0 is most strict and 2 is most permissive. 2 is currently the maximum allowed."
        }
      }
    }
  },
  "imgedit/face_to_many": {
    "name": "imgedit/face_to_many",
    "schema": {
      "type": "object",
      "title": "Input",
      "required": [
        "input_image"
      ],
      "linkto": {
        "*": "*"
      },
      "map": {
        "image_filter": "image_filter",
        "aspect_ratio": "aspect_ratio",
        "seed": "seed",
        "input_image": "image"
      },
      "properties": {
        "seed": {
          "type": "integer",
          "title": "Seed",
          "x-order": 7,
          "nullable": true,
          "description": "Random seed. Set for reproducible generation"
        },
        "style": {
          "enum": [
            "Anime",
            "Cartoon",
            "Clay",
            "Gothic",
            "Graphic Novel",
            "Lego",
            "Memoji",
            "Minecraft",
            "Minimalist",
            "Pixel Art",
            "Random",
            "Simpsons",
            "Sketch",
            "South Park",
            "Toy",
            "Watercolor"
          ],
          "type": "string",
          "title": "style",
          "description": "The artistic style to apply to the image",
          "default": "Random",
          "x-order": 1
        },
        "persona": {
          "enum": [
            "Angel",
            "Astronaut",
            "Demon",
            "Mage",
            "Ninja",
            "Na'vi",
            "None",
            "Random",
            "Robot",
            "Samurai",
            "Vampire",
            "Werewolf",
            "Zombie"
          ],
          "type": "string",
          "title": "persona",
          "description": "The persona to apply to the image",
          "default": "None",
          "x-order": 2
        },
        "num_images": {
          "type": "integer",
          "title": "Num Images",
          "default": 1,
          "maximum": 10,
          "minimum": 1,
          "display": "hidden",
          "x-order": 3,
          "description": "The number of images to generate"
        },
        "input_image": {
          "type": "string",
          "title": "Input Image",
          "format": "uri",
          "fileType": "image",
          "x-order": 0,
          "description": "Image of the person to transform. Must be jpeg, png, gif, or webp."
        },
        "aspect_ratio": {
          "enum": [
            "match_input_image",
            "1:1",
            "16:9",
            "9:16",
            "4:3",
            "3:4",
            "3:2",
            "2:3",
            "4:5",
            "5:4",
            "21:9",
            "9:21",
            "2:1",
            "1:2"
          ],
          "type": "string",
          "title": "aspect_ratio",
          "description": "Aspect ratio of the generated image. Use 'match_input_image' to match the aspect ratio of the input image.",
          "default": "match_input_image",
          "x-order": 6
        },
        "output_format": {
          "enum": [
            "jpg",
            "png"
          ],
          "type": "string",
          "title": "output_format",
          "description": "Output format for the generated image",
          "default": "png",
          "x-order": 8
        },
        "preserve_outfit": {
          "type": "boolean",
          "title": "Preserve Outfit",
          "default": false,
          "x-order": 5,
          "description": "Whether to preserve the outfit"
        },
        "safety_tolerance": {
          "type": "integer",
          "title": "Safety Tolerance",
          "default": 2,
          "maximum": 2,
          "minimum": 0,
          "x-order": 9,
          "description": "Safety tolerance, 0 is most strict and 2 is most permissive. 2 is currently the maximum allowed."
        },
        "preserve_background": {
          "type": "boolean",
          "title": "Preserve Background",
          "default": false,
          "x-order": 4,
          "description": "Whether to preserve the background"
        }
      }
    }
  },
  "imgedit/face_to_many_sdxl": {
    "name": "imgedit/face_to_many_sdxl",
    "schema": {
      "type": "object",
      "title": "Input",
      "translatable": [
        "prompt",
        "negative_prompt"
      ],
      "speech_enabled": [
        "prompt",
        "negative_prompt"
      ],
      "linkto": {
        "*": "*"
      },
      "map": {
        "image": "image",
        "prompt": "prompt"
      },
      "properties": {
        "seed": {
          "type": "integer",
          "title": "Seed",
          "x-order": 8,
          "description": "Fix the random seed for reproducibility"
        },
        "image": {
          "type": "string",
          "title": "Image",
          "format": "uri",
          "fileType": "image",
          "x-order": 0,
          "description": "An image of a person to be converted"
        },
        "style": {
          "enum": [
            "3D",
            "Emoji",
            "Video game",
            "Pixels",
            "Clay",
            "Toy"
          ],
          "type": "string",
          "title": "style",
          "description": "Style to convert to",
          "default": "3D",
          "x-order": 1
        },
        "prompt": {
          "type": "string",
          "title": "Prompt",
          "default": "a person",
          "description": "Prompt.",
          "x-order": 2
        },
        "negative_prompt": {
          "type": "string",
          "title": "Negative Prompt",
          "default": "",
          "x-order": 3,
          "description": "Things you do not want in the image"
        },
        "prompt_strength": {
          "type": "number",
          "title": "Prompt Strength",
          "default": 4.5,
          "maximum": 20,
          "minimum": 0,
          "x-order": 5,
          "description": "Strength of the prompt. This is the CFG scale, higher numbers lead to stronger prompt, lower numbers will keep more of a likeness to the original."
        },
        "denoising_strength": {
          "type": "number",
          "title": "Denoising Strength",
          "default": 0.65,
          "maximum": 1,
          "minimum": 0,
          "x-order": 4,
          "description": "How much of the original image to keep. 1 is the complete destruction of the original image, 0 is the original image"
        },
        "instant_id_strength": {
          "type": "number",
          "title": "Instant Id Strength",
          "default": 1,
          "maximum": 1,
          "minimum": 0,
          "x-order": 7,
          "description": "How strong the InstantID will be."
        },
        "control_depth_strength": {
          "type": "number",
          "title": "Control Depth Strength",
          "default": 0.8,
          "maximum": 1,
          "minimum": 0,
          "x-order": 6,
          "description": "Strength of depth controlnet. The bigger this is, the more controlnet affects the output."
        }
      }
    }
  },
  "imgedit/face_to_sticker_sdxl": {
    "name": "imgedit/face_to_sticker_sdxl",
    "schema": {
      "type": "object",
      "title": "Input",
      "translatable": [
        "prompt",
        "negative_prompt"
      ],
      "speech_enabled": [
        "prompt",
        "negative_prompt"
      ],
      "linkto": {
        "*": "*"
      },
      "map": {
        "image": "image",
        "prompt": "prompt"
      },
      "properties": {
        "seed": {
          "type": "integer",
          "title": "Seed",
          "x-order": 6,
          "description": "Fix the random seed for reproducibility"
        },
        "image": {
          "type": "string",
          "title": "Image",
          "format": "uri",
          "fileType": "image",
          "x-order": 0,
          "description": "An image of a person to be converted to a sticker"
        },
        "steps": {
          "type": "integer",
          "title": "Steps",
          "default": 20,
          "x-order": 5
        },
        "width": {
          "type": "integer",
          "title": "Width",
          "default": 1024,
          "x-order": 3
        },
        "height": {
          "type": "integer",
          "title": "Height",
          "default": 1024,
          "x-order": 4
        },
        "prompt": {
          "type": "string",
          "title": "Prompt",
          "default": "a person",
          "x-order": 1
        },
        "upscale": {
          "type": "boolean",
          "title": "Upscale",
          "default": false,
          "x-order": 11,
          "description": "2x upscale the sticker"
        },
        "upscale_steps": {
          "type": "integer",
          "title": "Upscale Steps",
          "default": 10,
          "x-order": 12,
          "description": "Number of steps to upscale"
        },
        "negative_prompt": {
          "type": "string",
          "title": "Negative Prompt",
          "default": "",
          "x-order": 2,
          "description": "Things you do not want in the image"
        },
        "prompt_strength": {
          "type": "number",
          "title": "Prompt Strength",
          "default": 7,
          "x-order": 7,
          "description": "Strength of the prompt. This is the CFG scale, higher numbers lead to stronger prompt, lower numbers will keep more of a likeness to the original."
        },
        "ip_adapter_noise": {
          "type": "number",
          "title": "Ip Adapter Noise",
          "default": 0.5,
          "maximum": 1,
          "minimum": 0,
          "x-order": 10,
          "description": "How much noise is added to the IP adapter input"
        },
        "ip_adapter_weight": {
          "type": "number",
          "title": "Ip Adapter Weight",
          "default": 0.2,
          "maximum": 1,
          "minimum": 0,
          "x-order": 9,
          "description": "How much the IP adapter will influence the image"
        },
        "instant_id_strength": {
          "type": "number",
          "title": "Instant Id Strength",
          "default": 1,
          "maximum": 1,
          "minimum": 0,
          "x-order": 8,
          "description": "How strong the InstantID will be."
        }
      }
    }
  },
  "imgedit/photomakeover_instant_id": {
    "name": "imgedit/photomakeover_instant_id",
    "schema": {
      "type": "object",
      "title": "Input",
      "required": [
        "image"
      ],
      "translatable": [
        "prompt",
        "negative_prompt"
      ],
      "speech_enabled": [
        "prompt",
        "negative_prompt"
      ],
      "linkto": {
        "*": "*"
      },
      "map": {
        "image": "image",
        "prompt": "prompt"
      },
      "properties": {
        "seed": {
          "type": "integer",
          "title": "Seed",
          "x-order": 24,
          "description": "Random seed. Leave blank to randomize the seed"
        },
        "image": {
          "type": "string",
          "title": "Image",
          "format": "uri",
          "fileType": "image",
          "x-order": 0,
          "description": "Input face image"
        },
        "prompt": {
          "type": "string",
          "title": "Prompt",
          "default": "a person",
          "x-order": 2,
          "description": "Input prompt"
        },
        "scheduler": {
          "enum": [
            "DEISMultistepScheduler",
            "HeunDiscreteScheduler",
            "EulerDiscreteScheduler",
            "DPMSolverMultistepScheduler",
            "DPMSolverMultistepScheduler-Karras",
            "DPMSolverMultistepScheduler-Karras-SDE"
          ],
          "type": "string",
          "title": "scheduler",
          "description": "Scheduler",
          "default": "EulerDiscreteScheduler",
          "display": "hidden",
          "x-order": 7
        },
        "enable_lcm": {
          "type": "boolean",
          "title": "Enable Lcm",
          "default": false,
          "x-order": 18,
          "display": "hidden",
          "description": "Enable Fast Inference with LCM (Latent Consistency Models) - speeds up inference steps, trade-off is the quality of the generated image. Performs better with close-up portrait face images"
        },
        "pose_image": {
          "type": "string",
          "title": "Pose Image",
          "format": "uri",
          "fileType": "image",
          "x-order": 1,
          "description": "(Optional) reference pose image"
        },
        "num_outputs": {
          "type": "integer",
          "title": "Num Outputs",
          "default": 1,
          "maximum": 8,
          "minimum": 1,
          "x-order": 25,
          "display": "hidden",
          "description": "Number of images to output"
        },
        "sdxl_weights": {
          "enum": [
            "stable-diffusion-xl-base-1.0",
            "juggernaut-xl-v8",
            "afrodite-xl-v2",
            "albedobase-xl-20",
            "albedobase-xl-v13",
            "animagine-xl-30",
            "anime-art-diffusion-xl",
            "anime-illust-diffusion-xl",
            "dreamshaper-xl",
            "dynavision-xl-v0610",
            "guofeng4-xl",
            "nightvision-xl-0791",
            "omnigen-xl",
            "pony-diffusion-v6-xl",
            "protovision-xl-high-fidel",
            "RealVisXL_V3.0_Turbo",
            "RealVisXL_V4.0_Lightning"
          ],
          "type": "string",
          "title": "sdxl_weights",
          "description": "Pick which base weights you want to use",
          "default": "stable-diffusion-xl-base-1.0",
          "x-order": 4
        },
        "output_format": {
          "enum": [
            "webp",
            "jpg",
            "png"
          ],
          "type": "string",
          "title": "output_format",
          "description": "Format of the output images",
          "default": "webp",
          "x-order": 22
        },
        "pose_strength": {
          "type": "number",
          "title": "Pose Strength",
          "default": 0.4,
          "maximum": 1,
          "minimum": 0,
          "x-order": 13,
          "description": "Openpose ControlNet strength, effective only if `enable_pose_controlnet` is true"
        },
        "canny_strength": {
          "type": "number",
          "title": "Canny Strength",
          "default": 0.3,
          "maximum": 1,
          "minimum": 0,
          "x-order": 15,
          "description": "Canny ControlNet strength, effective only if `enable_canny_controlnet` is true"
        },
        "depth_strength": {
          "type": "number",
          "title": "Depth Strength",
          "default": 0.5,
          "maximum": 1,
          "minimum": 0,
          "x-order": 17,
          "description": "Depth ControlNet strength, effective only if `enable_depth_controlnet` is true"
        },
        "guidance_scale": {
          "type": "number",
          "title": "Guidance Scale",
          "default": 7.5,
          "maximum": 50,
          "minimum": 1,
          "x-order": 9,
          "description": "Scale for classifier-free guidance"
        },
        "output_quality": {
          "type": "integer",
          "title": "Output Quality",
          "default": 80,
          "maximum": 100,
          "minimum": 0,
          "x-order": 23,
          "description": "Quality of the output images, from 0 to 100. 100 is best quality, 0 is lowest quality."
        },
        "negative_prompt": {
          "type": "string",
          "title": "Negative Prompt",
          "default": "",
          "x-order": 3,
          "description": "Input Negative Prompt"
        },
        "ip_adapter_scale": {
          "type": "number",
          "title": "Ip Adapter Scale",
          "default": 0.8,
          "maximum": 1.5,
          "minimum": 0,
          "x-order": 10,
          "description": "Scale for image adapter strength (for detail)"
        },
        "lcm_guidance_scale": {
          "type": "number",
          "title": "Lcm Guidance Scale",
          "default": 1.5,
          "maximum": 20,
          "minimum": 1,
          "x-order": 20,
          "display": "hidden",
          "description": "Only used when `enable_lcm` is set to True, Scale for classifier-free guidance when using LCM"
        },
        "num_inference_steps": {
          "type": "integer",
          "title": "Num Inference Steps",
          "default": 30,
          "maximum": 500,
          "minimum": 1,
          "x-order": 8,
          "display": "hidden",
          "description": "Number of denoising steps"
        },
        "disable_safety_checker": {
          "type": "boolean",
          "title": "Disable Safety Checker",
          "default": true,
          "x-order": 26,
          "display": "hidden",
          "description": "Disable safety checker for generated images"
        },
        "enable_pose_controlnet": {
          "type": "boolean",
          "title": "Enable Pose Controlnet",
          "default": true,
          "x-order": 12,
          "description": "Enable Openpose ControlNet, overrides strength if set to false"
        },
        "enhance_nonface_region": {
          "type": "boolean",
          "title": "Enhance Nonface Region",
          "default": true,
          "x-order": 21,
          "description": "Enhance non-face region"
        },
        "enable_canny_controlnet": {
          "type": "boolean",
          "title": "Enable Canny Controlnet",
          "default": false,
          "x-order": 14,
          "description": "Enable Canny ControlNet, overrides strength if set to false"
        },
        "enable_depth_controlnet": {
          "type": "boolean",
          "title": "Enable Depth Controlnet",
          "default": false,
          "x-order": 16,
          "description": "Enable Depth ControlNet, overrides strength if set to false"
        },
        "lcm_num_inference_steps": {
          "type": "integer",
          "title": "Lcm Num Inference Steps",
          "default": 5,
          "maximum": 10,
          "minimum": 1,
          "x-order": 19,
          "display": "hidden",
          "description": "Only used when `enable_lcm` is set to True, Number of denoising steps when using LCM"
        },
        "face_detection_input_width": {
          "type": "integer",
          "title": "Face Detection Input Width",
          "default": 640,
          "maximum": 4096,
          "minimum": 640,
          "x-order": 5,
          "description": "Width of the input image for face detection"
        },
        "face_detection_input_height": {
          "type": "integer",
          "title": "Face Detection Input Height",
          "default": 640,
          "maximum": 4096,
          "minimum": 640,
          "x-order": 6,
          "description": "Height of the input image for face detection"
        },
        "controlnet_conditioning_scale": {
          "type": "number",
          "title": "Controlnet Conditioning Scale",
          "default": 0.8,
          "maximum": 1.5,
          "minimum": 0,
          "x-order": 11,
          "display": "hidden",
          "description": "Scale for IdentityNet strength (for fidelity)"
        }
      }
    }
  },
  "imgedit/photomakeover_photomaker": {
    "name": "imgedit/photomakeover_photomaker",
    "schema": {
      "type": "object",
      "title": "Input",
      "required": [
        "input_image"
      ],
      "translatable": [
        "prompt",
        "negative_prompt"
      ],
      "speech_enabled": [
        "prompt",
        "negative_prompt"
      ],
      "linkto": {
        "*": "*"
      },
      "map": {
        "input_image": "image",
        "prompt": "prompt"
      },
      "properties": {
        "seed": {
          "type": "integer",
          "title": "Seed",
          "x-order": 11,
          "description": "Seed. Leave blank to use a random number"
        },
        "prompt": {
          "type": "string",
          "title": "Prompt",
          "default": "A photo of a person img",
          "x-order": 4,
          "description": "Prompt. Example: 'a photo of a man/woman img'. The phrase 'img' is the trigger word."
        },
        "num_steps": {
          "type": "integer",
          "title": "Num Steps",
          "default": 20,
          "maximum": 100,
          "minimum": 1,
          "x-order": 7,
          "description": "Number of sample steps"
        },
        "style_name": {
          "enum": [
            "(No style)",
            "Cinematic",
            "Disney Charactor",
            "Digital Art",
            "Photographic (Default)",
            "Fantasy art",
            "Neonpunk",
            "Enhance",
            "Comic book",
            "Lowpoly",
            "Line art"
          ],
          "type": "string",
          "title": "style_name",
          "description": "Style template. The style template will add a style-specific prompt and negative prompt to the user's prompt.",
          "default": "Photographic (Default)",
          "x-order": 5
        },
        "input_image": {
          "type": "string",
          "title": "Input Image",
          "format": "uri",
          "fileType": "image",
          "x-order": 0,
          "description": "The input image, for example a photo of your face."
        },
        "num_outputs": {
          "type": "integer",
          "title": "Num Outputs",
          "default": 1,
          "maximum": 4,
          "minimum": 1,
          "x-order": 9,
          "description": "Number of output images"
        },
        "input_image2": {
          "type": "string",
          "title": "Input Image2",
          "format": "uri",
          "fileType": "image",
          "x-order": 1,
          "description": "Additional input image (optional)"
        },
        "input_image3": {
          "type": "string",
          "title": "Input Image3",
          "format": "uri",
          "fileType": "image",
          "x-order": 2,
          "description": "Additional input image (optional)"
        },
        "input_image4": {
          "type": "string",
          "title": "Input Image4",
          "format": "uri",
          "fileType": "image",
          "x-order": 3,
          "description": "Additional input image (optional)"
        },
        "guidance_scale": {
          "type": "number",
          "title": "Guidance Scale",
          "default": 5,
          "maximum": 10,
          "minimum": 1,
          "x-order": 10,
          "display": "hidden",
          "description": "Guidance scale. A guidance scale of 1 corresponds to doing no classifier free guidance."
        },
        "negative_prompt": {
          "type": "string",
          "title": "Negative Prompt",
          "default": "nsfw, lowres, bad anatomy, bad hands, text, error, missing fingers, extra digit, fewer digits, cropped, worst quality, low quality, normal quality, jpeg artifacts, signature, watermark, username, blurry",
          "x-order": 6,
          "description": "Negative Prompt. The negative prompt should NOT contain the trigger word."
        },
        "style_strength_ratio": {
          "type": "number",
          "title": "Style Strength Ratio",
          "default": 20,
          "maximum": 50,
          "minimum": 15,
          "x-order": 8,
          "display": "hidden",
          "description": "Style strength (%)"
        },
        "disable_safety_checker": {
          "type": "boolean",
          "title": "Disable Safety Checker",
          "default": true,
          "x-order": 12,
          "display": "hidden",
          "description": "Disable safety checker for generated images."
        }
      }
    }
  },
  "imgedit/interior_remodel": {
    "name": "imgedit/interior_remodel",
    "schema": {
      "type": "object",
      "title": "Input",
      "required": [
        "image"
      ],
      "translatable": [
        "prompt",
        "negative_prompt",
        "mask_prompt_window",
        "mask_prompt_ceiling",
        "mask_prompt_furniture"
      ],
      "speech_enabled": [
        "prompt",
        "negative_prompt",
        "mask_prompt_window",
        "mask_prompt_ceiling",
        "mask_prompt_furniture"
      ],
      "linkto": {
        "*": "*"
      },
      "map": {
        "image": "image",
        "prompt": "prompt"
      },
      "properties": {
        "image": {
          "type": "string",
          "title": "Image",
          "format": "uri",
          "fileType": "image",
          "x-order": 0,
          "description": "Input image"
        },
        "prompt": {
          "type": "string",
          "title": "Prompt",
          "default": "Living room, scandinavian interior, photograph, clean, beautiful, high quality, 8k",
          "x-order": 1,
          "description": "Prompt for image generation"
        },
        "strength": {
          "type": "number",
          "title": "Strength",
          "default": 0.999999,
          "maximum": 1,
          "minimum": 0,
          "x-order": 2,
          "description": "Strength of the inpainting"
        },
        "control_image": {
          "type": "string",
          "title": "Control Image",
          "format": "uri",
          "fileType": "image",
          "x-order": 10,
          "description": "Control image"
        },
        "guidance_scale": {
          "type": "number",
          "title": "Guidance Scale",
          "default": 7,
          "maximum": 20,
          "minimum": 1,
          "x-order": 9,
          "description": "Guidance scale"
        },
        "mask_furniture": {
          "type": "string",
          "title": "Mask Furniture",
          "format": "uri",
          "fileType": "image",
          "x-order": 13,
          "description": "Mask furniture"
        },
        "max_resolution": {
          "type": "integer",
          "title": "Max Resolution",
          "default": 1536,
          "maximum": 2048,
          "minimum": 512,
          "x-order": 3,
          "description": "Maximum resolution of the output image"
        },
        "empty_room_mode": {
          "type": "boolean",
          "title": "Empty Room Mode",
          "default": false,
          "x-order": 19,
          "description": "Modify depth map for rooms that are originally empty"
        },
        "negative_prompt": {
          "type": "string",
          "title": "Negative Prompt",
          "default": "(worst quality, low quality, illustration, 3d, 2d, painting, cartoons, sketch), open mouth",
          "x-order": 14,
          "description": "Negative prompt"
        },
        "ip_adapter_image": {
          "type": "string",
          "title": "Ip Adapter Image",
          "format": "uri",
          "fileType": "image",
          "x-order": 18,
          "description": "IP-Adapter image"
        },
        "mask_prompt_window": {
          "type": "string",
          "title": "Mask Prompt Window",
          "default": "window, doorway",
          "x-order": 15,
          "description": "Mask prompt window"
        },
        "mask_prompt_ceiling": {
          "type": "string",
          "title": "Mask Prompt Ceiling",
          "default": "ceiling",
          "x-order": 17,
          "description": "Mask prompt ceiling"
        },
        "num_inference_steps": {
          "type": "integer",
          "title": "Num Inference Steps",
          "default": 30,
          "maximum": 100,
          "minimum": 1,
          "x-order": 8,
          "description": "Number of inference steps"
        },
        "control_guidance_end": {
          "type": "number",
          "title": "Control Guidance End",
          "default": 0.8,
          "maximum": 1,
          "minimum": 0,
          "x-order": 7,
          "description": "Control guidance end"
        },
        "inverted_mask_window": {
          "type": "string",
          "title": "Inverted Mask Window",
          "format": "uri",
          "x-order": 11,
          "description": "Inverted mask window"
        },
        "inverted_mask_ceiling": {
          "type": "string",
          "title": "Inverted Mask Ceiling",
          "format": "uri",
          "x-order": 12,
          "description": "Inverted mask ceiling"
        },
        "mask_prompt_furniture": {
          "type": "string",
          "title": "Mask Prompt Furniture",
          "default": "furniture, couch, table, chair, desk, bed, sofa, cupboard, shelf, cabinet, bookcase, dresser, nightstand, armchair, decoration, plant, flower, pillow, lamp, TV",
          "x-order": 16,
          "description": "Mask prompt furniture"
        },
        "control_guidance_start": {
          "type": "number",
          "title": "Control Guidance Start",
          "default": 0,
          "maximum": 1,
          "minimum": 0,
          "x-order": 6,
          "description": "Control guidance start"
        },
        "keep_furniture_structure": {
          "type": "boolean",
          "title": "Keep Furniture Structure",
          "default": false,
          "x-order": 4,
          "description": "Keep the furniture structure"
        },
        "controlnet_conditioning_scale": {
          "type": "number",
          "title": "Controlnet Conditioning Scale",
          "default": 0.7,
          "maximum": 1,
          "minimum": 0,
          "x-order": 5,
          "description": "Controlnet conditioning scale"
        }
      }
    }
  },
  "imgedit/interior_construct": {
    "name": "imgedit/interior_construct",
    "schema": {
      "type": "object",
      "title": "Input",
      "required": [
        "image_base",
        "prompt"
      ],
      "translatable": [
        "prompt"
      ],
      "speech_enabled": [
        "prompt"
      ],
      "linkto": {
        "*": "*"
      },
      "map": {
        "image_base": "image",
        "prompt": "prompt"
      },
      "properties": {
        "seed": {
          "type": "integer",
          "title": "Seed",
          "default": 35853,
          "x-order": 6,
          "description": "Seed"
        },
        "prompt": {
          "type": "string",
          "title": "Prompt",
          "x-order": 1,
          "description": "Image prompt"
        },
        "img_size": {
          "type": "integer",
          "title": "Img Size",
          "default": 640,
          "x-order": 5,
          "description": "Img size"
        },
        "strength": {
          "type": "number",
          "title": "Strength",
          "default": 0.9,
          "x-order": 4,
          "description": "Strength"
        },
        "num_steps": {
          "type": "integer",
          "title": "Num Steps",
          "default": 50,
          "x-order": 3,
          "description": "Number of steps"
        },
        "image_base": {
          "type": "string",
          "title": "Empty Room Image",
          "format": "uri",
          "fileType": "image",
          "x-order": 0,
          "description": "Empty room"
        },
        "guidance_scale": {
          "type": "integer",
          "title": "Guidance Scale",
          "default": 10,
          "x-order": 2,
          "description": "Guidance scale"
        }
      }
    }
  },
  "imgedit/product_shot": {
    "name": "imgedit/product_shot",
    "schema": {
      "type": "object",
      "title": "ProductShot",
      "required": [
        "image_url"
      ],
      "translatable": [
        "scene_description"
      ],
      "speech_enabled": [
        "scene_description"
      ],
      "linkto": {
        "*": "*"
      },
      "map": {
        "image_url": "image",
        "scene_description": "prompt"
      },
      "properties": {
        "image_url": {
          "type": "string",
          "fileType": "image",
          "format": "uri",
          "title": "Image URL",
          "x-order": 0,
          "description": "The URL of the product shot to be placed in a lifestyle shot. If both image_url and image_file are provided, image_url will be used. Accepted formats are jpeg, jpg, png, webp. Maximum file size 12MB"
        },
        "scene_description": {
          "type": "string",
          "title": "Scene Description",
          "x-order": 1,
          "description": "Text description of the new scene or background for the provided product shot. Bria currently supports prompts in English only, excluding special characters"
        },
        "ref_image_url": {
          "type": "string",
          "format": "uri",
          "fileType": "image",
          "title": "Reference Image URL",
          "x-order": 2,
          "default": "",
          "description": "The URL of the reference image to be used for generating the new scene or background for the product shot. Use \"\" to leave empty. Either ref_image_url or scene_description has to be provided but not both"
        },
        "optimize_description": {
          "type": "boolean",
          "title": "Optimize Description",
          "x-order": 3,
          "default": true,
          "description": "Whether to optimize the scene description"
        },
        "num_results": {
          "type": "integer",
          "title": "Number of Results",
          "x-order": 4,
          "default": 1,
          "minimum": 1,
          "maximum": 4,
          "description": "The number of lifestyle product shots you would like to generate. You will get num_results x 10 results when placement_type=automatic and according to the number of required placements x num_results if placement_type=manual_placement"
        },
        "fast": {
          "type": "boolean",
          "title": "Fast Mode",
          "x-order": 5,
          "default": true,
          "description": "Whether to use the fast model"
        },
        "placement_type": {
          "type": "string",
          "title": "Placement Type",
          "x-order": 6,
          "enum": [
            "original",
            "automatic",
            "manual_placement",
            "manual_padding"
          ],
          "default": "manual_placement",
          "description": "This parameter allows you to control the positioning of the product in the image"
        },
        "original_quality": {
          "type": "boolean",
          "title": "Original Quality",
          "x-order": 7,
          "description": "This flag is only relevant when placement_type=original. If true, the output image retains the original input image's size; otherwise, the image is scaled to 1 megapixel (1MP) while preserving its aspect ratio"
        },
        "manual_placement_selection": {
          "type": "string",
          "title": "Manual Placement Selection",
          "x-order": 9,
          "enum": [
            "upper_left",
            "upper_right",
            "bottom_left",
            "bottom_right",
            "right_center",
            "left_center",
            "upper_center",
            "bottom_center",
            "center_vertical",
            "center_horizontal"
          ],
          "default": "bottom_center",
          "description": "If you've selected placement_type=manual_placement, you should use this parameter to specify which placements/positions you would like to use from the list"
        }
      }
    }
  },
  "imgedit/background_replace": {
    "name": "imgedit/background_replace",
    "schema": {
      "type": "object",
      "title": "Input",
      "required": [
        "image_url",
        "prompt"
      ],
      "translatable": [
        "prompt",
        "negative_prompt"
      ],
      "speech_enabled": [
        "prompt",
        "negative_prompt"
      ],
      "linkto": {
        "*": "*"
      },
      "map": {
        "image_url": "image",
        "prompt": "prompt"
      },
      "properties": {
        "image_url": {
          "type": "string",
          "format": "uri",
          "fileType": "image",
          "title": "Image URL",
          "x-order": 0,
          "description": "Input Image to erase from"
        },
        "ref_image_url": {
          "type": "string",
          "format": "uri",
          "fileType": "image",
          "title": "Reference Background Image",
          "x-order": 1,
          "default": "",
          "description": "The URL of the reference image to be used for generating the new background. Use \"\" to leave empty. Either ref_image_url or bg_prompt has to be provided but not both"
        },
        "prompt": {
          "type": "string",
          "title": "Prompt",
          "x-order": 2,
          "description": "The prompt you would like to use to generate images"
        },
        "negative_prompt": {
          "type": "string",
          "title": "Negative Prompt",
          "x-order": 3,
          "default": "",
          "description": "The negative prompt you would like to use to generate images"
        },
        "refine_prompt": {
          "type": "boolean",
          "title": "Refine Prompt",
          "x-order": 4,
          "default": true,
          "description": "Whether to refine prompt"
        },
        "seed": {
          "type": "integer",
          "title": "Seed",
          "x-order": 5,
          "description": "The same seed and the same prompt given to the same version of the model will output the same image every time"
        },
        "fast": {
          "type": "boolean",
          "title": "Fast Mode",
          "x-order": 6,
          "default": true,
          "description": "Whether to use the fast model"
        },
        "num_images": {
          "type": "integer",
          "title": "Number of Images",
          "x-order": 7,
          "default": 1,
          "minimum": 1,
          "display": "hidden",
          "maximum": 4,
          "description": "Number of Images to generate"
        }
      }
    }
  },
  "imgedit/eraser": {
    "name": "imgedit/eraser",
    "schema": {
      "type": "object",
      "title": "Input",
      "required": [
        "image_url",
        "mask_url"
      ],
      "linkto": {
        "*": "*"
      },
      "map": {
        "image_url": "image",
        "mask_url": "mask"
      },
      "properties": {
        "image_url": {
          "type": "string",
          "format": "uri",
          "fileType": "image",
          "title": "Image URL",
          "x-order": 0,
          "description": "Input Image to erase from"
        },
        "mask_url": {
          "type": "string",
          "format": "uri",
          "fileType": "image",
          "title": "Mask URL",
          "extra": "Create mask",
          "default_extra": "image_url",
          "default_type": "mask_url",
          "x-order": 1,
          "description": "The URL of the binary mask image that represents the area that will be cleaned"
        },
        "mask_type": {
          "type": "string",
          "title": "Mask Type",
          "x-order": 2,
          "enum": [
            "manual",
            "automatic"
          ],
          "default": "manual",
          "description": "You can use this parameter to specify the type of the input mask from the list. 'manual' option should be used in cases in which the mask had been generated by a user (e.g. with a brush tool), and 'automatic' mask type should be used when mask had been generated by an algorithm like 'SAM'"
        },
        "preserve_alpha": {
          "type": "boolean",
          "title": "Preserve Alpha",
          "x-order": 3,
          "description": "If set to true, attempts to preserve the alpha channel of the input image"
        }
      }
    }
  },
  "imgedit/finegrain_eraser_prompt": {
    "name": "imgedit/finegrain_eraser_prompt",
    "schema": {
      "type": "object",
      "title": "Input",
      "required": [
        "image_url",
        "prompt"
      ],
      "linkto": {
        "*": "*"
      },
      "map": {
        "image_url": "image",
        "prompt": "prompt"
      },
      "properties": {
        "image_url": {
          "type": "string",
          "title": "Image URL",
          "description": "URL of the image to edit",
          "format": "uri",
          "fileType": "image",
          "x-order": 0
        },
        "prompt": {
          "type": "string",
          "title": "Prompt",
          "description": "Text description of what to erase",
          "x-order": 1
        },
        "mode": {
          "type": "string",
          "title": "Mode",
          "description": "Erase quality mode",
          "enum": [
            "express",
            "standard",
            "premium"
          ],
          "default": "standard",
          "x-order": 2
        },
        "seed": {
          "type": "integer",
          "title": "Seed",
          "description": "Random seed for reproducible generation",
          "x-order": 3
        }
      }
    }
  },
  "imgedit/post_processing_effects": {
    "name": "imgedit/post_processing_effects",
    "schema": {
      "type": "object",
      "title": "Image Post-Processing Effects Input",
      "required": [
        "image_url"
      ],
      "linkto": {
        "*": "*"
      },
      "map": {
        "image_url": "image"
      },
      "properties": {
        "image_url": {
          "type": "string",
          "title": "Image URL",
          "description": "URL of image to process",
          "format": "uri",
          "fileType": "image",
          "x-order": 0
        },
        "enable_grain": {
          "type": "boolean",
          "title": "Enable Film Grain",
          "description": "Enable film grain effect",
          "default": false,
          "x-order": 1
        },
        "grain_intensity": {
          "type": "number",
          "title": "Grain Intensity",
          "description": "Film grain intensity (when enabled)",
          "default": 0.4,
          "minimum": 0,
          "maximum": 1,
          "step": 0.1,
          "x-order": 2
        },
        "grain_scale": {
          "type": "number",
          "title": "Grain Scale",
          "description": "Film grain scale (when enabled)",
          "default": 10,
          "minimum": 1,
          "maximum": 100,
          "step": 1,
          "x-order": 3
        },
        "grain_style": {
          "type": "string",
          "title": "Grain Style",
          "description": "Style of film grain to apply",
          "enum": [
            "modern",
            "analog",
            "kodak",
            "fuji",
            "cinematic",
            "newspaper"
          ],
          "default": "modern",
          "x-order": 4
        },
        "enable_color_correction": {
          "type": "boolean",
          "title": "Enable Color Correction",
          "description": "Enable color correction",
          "default": false,
          "x-order": 5
        },
        "temperature": {
          "type": "number",
          "title": "Temperature",
          "description": "Color temperature adjustment",
          "default": 0,
          "minimum": -100,
          "maximum": 100,
          "step": 1,
          "x-order": 6
        },
        "brightness": {
          "type": "number",
          "title": "Brightness",
          "description": "Brightness adjustment",
          "default": 0,
          "minimum": -100,
          "maximum": 100,
          "step": 1,
          "x-order": 7
        },
        "contrast": {
          "type": "number",
          "title": "Contrast",
          "description": "Contrast adjustment",
          "default": 0,
          "minimum": -100,
          "maximum": 100,
          "step": 1,
          "x-order": 8
        },
        "saturation": {
          "type": "number",
          "title": "Saturation",
          "description": "Saturation adjustment",
          "default": 0,
          "minimum": -100,
          "maximum": 100,
          "step": 1,
          "x-order": 9
        },
        "gamma": {
          "type": "number",
          "title": "Gamma",
          "description": "Gamma adjustment",
          "default": 1,
          "minimum": 0.2,
          "maximum": 2.2,
          "step": 0.1,
          "x-order": 10
        },
        "enable_chromatic": {
          "type": "boolean",
          "title": "Enable Chromatic Aberration",
          "description": "Enable chromatic aberration",
          "default": false,
          "x-order": 11
        },
        "red_shift": {
          "type": "integer",
          "title": "Red Shift",
          "description": "Red channel shift amount",
          "default": 0,
          "minimum": -20,
          "maximum": 20,
          "step": 1,
          "x-order": 12
        },
        "red_direction": {
          "type": "string",
          "title": "Red Direction",
          "description": "Red channel shift direction",
          "enum": [
            "horizontal",
            "vertical"
          ],
          "default": "horizontal",
          "x-order": 13
        },
        "green_shift": {
          "type": "integer",
          "title": "Green Shift",
          "description": "Green channel shift amount",
          "default": 0,
          "minimum": -20,
          "maximum": 20,
          "step": 1,
          "x-order": 14
        },
        "green_direction": {
          "type": "string",
          "title": "Green Direction",
          "description": "Green channel shift direction",
          "enum": [
            "horizontal",
            "vertical"
          ],
          "default": "horizontal",
          "x-order": 15
        },
        "blue_shift": {
          "type": "integer",
          "title": "Blue Shift",
          "description": "Blue channel shift amount",
          "default": 0,
          "minimum": -20,
          "maximum": 20,
          "step": 1,
          "x-order": 16
        },
        "blue_direction": {
          "type": "string",
          "title": "Blue Direction",
          "description": "Blue channel shift direction",
          "enum": [
            "horizontal",
            "vertical"
          ],
          "default": "horizontal",
          "x-order": 17
        },
        "enable_blur": {
          "type": "boolean",
          "title": "Enable Blur",
          "description": "Enable blur effect",
          "default": false,
          "x-order": 18
        },
        "blur_type": {
          "type": "string",
          "title": "Blur Type",
          "description": "Type of blur to apply",
          "enum": [
            "gaussian",
            "kuwahara"
          ],
          "default": "gaussian",
          "x-order": 19
        },
        "blur_radius": {
          "type": "integer",
          "title": "Blur Radius",
          "description": "Blur radius",
          "default": 3,
          "minimum": 0,
          "step": 1,
          "maximum": 31,
          "x-order": 20
        },
        "blur_sigma": {
          "type": "number",
          "title": "Blur Sigma",
          "description": "Sigma for Gaussian blur",
          "default": 1,
          "minimum": 0.1,
          "step": 0.1,
          "maximum": 10,
          "x-order": 21
        },
        "enable_vignette": {
          "type": "boolean",
          "title": "Enable Vignette",
          "description": "Enable vignette effect",
          "default": false,
          "x-order": 22
        },
        "vignette_strength": {
          "type": "number",
          "title": "Vignette Strength",
          "description": "Vignette strength (when enabled)",
          "default": 0.5,
          "minimum": 0,
          "maximum": 10,
          "step": 0.1,
          "x-order": 23
        },
        "enable_parabolize": {
          "type": "boolean",
          "title": "Enable Parabolize",
          "description": "Enable parabolize effect",
          "default": false,
          "x-order": 24
        },
        "parabolize_coeff": {
          "type": "number",
          "title": "Parabolize Coefficient",
          "description": "Parabolize coefficient",
          "default": 1,
          "minimum": -10,
          "maximum": 10,
          "step": 0.1,
          "x-order": 25
        },
        "vertex_x": {
          "type": "number",
          "title": "Vertex X",
          "description": "Vertex X position",
          "default": 0.5,
          "minimum": 0,
          "maximum": 1,
          "step": 0.1,
          "x-order": 26
        },
        "vertex_y": {
          "type": "number",
          "title": "Vertex Y",
          "description": "Vertex Y position",
          "default": 0.5,
          "minimum": 0,
          "maximum": 1,
          "step": 0.1,
          "x-order": 27
        },
        "enable_tint": {
          "type": "boolean",
          "title": "Enable Tint",
          "description": "Enable color tint effect",
          "default": false,
          "x-order": 28
        },
        "tint_strength": {
          "type": "number",
          "title": "Tint Strength",
          "description": "Tint strength",
          "default": 1,
          "minimum": 0.1,
          "maximum": 10,
          "step": 0.1,
          "x-order": 29
        },
        "tint_mode": {
          "type": "string",
          "title": "Tint Mode",
          "description": "Tint color mode",
          "enum": [
            "sepia",
            "red",
            "green",
            "blue",
            "cyan",
            "magenta",
            "yellow",
            "purple",
            "orange",
            "warm",
            "cool",
            "lime",
            "navy",
            "vintage",
            "rose",
            "teal",
            "maroon",
            "peach",
            "lavender",
            "olive"
          ],
          "default": "sepia",
          "x-order": 30
        },
        "enable_dissolve": {
          "type": "boolean",
          "title": "Enable Dissolve",
          "description": "Enable dissolve effect",
          "default": false,
          "x-order": 31
        },
        "dissolve_image_url": {
          "type": "string",
          "title": "Dissolve Image URL",
          "description": "URL of second image for dissolve",
          "default": "",
          "format": "uri",
          "fileType": "image",
          "x-order": 32
        },
        "dissolve_factor": {
          "type": "number",
          "title": "Dissolve Factor",
          "description": "Dissolve blend factor",
          "default": 0.5,
          "minimum": 0,
          "maximum": 1,
          "step": 0.1,
          "x-order": 33
        },
        "enable_dodge_burn": {
          "type": "boolean",
          "title": "Enable Dodge & Burn",
          "description": "Enable dodge and burn effect",
          "default": false,
          "x-order": 34
        },
        "dodge_burn_intensity": {
          "type": "number",
          "title": "Dodge & Burn Intensity",
          "description": "Dodge and burn intensity",
          "default": 0.5,
          "minimum": 0,
          "maximum": 1,
          "step": 0.1,
          "x-order": 35
        },
        "dodge_burn_mode": {
          "type": "string",
          "title": "Dodge & Burn Mode",
          "description": "Dodge and burn mode",
          "enum": [
            "dodge",
            "burn",
            "dodge_and_burn",
            "burn_and_dodge",
            "color_dodge",
            "color_burn",
            "linear_dodge",
            "linear_burn"
          ],
          "default": "dodge",
          "x-order": 36
        },
        "enable_glow": {
          "type": "boolean",
          "title": "Enable Glow",
          "description": "Enable glow effect",
          "default": false,
          "x-order": 37
        },
        "glow_intensity": {
          "type": "number",
          "title": "Glow Intensity",
          "description": "Glow intensity",
          "default": 1,
          "minimum": 0,
          "maximum": 5,
          "step": 0.1,
          "x-order": 38
        },
        "glow_radius": {
          "type": "integer",
          "title": "Glow Radius",
          "description": "Glow blur radius",
          "default": 5,
          "minimum": 1,
          "step": 1,
          "maximum": 50,
          "x-order": 39
        },
        "enable_sharpen": {
          "type": "boolean",
          "title": "Enable Sharpen",
          "description": "Enable sharpen effect",
          "default": false,
          "x-order": 40
        },
        "sharpen_mode": {
          "type": "string",
          "title": "Sharpen Mode",
          "description": "Type of sharpening to apply",
          "enum": [
            "basic",
            "smart",
            "cas"
          ],
          "default": "basic",
          "x-order": 41
        },
        "sharpen_radius": {
          "type": "integer",
          "title": "Sharpen Radius",
          "description": "Sharpen radius (for basic mode)",
          "default": 1,
          "minimum": 1,
          "step": 1,
          "maximum": 15,
          "x-order": 42
        },
        "sharpen_alpha": {
          "type": "number",
          "title": "Sharpen Alpha",
          "description": "Sharpen strength (for basic mode)",
          "default": 1,
          "minimum": 0.1,
          "maximum": 5,
          "step": 0.1,
          "x-order": 43
        },
        "noise_radius": {
          "type": "integer",
          "title": "Noise Radius",
          "description": "Noise radius for smart sharpen",
          "default": 7,
          "minimum": 1,
          "step": 1,
          "maximum": 25,
          "x-order": 44
        },
        "preserve_edges": {
          "type": "number",
          "title": "Preserve Edges",
          "description": "Edge preservation factor",
          "default": 0.75,
          "minimum": 0,
          "maximum": 1,
          "step": 0.1,
          "x-order": 45
        },
        "smart_sharpen_strength": {
          "type": "number",
          "title": "Smart Sharpen Strength",
          "description": "Smart sharpen strength",
          "default": 5,
          "minimum": 0,
          "maximum": 25,
          "step": 0.1,
          "x-order": 46
        },
        "smart_sharpen_ratio": {
          "type": "number",
          "title": "Smart Sharpen Ratio",
          "description": "Smart sharpen blend ratio",
          "default": 0.5,
          "minimum": 0,
          "maximum": 1,
          "step": 0.1,
          "x-order": 47
        },
        "cas_amount": {
          "type": "number",
          "title": "CAS Amount",
          "description": "CAS sharpening amount",
          "default": 0.8,
          "minimum": 0,
          "maximum": 1,
          "step": 0.1,
          "x-order": 48
        },
        "enable_solarize": {
          "type": "boolean",
          "title": "Enable Solarize",
          "description": "Enable solarize effect",
          "default": false,
          "x-order": 49
        },
        "solarize_threshold": {
          "type": "number",
          "title": "Solarize Threshold",
          "description": "Solarize threshold",
          "default": 0.5,
          "minimum": 0,
          "maximum": 1,
          "step": 0.1,
          "x-order": 50
        },
        "enable_desaturate": {
          "type": "boolean",
          "title": "Enable Desaturate",
          "description": "Enable desaturation effect",
          "default": false,
          "x-order": 51
        },
        "desaturate_factor": {
          "type": "number",
          "title": "Desaturate Factor",
          "description": "Desaturation factor",
          "default": 1,
          "minimum": 0,
          "maximum": 1,
          "step": 0.1,
          "x-order": 52
        },
        "desaturate_method": {
          "type": "string",
          "title": "Desaturate Method",
          "description": "Desaturation method",
          "enum": [
            "luminance (Rec.709)",
            "luminance (Rec.601)",
            "average",
            "lightness"
          ],
          "default": "luminance (Rec.709)",
          "x-order": 53
        }
      }
    }
  },
  "videogen/hunyuan_video": {
    "name": "videogen/hunyuan_video",
    "schema": {
      "type": "object",
      "title": "Input",
      "translatable": [
        "prompt",
        "negative_prompt"
      ],
      "speech_enabled": [
        "prompt",
        "negative_prompt"
      ],
      "linkto": {
        "*": "*"
      },
      "map": {
        "prompt": "prompt",
        "negative_prompt": "negative_prompt"
      },
      "properties": {
        "seed": {
          "type": "integer",
          "title": "Seed",
          "x-order": 8,
          "description": "Random seed for reproducibility."
        },
        "width": {
          "type": "integer",
          "title": "Width",
          "default": 854,
          "minimum": 16,
          "maximum": 1280,
          "step": 16,
          "x-order": 2,
          "description": "Width of the video in pixels."
        },
        "height": {
          "type": "integer",
          "title": "Height",
          "default": 480,
          "minimum": 16,
          "maximum": 1280,
          "step": 16,
          "x-order": 3,
          "description": "Height of the video in pixels."
        },
        "prompt": {
          "type": "string",
          "title": "Prompt",
          "default": "A cat walks on the grass, realistic style.",
          "x-order": 0,
          "description": "Text prompt to generate video."
        },
        "flow_shift": {
          "type": "number",
          "title": "Flow Shift",
          "display": "hidden",
          "default": 7,
          "x-order": 6,
          "description": "Flow-shift parameter."
        },
        "infer_steps": {
          "type": "integer",
          "title": "Infer Steps",
          "default": 50,
          "minimum": 1,
          "x-order": 5,
          "display": "hidden",
          "description": "Number of inference steps."
        },
        "video_length": {
          "type": "integer",
          "title": "Video Length",
          "default": 129,
          "display": "hidden",
          "minimum": 1,
          "x-order": 4,
          "description": "Length of the video in frames."
        },
        "negative_prompt": {
          "type": "string",
          "title": "Negative Prompt",
          "x-order": 1,
          "description": "Text prompt to specify what you don't want in the video."
        },
        "embedded_guidance_scale": {
          "type": "number",
          "title": "Embedded Guidance Scale",
          "default": 6,
          "display": "hidden",
          "maximum": 6,
          "minimum": 1,
          "x-order": 7,
          "description": "Embedded guidance scale for generation."
        }
      }
    }
  },
  "videogen/hunyuan_v2v": {
    "name": "videogen/hunyuan_v2v",
    "schema": {
      "type": "object",
      "title": "Input",
      "required": [
        "prompt"
      ],
      "translatable": [
        "prompt"
      ],
      "speech_enabled": [
        "prompt"
      ],
      "linkto": {
        "*": "*"
      },
      "map": {
        "prompt": "prompt",
        "video_url": "video"
      },
      "properties": {
        "prompt": {
          "type": "string",
          "title": "Prompt",
          "description": "The prompt to generate the video from.",
          "x-order": 0
        },
        "num_inference_steps": {
          "type": "integer",
          "title": "Number of Inference Steps",
          "description": "The number of inference steps to run. Lower gets faster results, higher gets better results.",
          "default": 30,
          "x-order": 1
        },
        "seed": {
          "type": "integer",
          "title": "Seed",
          "description": "The seed to use for generating the video.",
          "x-order": 2
        },
        "pro_mode": {
          "type": "boolean",
          "title": "Pro Mode",
          "description": "By default, generations are done with 35 steps. Pro mode does 55 steps which results in higher quality videos but will take more time.",
          "default": false,
          "x-order": 3
        },
        "aspect_ratio": {
          "type": "string",
          "title": "Aspect Ratio",
          "description": "The aspect ratio of the video to generate.",
          "enum": [
            "16:9",
            "9:16"
          ],
          "default": "16:9",
          "x-order": 4
        },
        "resolution": {
          "type": "string",
          "title": "Resolution",
          "description": "The resolution of the video to generate.",
          "enum": [
            "480p",
            "580p",
            "720p"
          ],
          "default": "720p",
          "x-order": 5
        },
        "num_frames": {
          "type": "string",
          "title": "Number of Frames",
          "description": "The number of frames to generate.",
          "enum": [
            "129",
            "85"
          ],
          "default": "129",
          "x-order": 6
        },
        "enable_safety_checker": {
          "type": "boolean",
          "title": "Enable Safety Checker",
          "description": "If set to true, the safety checker will be enabled.",
          "default": false,
          "x-order": 7
        },
        "video_url": {
          "type": "string",
          "title": "Video URL",
          "description": "URL of the video input.",
          "format": "uri",
          "fileType": "video",
          "x-order": 8
        },
        "strength": {
          "type": "number",
          "title": "Strength",
          "description": "Strength for Video-to-Video",
          "default": 0.85,
          "minimum": 0,
          "maximum": 1,
          "x-order": 9
        }
      }
    }
  },
  "videogen/hunyuan_custom": {
    "name": "videogen/hunyuan_custom",
    "schema": {
      "type": "object",
      "title": "Input",
      "required": [
        "prompt",
        "image_url"
      ],
      "translatable": [
        "prompt",
        "negative_prompt"
      ],
      "speech_enabled": [
        "prompt",
        "negative_prompt"
      ],
      "linkto": {
        "*": "*"
      },
      "map": {
        "prompt": "prompt",
        "image_url": "image",
        "negative_prompt": "negative_prompt"
      },
      "properties": {
        "prompt": {
          "type": "string",
          "title": "Prompt",
          "description": "Text prompt for video generation (max 500 characters).",
          "maxLength": 500,
          "x-order": 0
        },
        "negative_prompt": {
          "type": "string",
          "title": "Negative Prompt",
          "description": "Negative prompt for video generation.",
          "default": "Aerial view, aerial view, overexposed, low quality, deformation, a poor composition, bad hands, bad teeth, bad eyes, bad limbs, distortion, blurring, text, subtitles, static, picture, black border.",
          "x-order": 1
        },
        "image_url": {
          "type": "string",
          "title": "Image URL",
          "fileType": "image",
          "description": "URL of the image input.",
          "format": "uri",
          "x-order": 2
        },
        "num_inference_steps": {
          "type": "integer",
          "title": "Number of Inference Steps",
          "description": "The number of inference steps to run. Lower gets faster results, higher gets better results.",
          "default": 30,
          "minimum": 10,
          "maximum": 30,
          "x-order": 3
        },
        "seed": {
          "type": "integer",
          "title": "Seed",
          "description": "The seed to use for generating the video.",
          "x-order": 4
        },
        "aspect_ratio": {
          "type": "string",
          "title": "Aspect Ratio",
          "description": "The aspect ratio of the video to generate.",
          "enum": [
            "16:9",
            "9:16"
          ],
          "default": "16:9",
          "x-order": 5
        },
        "resolution": {
          "type": "string",
          "title": "Resolution",
          "description": "The resolution of the video to generate. 720p generations cost 1.5x more than 480p generations.",
          "enum": [
            "512p",
            "720p"
          ],
          "default": "512p",
          "x-order": 6
        },
        "fps": {
          "type": "integer",
          "title": "Frames Per Second",
          "description": "The frames per second of the generated video.",
          "default": 25,
          "minimum": 16,
          "maximum": 30,
          "x-order": 7
        },
        "cfg_scale": {
          "type": "number",
          "title": "CFG Scale",
          "description": "Classifier-Free Guidance scale for the generation.",
          "default": 7.5,
          "minimum": 1.5,
          "maximum": 13,
          "x-order": 8
        },
        "num_frames": {
          "type": "integer",
          "title": "Number of Frames",
          "description": "The number of frames to generate.",
          "default": 129,
          "minimum": 86,
          "maximum": 129,
          "x-order": 9
        },
        "enable_prompt_expansion": {
          "type": "boolean",
          "title": "Enable Prompt Expansion",
          "description": "Whether to enable prompt expansion.",
          "default": true,
          "x-order": 10
        },
        "enable_safety_checker": {
          "type": "boolean",
          "title": "Enable Safety Checker",
          "description": "If set to true, the safety checker will be enabled.",
          "default": true,
          "x-order": 11
        }
      }
    }
  },
  "videogen/minimax_video_o1": {
    "name": "videogen/minimax_video_o1",
    "schema": {
      "type": "object",
      "title": "Input",
      "required": [
        "prompt"
      ],
      "translatable": [
        "prompt"
      ],
      "speech_enabled": [
        "prompt"
      ],
      "linkto": {
        "*": "*"
      },
      "map": {
        "prompt": "prompt",
        "first_frame_image": "image",
        "subject_reference": "reference_image"
      },
      "properties": {
        "prompt": {
          "type": "string",
          "title": "Prompt",
          "x-order": 0,
          "description": "Text prompt for image generation"
        },
        "prompt_optimizer": {
          "type": "boolean",
          "title": "Prompt Optimizer",
          "default": true,
          "x-order": 3,
          "description": "Use prompt optimizer"
        },
        "first_frame_image": {
          "type": "string",
          "title": "First Frame Image",
          "format": "uri",
          "fileType": "image",
          "x-order": 1,
          "description": "First frame image for video generation. The output video will have the same aspect ratio as this image."
        },
        "subject_reference": {
          "type": "string",
          "title": "Subject Reference",
          "format": "uri",
          "fileType": "image",
          "x-order": 2,
          "description": "An optional character reference image to use as the subject in the generated video (this will use the S2V-01 model)"
        }
      }
    }
  },
  "videogen/runway_gen4_turbo": {
    "name": "videogen/runway_gen4_turbo",
    "schema": {
      "type": "object",
      "title": "Input",
      "linkto": {
        "*": "*"
      },
      "map": {
        "prompt": "prompt",
        "image_url": "image"
      },
      "required": [
        "model",
        "prompt",
        "image_url"
      ],
      "translatable": [
        "prompt",
        "negative_prompt"
      ],
      "speech_enabled": [
        "prompt",
        "negative_prompt"
      ],
      "properties": {
        "model": {
          "type": "string",
          "title": "Model",
          "display": "hidden",
          "enum": [
            "runway/gen4_turbo"
          ],
          "default": "runway/gen4_turbo",
          "description": "The model to use for video generation",
          "x-order": 0
        },
        "prompt": {
          "type": "string",
          "title": "Prompt",
          "maxLength": 1000,
          "description": "A non-empty string up to 1000 UTF-16 code points in length. This should describe in detail what should appear in the output.",
          "x-order": 1
        },
        "image_url": {
          "type": "string",
          "title": "Image URL",
          "format": "uri",
          "fileType": "image",
          "action": "upload_to_azure_data",
          "description": "A HTTPS URL or data URI containing an encoded image to be used as the first frame of the generated video. Aspect ratio of image should be between 0.5 and 2",
          "x-order": 2
        },
        "duration": {
          "type": "integer",
          "title": "Duration",
          "enum": [
            5,
            10
          ],
          "default": 10,
          "description": "The number of seconds of duration for the output video",
          "x-order": 3
        },
        "ratio": {
          "type": "string",
          "title": "Aspect Ratio",
          "enum": [
            "16:9",
            "9:16",
            "4:3",
            "3:4",
            "1:1",
            "2:1",
            "1:9"
          ],
          "default": "16:9",
          "description": "The aspect ratio of the generated video",
          "x-order": 4
        },
        "seed": {
          "type": "integer",
          "title": "Seed",
          "maximum": 4294967295,
          "description": "If unspecified, a random number is chosen. Varying the seed integer is a way to get different results for the same other request parameters. Using the same seed integer for an identical request will produce similar results",
          "x-order": 5
        },
        "watermark": {
          "type": "boolean",
          "title": "Watermark",
          "description": "A boolean indicating whether or not the output video will contain a Runway watermark.",
          "x-order": 6
        }
      }
    }
  },
  "videogen/runway_gen3a_turbo": {
    "name": "videogen/runway_gen3a_turbo",
    "schema": {
      "type": "object",
      "title": "Input",
      "linkto": {
        "*": "*"
      },
      "map": {
        "prompt": "prompt",
        "image_url": "image",
        "last_image_url": "end_image"
      },
      "required": [
        "model",
        "prompt",
        "image_url"
      ],
      "translatable": [
        "prompt",
        "negative_prompt"
      ],
      "speech_enabled": [
        "prompt",
        "negative_prompt"
      ],
      "properties": {
        "model": {
          "type": "string",
          "display": "hidden",
          "title": "Model",
          "enum": [
            "gen3a_turbo"
          ],
          "default": "gen3a_turbo",
          "description": "The model to use for video generation",
          "x-order": 0
        },
        "prompt": {
          "type": "string",
          "title": "Prompt",
          "maxLength": 1000,
          "description": "A non-empty string up to 1000 UTF-16 code points in length. This should describe in detail what should appear in the output.",
          "x-order": 1
        },
        "image_url": {
          "type": "string",
          "title": "Image URL",
          "format": "uri",
          "fileType": "image",
          "action": "upload_to_azure_data",
          "description": "A HTTPS URL or data URI containing an encoded image to be used as the first frame of the generated video. Aspect ratio of image should be between 0.5 and 2",
          "x-order": 2
        },
        "last_image_url": {
          "type": "string",
          "title": "Last Image URL",
          "format": "uri",
          "fileType": "image",
          "action": "upload_to_azure_data",
          "description": "A HTTPS URL or data URI containing an encoded image to be used as the last frame of the generated video.",
          "x-order": 3
        },
        "duration": {
          "type": "integer",
          "title": "Duration",
          "enum": [
            5,
            10
          ],
          "default": 10,
          "description": "The number of seconds of duration for the output video",
          "x-order": 4
        },
        "ratio": {
          "type": "string",
          "title": "Aspect Ratio",
          "enum": [
            "16:9",
            "9:16"
          ],
          "default": "16:9",
          "description": "The aspect ratio of the generated video",
          "x-order": 5
        },
        "seed": {
          "type": "integer",
          "title": "Seed",
          "maximum": 4294967295,
          "description": "If unspecified, a random number is chosen. Varying the seed integer is a way to get different results for the same other request parameters. Using the same seed integer for an identical request will produce similar results",
          "x-order": 5
        },
        "watermark": {
          "type": "boolean",
          "title": "Watermark",
          "description": "A boolean indicating whether or not the output video will contain a Runway watermark.",
          "x-order": 6
        }
      }
    }
  },
  "videogen/leanardo_motion2": {
    "name": "videogen/leanardo_motion2",
    "schema": {
      "type": "object",
      "title": "Input",
      "required": [
        "prompt"
      ],
      "translatable": [
        "prompt",
        "negative_prompt"
      ],
      "speech_enabled": [
        "prompt",
        "negative_prompt"
      ],
      "linkto": {
        "*": "*"
      },
      "map": {
        "prompt": "prompt",
        "negative_prompt": "negative_prompt",
        "image": "image"
      },
      "properties": {
        "image": {
          "type": "string",
          "title": "Image",
          "format": "uri",
          "fileType": "image",
          "x-order": 1,
          "description": "Image to use for the first frame of the video"
        },
        "prompt": {
          "type": "string",
          "title": "Prompt",
          "x-order": 0,
          "description": "Text prompt for generation"
        },
        "vibe_style": {
          "enum": [
            "None",
            "clay",
            "color_sketch",
            "logo",
            "papercraft",
            "pro_photo",
            "sci_fi",
            "sketch",
            "stock_footage",
            "streetshot"
          ],
          "type": "string",
          "title": "vibe_style",
          "description": "Style for the overall vibe of the video. Ignored if image is provided.",
          "default": "None",
          "x-order": 6
        },
        "aspect_ratio": {
          "enum": [
            "9:16",
            "16:9",
            "2:3",
            "4:5"
          ],
          "type": "string",
          "title": "aspect_ratio",
          "description": "Aspect ratio of the output video. Ignored if image is provided.",
          "default": "16:9",
          "x-order": 2
        },
        "lighting_style": {
          "enum": [
            "None",
            "backlight",
            "candle_lit",
            "chiaroscuro",
            "film_haze",
            "foggy",
            "golden_hour",
            "hardlight",
            "lens_flare",
            "light_art",
            "low_key",
            "luminous",
            "mystical",
            "rainy",
            "soft_light",
            "volumetric"
          ],
          "type": "string",
          "title": "lighting_style",
          "description": "Style for the lighting of the video. Ignored if image is provided.",
          "default": "None",
          "x-order": 7
        },
        "prompt_enhance": {
          "type": "boolean",
          "title": "Prompt Enhance",
          "default": true,
          "x-order": 4,
          "description": "Whether to enhance the prompt"
        },
        "negative_prompt": {
          "type": "string",
          "title": "Negative Prompt",
          "x-order": 5,
          "nullable": true,
          "description": "The negative prompt used for the video generation"
        },
        "shot_type_style": {
          "enum": [
            "None",
            "bokeh",
            "cinematic",
            "close_up",
            "overhead",
            "spiritual",
            "spooky"
          ],
          "type": "string",
          "title": "shot_type_style",
          "description": "Style for the shot type of the video. Ignored if image is provided.",
          "default": "None",
          "x-order": 8
        },
        "color_theme_style": {
          "enum": [
            "None",
            "autumn",
            "complimentary",
            "cool",
            "dark",
            "earthy",
            "electric",
            "iridescent",
            "pastel",
            "split",
            "terracotta_teal",
            "ultraviolet",
            "vibrant",
            "warm"
          ],
          "type": "string",
          "title": "color_theme_style",
          "description": "Style for the color theme of the video. Ignored if image is provided.",
          "default": "None",
          "x-order": 9
        },
        "frame_interpolation": {
          "type": "boolean",
          "title": "Frame Interpolation",
          "default": true,
          "x-order": 3,
          "description": "Smoothly blend frames for fluid video transitions"
        }
      }
    }
  },
  "videogen/ltxv_13b_098_i2v": {
    "name": "videogen/ltxv_13b_098_i2v",
    "schema": {
      "type": "object",
      "title": "Input",
      "required": [
        "prompt",
        "image_url"
      ],
      "linkto": {
        "*": "*"
      },
      "map": {
        "image_url": "image",
        "prompt": "prompt"
      },
      "properties": {
        "prompt": {
          "type": "string",
          "title": "Prompt",
          "x-order": 1,
          "description": "Text prompt to guide generation"
        },
        "negative_prompt": {
          "type": "string",
          "title": "Negative Prompt",
          "x-order": 2,
          "description": "Negative prompt for generation",
          "default": "worst quality, inconsistent motion, blurry, jittery, distorted"
        },
        "loras": {
          "type": "array",
          "title": "LoRA Weights",
          "x-order": 3,
          "description": "LoRA weights to use for generation",
          "display": "hidden",
          "items": {
            "type": "string",
            "format": "uri",
            "fileType": "image"
          }
        },
        "resolution": {
          "type": "string",
          "title": "Resolution",
          "x-order": 4,
          "description": "Resolution of the generated video.",
          "enum": [
            "480p",
            "720p"
          ],
          "default": "720p"
        },
        "aspect_ratio": {
          "type": "string",
          "title": "Aspect Ratio",
          "x-order": 5,
          "description": "The aspect ratio of the video.",
          "enum": [
            "9:16",
            "1:1",
            "16:9",
            "auto"
          ],
          "default": "auto"
        },
        "seed": {
          "type": "integer",
          "title": "Seed",
          "x-order": 6,
          "description": "Random seed for generation"
        },
        "num_frames": {
          "type": "integer",
          "title": "Number of Frames",
          "x-order": 7,
          "description": "The number of frames in the video.",
          "minimum": 9,
          "maximum": 721,
          "steps": 1,
          "default": 121
        },
        "first_pass_num_inference_steps": {
          "type": "integer",
          "title": "First Pass Inference Steps",
          "x-order": 8,
          "description": "Number of inference steps during the first pass.",
          "display": "hidden",
          "default": 8
        },
        "second_pass_num_inference_steps": {
          "type": "integer",
          "title": "Second Pass Inference Steps",
          "display": "hidden",
          "x-order": 9,
          "description": "Number of inference steps during the second pass.",
          "default": 8
        },
        "second_pass_skip_initial_steps": {
          "type": "integer",
          "title": "Second Pass Skip Initial Steps",
          "display": "hidden",
          "x-order": 10,
          "description": "The number of inference steps to skip in the initial steps of the second pass. By skipping some steps at the beginning, the second pass can focus on smaller details instead of larger changes.",
          "default": 5
        },
        "frame_rate": {
          "type": "integer",
          "title": "Frame Rate",
          "x-order": 11,
          "minimum": 12,
          "maximum": 60,
          "step": 1,
          "description": "The frame rate of the video.",
          "default": 24
        },
        "expand_prompt": {
          "type": "boolean",
          "title": "Expand Prompt",
          "x-order": 12,
          "description": "Whether to expand the prompt using a language model."
        },
        "reverse_video": {
          "type": "boolean",
          "title": "Reverse Video",
          "x-order": 13,
          "display": "hidden",
          "description": "Whether to reverse the video."
        },
        "enable_safety_checker": {
          "type": "boolean",
          "title": "Enable Safety Checker",
          "x-order": 14,
          "display": "hidden",
          "description": "Whether to enable the safety checker.",
          "default": false
        },
        "constant_rate_factor": {
          "type": "integer",
          "title": "Constant Rate Factor",
          "x-order": 15,
          "description": "The constant rate factor (CRF) to compress input media with. Compressed input media more closely matches the model's training data, which can improve motion quality.",
          "display": "hidden",
          "default": 29
        },
        "image_url": {
          "type": "string",
          "title": "Image URL",
          "x-order": 16,
          "format": "uri",
          "fileType": "image",
          "description": "Image URL for Image-to-Video task"
        }
      }
    }
  },
  "videogen/ltxv_13b_098_t2v": {
    "name": "videogen/ltxv_13b_098_t2v",
    "schema": {
      "type": "object",
      "title": "Input",
      "required": [
        "prompt"
      ],
      "linkto": {
        "*": "*"
      },
      "map": {
        "prompt": "prompt"
      },
      "properties": {
        "prompt": {
          "type": "string",
          "title": "Prompt",
          "x-order": 1,
          "description": "Text prompt to guide generation"
        },
        "negative_prompt": {
          "type": "string",
          "title": "Negative Prompt",
          "x-order": 2,
          "description": "Negative prompt for generation",
          "default": "worst quality, inconsistent motion, blurry, jittery, distorted"
        },
        "loras": {
          "type": "array",
          "title": "LoRA Weights",
          "x-order": 3,
          "description": "LoRA weights to use for generation",
          "display": "hidden",
          "items": {
            "type": "string",
            "format": "uri",
            "fileType": "image"
          }
        },
        "resolution": {
          "type": "string",
          "title": "Resolution",
          "x-order": 4,
          "description": "Resolution of the generated video.",
          "enum": [
            "480p",
            "720p"
          ],
          "default": "720p"
        },
        "aspect_ratio": {
          "type": "string",
          "title": "Aspect Ratio",
          "x-order": 5,
          "description": "The aspect ratio of the video.",
          "enum": [
            "9:16",
            "1:1",
            "16:9",
            "auto"
          ],
          "default": "auto"
        },
        "seed": {
          "type": "integer",
          "title": "Seed",
          "x-order": 6,
          "description": "Random seed for generation"
        },
        "num_frames": {
          "type": "integer",
          "title": "Number of Frames",
          "x-order": 7,
          "description": "The number of frames in the video.",
          "minimum": 9,
          "maximum": 721,
          "steps": 1,
          "default": 121
        },
        "first_pass_num_inference_steps": {
          "type": "integer",
          "title": "First Pass Inference Steps",
          "x-order": 8,
          "description": "Number of inference steps during the first pass.",
          "display": "hidden",
          "default": 8
        },
        "second_pass_num_inference_steps": {
          "type": "integer",
          "title": "Second Pass Inference Steps",
          "display": "hidden",
          "x-order": 9,
          "description": "Number of inference steps during the second pass.",
          "default": 8
        },
        "second_pass_skip_initial_steps": {
          "type": "integer",
          "title": "Second Pass Skip Initial Steps",
          "display": "hidden",
          "x-order": 10,
          "description": "The number of inference steps to skip in the initial steps of the second pass. By skipping some steps at the beginning, the second pass can focus on smaller details instead of larger changes.",
          "default": 5
        },
        "frame_rate": {
          "type": "integer",
          "title": "Frame Rate",
          "x-order": 11,
          "minimum": 12,
          "maximum": 60,
          "step": 1,
          "description": "The frame rate of the video.",
          "default": 24
        },
        "expand_prompt": {
          "type": "boolean",
          "title": "Expand Prompt",
          "x-order": 12,
          "description": "Whether to expand the prompt using a language model."
        },
        "reverse_video": {
          "type": "boolean",
          "title": "Reverse Video",
          "x-order": 13,
          "display": "hidden",
          "description": "Whether to reverse the video."
        },
        "enable_safety_checker": {
          "type": "boolean",
          "title": "Enable Safety Checker",
          "x-order": 14,
          "display": "hidden",
          "description": "Whether to enable the safety checker.",
          "default": false
        },
        "constant_rate_factor": {
          "type": "integer",
          "title": "Constant Rate Factor",
          "x-order": 15,
          "description": "The constant rate factor (CRF) to compress input media with. Compressed input media more closely matches the model's training data, which can improve motion quality.",
          "display": "hidden",
          "default": 29
        }
      }
    }
  },
  "videogen/kling1_6_pro": {
    "name": "videogen/kling1_6_pro",
    "schema": {
      "type": "object",
      "title": "Input",
      "required": [
        "prompt"
      ],
      "translatable": [
        "prompt"
      ],
      "speech_enabled": [
        "prompt"
      ],
      "linkto": {
        "*": "*"
      },
      "map": {
        "prompt": "prompt",
        "image_url": "image",
        "tail_image_url": "end_image"
      },
      "properties": {
        "prompt": {
          "type": "string",
          "title": "Prompt",
          "x-order": 0,
          "description": "Text prompt for video generation"
        },
        "image_url": {
          "type": "string",
          "title": "Start Image",
          "format": "uri",
          "fileType": "image",
          "x-order": 1,
          "description": "URL of the image to be used for the start of the video"
        },
        "duration": {
          "enum": [
            5,
            10
          ],
          "type": "integer",
          "title": "Duration",
          "description": "The duration of the generated video in seconds",
          "default": 5,
          "x-order": 2
        },
        "aspect_ratio": {
          "enum": [
            "16:9",
            "9:16",
            "1:1"
          ],
          "type": "string",
          "title": "Aspect Ratio",
          "description": "The aspect ratio of the generated video frame",
          "default": "16:9",
          "x-order": 3
        },
        "tail_image_url": {
          "type": "string",
          "title": "End Image",
          "format": "uri",
          "fileType": "image",
          "x-order": 4,
          "description": "URL of the image to be used for the end of the video"
        },
        "negative_prompt": {
          "type": "string",
          "title": "Negative Prompt",
          "default": "blur, distort, and low quality",
          "x-order": 5,
          "description": "Things you do not want to see in the video"
        },
        "cfg_scale": {
          "type": "number",
          "title": "CFG Scale",
          "default": 0.5,
          "maximum": 1,
          "minimum": 0,
          "step": 0.01,
          "display": "hidden",
          "x-order": 6,
          "description": "The CFG (Classifier Free Guidance) scale is a measure of how close you want the model to stick to your prompt."
        }
      }
    }
  },
  "videogen/kling2_i2v": {
    "name": "videogen/kling2_i2v",
    "schema": {
      "type": "object",
      "title": "Input",
      "required": [
        "prompt",
        "image_url"
      ],
      "translatable": [
        "prompt",
        "negative_prompt"
      ],
      "speech_enabled": [
        "prompt",
        "negative_prompt"
      ],
      "linkto": {
        "*": "*"
      },
      "map": {
        "prompt": "prompt",
        "image_url": "image",
        "negative_prompt": "negative_prompt"
      },
      "properties": {
        "prompt": {
          "type": "string",
          "title": "Prompt",
          "description": "Text prompt describing the video to be generated",
          "x-order": 0
        },
        "image_url": {
          "type": "string",
          "title": "Image URL",
          "description": "URL of the image to be used for the video",
          "format": "uri",
          "fileType": "image",
          "x-order": 1
        },
        "duration": {
          "type": "string",
          "title": "Duration",
          "description": "The duration of the generated video in seconds",
          "enum": [
            "5"
          ],
          "default": "5",
          "x-order": 2
        },
        "aspect_ratio": {
          "type": "string",
          "title": "Aspect Ratio",
          "description": "The aspect ratio of the generated video frame",
          "enum": [
            "16:9",
            "9:16",
            "1:1"
          ],
          "default": "16:9",
          "x-order": 3
        },
        "negative_prompt": {
          "type": "string",
          "title": "Negative Prompt",
          "description": "Negative prompt to avoid certain characteristics in the generated video",
          "default": "blur, distort, and low quality",
          "x-order": 4
        },
        "cfg_scale": {
          "type": "number",
          "title": "CFG Scale",
          "description": "The CFG (Classifier Free Guidance) scale is a measure of how close you want the model to stick to your prompt",
          "minimum": 0,
          "maximum": 1,
          "default": 0.5,
          "x-order": 5
        }
      }
    }
  },
  "videogen/kling2_t2v": {
    "name": "videogen/kling2_t2v",
    "schema": {
      "type": "object",
      "title": "Input",
      "required": [
        "prompt"
      ],
      "translatable": [
        "prompt",
        "negative_prompt"
      ],
      "speech_enabled": [
        "prompt",
        "negative_prompt"
      ],
      "linkto": {
        "*": "*"
      },
      "map": {
        "prompt": "prompt",
        "negative_prompt": "negative_prompt"
      },
      "properties": {
        "prompt": {
          "type": "string",
          "title": "Prompt",
          "description": "Text prompt describing the video to be generated",
          "x-order": 0
        },
        "duration": {
          "type": "string",
          "title": "Duration",
          "description": "The duration of the generated video in seconds",
          "enum": [
            "5"
          ],
          "default": "5",
          "x-order": 2
        },
        "aspect_ratio": {
          "type": "string",
          "title": "Aspect Ratio",
          "description": "The aspect ratio of the generated video frame",
          "enum": [
            "16:9",
            "9:16",
            "1:1"
          ],
          "default": "16:9",
          "x-order": 3
        },
        "negative_prompt": {
          "type": "string",
          "title": "Negative Prompt",
          "description": "Negative prompt to avoid certain characteristics in the generated video",
          "default": "blur, distort, and low quality",
          "x-order": 4
        },
        "cfg_scale": {
          "type": "number",
          "title": "CFG Scale",
          "description": "The CFG (Classifier Free Guidance) scale is a measure of how close you want the model to stick to your prompt",
          "minimum": 0,
          "maximum": 1,
          "default": 0.5,
          "x-order": 5
        }
      }
    }
  },
  "videogen/kling1_6_standard": {
    "name": "videogen/kling1_6_standard",
    "schema": {
      "type": "object",
      "title": "Input",
      "required": [
        "prompt"
      ],
      "translatable": [
        "prompt",
        "negative_prompt"
      ],
      "speech_enabled": [
        "prompt",
        "negative_prompt"
      ],
      "linkto": {
        "*": "*"
      },
      "map": {
        "prompt": "prompt",
        "negative_prompt": "negative_prompt",
        "start_image": "image"
      },
      "properties": {
        "prompt": {
          "type": "string",
          "title": "Prompt",
          "x-order": 0,
          "description": "Text prompt for video generation"
        },
        "duration": {
          "enum": [
            5,
            10
          ],
          "type": "integer",
          "title": "duration",
          "description": "Duration of the video in seconds",
          "default": 5,
          "x-order": 6
        },
        "cfg_scale": {
          "type": "number",
          "title": "Cfg Scale",
          "default": 0.5,
          "maximum": 1,
          "minimum": 0,
          "step": 0.01,
          "x-order": 5,
          "description": "Flexibility in video generation; The higher the value, the lower the model's degree of flexibility, and the stronger the relevance to the user's prompt."
        },
        "start_image": {
          "type": "string",
          "title": "Start Image",
          "format": "uri",
          "fileType": "image",
          "x-order": 3,
          "description": "First frame of the video"
        },
        "aspect_ratio": {
          "enum": [
            "16:9",
            "9:16",
            "1:1"
          ],
          "type": "string",
          "title": "aspect_ratio",
          "description": "Aspect ratio of the video. Ignored if start_image is provided.",
          "default": "16:9",
          "x-order": 2
        },
        "negative_prompt": {
          "type": "string",
          "title": "Negative Prompt",
          "default": "",
          "x-order": 1,
          "description": "Things you do not want to see in the video"
        },
        "reference_images": {
          "type": "array",
          "items": {
            "type": "string",
            "format": "uri"
          },
          "title": "Reference Images",
          "x-order": 4,
          "maxItems": 4,
          "description": "Reference images to use in video generation (up to 4 images). Also known as scene elements."
        }
      }
    }
  },
  "videogen/kling2_1_master_i2v": {
    "name": "videogen/kling2_1_master_i2v",
    "schema": {
      "type": "object",
      "title": "Video Generation Input",
      "required": [
        "prompt",
        "image_url"
      ],
      "translatable": [
        "prompt",
        "negative_prompt"
      ],
      "speech_enabled": [
        "prompt",
        "negative_prompt"
      ],
      "linkto": {
        "*": "*"
      },
      "map": {
        "prompt": "prompt",
        "image_url": "image",
        "negative_prompt": "negative_prompt"
      },
      "properties": {
        "prompt": {
          "type": "string",
          "title": "Prompt",
          "description": "The prompt to guide video generation",
          "x-order": 0
        },
        "image_url": {
          "type": "string",
          "title": "Image URL",
          "fileType": "image",
          "description": "URL of the image to be used for the video",
          "format": "uri",
          "x-order": 1
        },
        "duration": {
          "type": "integer",
          "title": "Duration",
          "description": "The duration of the generated video in seconds",
          "enum": [
            5,
            10
          ],
          "default": 5,
          "x-order": 2
        },
        "aspect_ratio": {
          "type": "string",
          "title": "Aspect Ratio",
          "description": "The aspect ratio of the generated video frame",
          "enum": [
            "16:9",
            "9:16",
            "1:1"
          ],
          "default": "16:9",
          "x-order": 3
        },
        "negative_prompt": {
          "type": "string",
          "title": "Negative Prompt",
          "description": "Specify what you don't want to see in the generated video",
          "default": "blur, distort, and low quality",
          "x-order": 4
        },
        "cfg_scale": {
          "type": "number",
          "title": "CFG Scale",
          "description": "The CFG (Classifier Free Guidance) scale is a measure of how close you want the model to stick to your prompt",
          "default": 0.5,
          "display": "hidden",
          "x-order": 5
        }
      }
    }
  },
  "videogen/kling2_1_master_t2v": {
    "name": "videogen/kling2_1_master_t2v",
    "schema": {
      "type": "object",
      "title": "Video Generation Input",
      "required": [
        "prompt"
      ],
      "translatable": [
        "prompt",
        "negative_prompt"
      ],
      "speech_enabled": [
        "prompt",
        "negative_prompt"
      ],
      "linkto": {
        "*": "*"
      },
      "map": {
        "prompt": "prompt",
        "negative_prompt": "negative_prompt"
      },
      "properties": {
        "prompt": {
          "type": "string",
          "title": "Prompt",
          "description": "The prompt to guide video generation",
          "x-order": 0
        },
        "duration": {
          "type": "integer",
          "title": "Duration",
          "description": "The duration of the generated video in seconds",
          "enum": [
            5,
            10
          ],
          "default": 5,
          "x-order": 2
        },
        "aspect_ratio": {
          "type": "string",
          "title": "Aspect Ratio",
          "description": "The aspect ratio of the generated video frame",
          "enum": [
            "16:9",
            "9:16",
            "1:1"
          ],
          "default": "16:9",
          "x-order": 3
        },
        "negative_prompt": {
          "type": "string",
          "title": "Negative Prompt",
          "description": "Specify what you don't want to see in the generated video",
          "default": "blur, distort, and low quality",
          "x-order": 4
        },
        "cfg_scale": {
          "type": "number",
          "title": "CFG Scale",
          "description": "The CFG (Classifier Free Guidance) scale is a measure of how close you want the model to stick to your prompt",
          "default": 0.5,
          "display": "hidden",
          "x-order": 5
        }
      }
    }
  },
  "videogen/kling2_1_standard_pro_i2v": {
    "name": "videogen/kling2_1_standard_pro_i2v",
    "schema": {
      "type": "object",
      "title": "Input",
      "required": [
        "prompt",
        "start_image"
      ],
      "transatable": [
        "prompt"
      ],
      "speech_enabled": [
        "prompt"
      ],
      "linkto": {
        "*": "*"
      },
      "map": {
        "prompt": "prompt",
        "start_image": "image"
      },
      "properties": {
        "mode": {
          "enum": [
            "standard",
            "pro"
          ],
          "type": "string",
          "title": "mode",
          "description": "Standard has a resolution of 720p, pro is 1080p. Both are 24fps.",
          "default": "standard",
          "x-order": 3
        },
        "prompt": {
          "type": "string",
          "title": "Prompt",
          "x-order": 0,
          "description": "Text prompt for video generation"
        },
        "duration": {
          "enum": [
            5,
            10
          ],
          "type": "integer",
          "title": "duration",
          "description": "Duration of the video in seconds",
          "default": 5,
          "x-order": 4
        },
        "start_image": {
          "type": "string",
          "title": "Start Image",
          "format": "uri",
          "fileType": "image",
          "x-order": 2,
          "description": "First frame of the video. You must use a start image with kling-v2.1."
        },
        "negative_prompt": {
          "type": "string",
          "title": "Negative Prompt",
          "default": "",
          "x-order": 1,
          "description": "Things you do not want to see in the video"
        }
      }
    }
  },
  "videogen/kling2_1_pro_se2v": {
    "name": "videogen/kling2_1_pro_se2v",
    "schema": {
      "type": "object",
      "title": "Input",
      "required": [
        "prompt",
        "image_url"
      ],
      "translatable": [
        "prompt"
      ],
      "speech_enabled": [
        "prompt"
      ],
      "linkto": {
        "*": "*"
      },
      "map": {
        "prompt": "prompt",
        "image_url": "image",
        "tail_image_url": "end_image"
      },
      "properties": {
        "prompt": {
          "type": "string",
          "title": "Prompt",
          "x-order": 0,
          "description": "Text prompt for video generation"
        },
        "image_url": {
          "type": "string",
          "title": "Start Image",
          "format": "uri",
          "fileType": "image",
          "x-order": 1,
          "description": "URL of the image to be used for the start of the video"
        },
        "duration": {
          "enum": [
            5,
            10
          ],
          "type": "integer",
          "title": "Duration",
          "description": "The duration of the generated video in seconds",
          "default": 5,
          "x-order": 2
        },
        "aspect_ratio": {
          "enum": [
            "16:9",
            "9:16",
            "1:1"
          ],
          "type": "string",
          "title": "Aspect Ratio",
          "description": "The aspect ratio of the generated video frame",
          "default": "16:9",
          "x-order": 3
        },
        "tail_image_url": {
          "type": "string",
          "title": "End Image",
          "format": "uri",
          "fileType": "image",
          "x-order": 4,
          "description": "URL of the image to be used for the end of the video"
        },
        "negative_prompt": {
          "type": "string",
          "title": "Negative Prompt",
          "default": "blur, distort, and low quality",
          "x-order": 5,
          "description": "Things you do not want to see in the video"
        },
        "cfg_scale": {
          "type": "number",
          "title": "CFG Scale",
          "default": 0.5,
          "maximum": 1,
          "minimum": 0,
          "step": 0.01,
          "display": "hidden",
          "x-order": 6,
          "description": "The CFG (Classifier Free Guidance) scale is a measure of how close you want the model to stick to your prompt."
        }
      }
    }
  },
  "videogen/pixverse_v5": {
    "name": "videogen/pixverse_v5",
    "schema": {
      "type": "object",
      "title": "Input",
      "required": [
        "prompt"
      ],
      "translatable": [
        "prompt"
      ],
      "speech_enabled": [
        "prompt"
      ],
      "linkto": {
        "*": "*"
      },
      "map": {
        "prompt": "prompt"
      },
      "properties": {
        "seed": {
          "type": "integer",
          "title": "Seed",
          "x-order": 7,
          "description": "Random seed. Set for reproducible generation"
        },
        "image": {
          "type": "string",
          "title": "Image",
          "format": "uri",
          "fileType": "image",
          "x-order": 1,
          "description": "Image to use for the first frame of the video"
        },
        "effect": {
          "enum": [
            "None",
            "Let's YMCA!",
            "Subject 3 Fever",
            "Ghibli Live!",
            "Suit Swagger",
            "Muscle Surge",
            "360° Microwave",
            "Warmth of Jesus",
            "Emergency Beat",
            "Anything, Robot",
            "Kungfu Club",
            "Mint in Box",
            "Retro Anime Pop",
            "Vogue Walk",
            "Mega Dive",
            "Evil Trigger"
          ],
          "type": "string",
          "title": "effect",
          "description": "Special effect to apply to the video. V5 supports effects. Does not work with last_frame_image.",
          "default": "None",
          "x-order": 8
        },
        "prompt": {
          "type": "string",
          "title": "Prompt",
          "x-order": 0,
          "description": "Text prompt for video generation"
        },
        "quality": {
          "enum": [
            "360p",
            "540p",
            "720p",
            "1080p"
          ],
          "type": "string",
          "title": "quality",
          "description": "Resolution of the video. 360p and 540p cost the same, but 720p and 1080p cost more. V5 supports 1080p with 8 second duration.",
          "default": "540p",
          "x-order": 3
        },
        "duration": {
          "enum": [
            5,
            8
          ],
          "type": "integer",
          "title": "duration",
          "description": "Duration of the video in seconds. 8 second videos cost twice as much as 5 second videos. V5 supports 1080p with 8 second duration.",
          "default": 5,
          "x-order": 5
        },
        "aspect_ratio": {
          "enum": [
            "16:9",
            "9:16",
            "1:1"
          ],
          "type": "string",
          "title": "aspect_ratio",
          "description": "Aspect ratio of the video",
          "default": "16:9",
          "x-order": 4
        },
        "negative_prompt": {
          "type": "string",
          "title": "Negative Prompt",
          "default": "",
          "x-order": 6,
          "description": "Negative prompt to avoid certain elements in the video"
        },
        "last_frame_image": {
          "type": "string",
          "title": "Last Frame Image",
          "format": "uri",
          "x-order": 2,
          "description": "Use to generate a video that transitions from the first image to the last image. Must be used with image."
        }
      }
    }
  },
  "videogen/minimax_hailuo2_fast_i2v": {
    "name": "videogen/minimax_hailuo2_fast_i2v",
    "schema": {
      "type": "object",
      "title": "Input",
      "required": [
        "prompt",
        "image_url"
      ],
      "translatable": [
        "prompt"
      ],
      "speech_enabled": [
        "prompt"
      ],
      "linkto": {
        "*": "*"
      },
      "map": {
        "prompt": "prompt",
        "image_url": "image"
      },
      "properties": {
        "prompt": {
          "type": "string",
          "title": "Prompt",
          "description": "The prompt for video generation.",
          "x-order": 0
        },
        "image_url": {
          "type": "string",
          "title": "Image",
          "description": "The image to be used for video generation.",
          "format": "uri",
          "fileType": "image",
          "x-order": 1
        },
        "duration": {
          "type": "string",
          "title": "Duration",
          "description": "The duration of the video in seconds. 10 seconds videos are not supported for 1080p resolution.",
          "enum": [
            "6",
            "10"
          ],
          "default": "6",
          "x-order": 2
        },
        "prompt_optimize": {
          "type": "boolean",
          "title": "Prompt Optimization",
          "description": "Whether to optimize the prompt for video generation.",
          "default": false,
          "display": "hidden",
          "x-order": 3
        }
      }
    }
  },
  "videogen/wan2_2_14b_i2v": {
    "name": "videogen/wan2_2_14b_i2v",
    "schema": {
      "type": "object",
      "title": "Input",
      "required": [
        "image_url",
        "prompt"
      ],
      "translatable": [
        "prompt",
        "negative_prompt"
      ],
      "speech_enabled": [
        "prompt",
        "negative_prompt"
      ],
      "linkto": {
        "*": "*"
      },
      "map": {
        "prompt": "prompt",
        "image_url": "image"
      },
      "properties": {
        "image_url": {
          "type": "string",
          "title": "Image",
          "description": "URL of the input image. If the input image does not match the chosen aspect ratio, it is resized and center cropped.",
          "format": "uri",
          "fileType": "image",
          "x-order": 0
        },
        "prompt": {
          "type": "string",
          "title": "Prompt",
          "description": "The text prompt to guide video generation.",
          "x-order": 1
        },
        "num_frames": {
          "type": "integer",
          "title": "Number of Frames",
          "description": "Number of frames to generate.",
          "default": 81,
          "minimum": 81,
          "maximum": 121,
          "step": 1,
          "x-order": 2
        },
        "frames_per_second": {
          "type": "integer",
          "title": "Frames per Second",
          "description": "Frames per second of the generated video. When using interpolation and adjust_fps_for_interpolation is set to true (default true), the final FPS will be multiplied by the number of interpolated frames plus one.",
          "default": 16,
          "minimum": 4,
          "maximum": 60,
          "step": 1,
          "x-order": 3
        },
        "negative_prompt": {
          "type": "string",
          "title": "Negative Prompt",
          "description": "Negative prompt for video generation.",
          "default": "bright colors, overexposed, static, blurred details, subtitles, style, artwork, painting, picture, still, overall gray, worst quality, low quality, JPEG compression residue, ugly, incomplete, extra fingers, poorly drawn hands, poorly drawn faces, deformed, disfigured, malformed limbs, fused fingers, still picture, cluttered background, three legs, many people in the background, walking backwards",
          "x-order": 4
        },
        "seed": {
          "type": "integer",
          "title": "Seed",
          "description": "Random seed for reproducibility. If None, a random seed is chosen.",
          "x-order": 5
        },
        "resolution": {
          "type": "string",
          "title": "Resolution",
          "description": "Resolution of the generated video.",
          "enum": [
            "480p",
            "580p",
            "720p"
          ],
          "default": "720p",
          "x-order": 6
        },
        "aspect_ratio": {
          "type": "string",
          "title": "Aspect Ratio",
          "description": "Aspect ratio of the generated video. If 'auto', the aspect ratio will be determined automatically based on the input image.",
          "enum": [
            "auto",
            "16:9",
            "9:16",
            "1:1"
          ],
          "default": "auto",
          "x-order": 7
        },
        "num_inference_steps": {
          "type": "integer",
          "title": "Number of Inference Steps",
          "description": "Number of inference steps for sampling. Higher values give better quality but take longer.",
          "default": 30,
          "minimum": 1,
          "maximum": 100,
          "step": 1,
          "display": "hidden",
          "x-order": 8
        },
        "enable_safety_checker": {
          "type": "boolean",
          "title": "Enable Safety Checker",
          "description": "If set to true, input data will be checked for safety before processing.",
          "default": false,
          "display": "hidden",
          "x-order": 9
        },
        "enable_prompt_expansion": {
          "type": "boolean",
          "title": "Enable Prompt Expansion",
          "description": "Whether to enable prompt expansion. This will use a large language model to expand the prompt with additional details while maintaining the original meaning.",
          "default": false,
          "x-order": 10
        },
        "guidance_scale": {
          "type": "number",
          "title": "Guidance Scale",
          "description": "Classifier-free guidance scale. Higher values give better adherence to the prompt but may decrease quality.",
          "default": 3.5,
          "minimum": 0,
          "maximum": 20,
          "step": 0.1,
          "display": "hidden",
          "x-order": 11
        },
        "guidance_scale_2": {
          "type": "number",
          "title": "Guidance Scale 2",
          "description": "Guidance scale for the second stage of the model. This is used to control the adherence to the prompt in the second stage of the model.",
          "default": 3.5,
          "minimum": 0,
          "maximum": 20,
          "step": 0.1,
          "display": "hidden",
          "x-order": 12
        },
        "shift": {
          "type": "number",
          "title": "Shift",
          "description": "Shift value for the video.",
          "default": 5,
          "minimum": 1,
          "maximum": 10,
          "step": 0.1,
          "display": "hidden",
          "x-order": 13
        },
        "interpolator_model": {
          "type": "string",
          "title": "Interpolator Model",
          "description": "The model to use for frame interpolation. If None, no interpolation is applied.",
          "enum": [
            "none",
            "film",
            "rife"
          ],
          "default": "film",
          "display": "hidden",
          "x-order": 14
        },
        "num_interpolated_frames": {
          "type": "integer",
          "title": "No. of Interpolated Frames",
          "description": "Number of frames to interpolate between each pair of generated frames.",
          "default": 1,
          "minimum": 0,
          "maximum": 4,
          "display": "hidden",
          "x-order": 15
        },
        "adjust_fps_for_interpolation": {
          "type": "boolean",
          "title": "Adjust FPS for Interpolation",
          "description": "If true, the number of frames per second will be multiplied by the number of interpolated frames plus one. If false, the passed frames per second will be used as-is.",
          "default": false,
          "display": "hidden",
          "x-order": 16
        }
      }
    }
  },
  "videogen/wan2_2_14b_t2v": {
    "name": "videogen/wan2_2_14b_t2v",
    "schema": {
      "type": "object",
      "title": "Input",
      "required": [
        "prompt"
      ],
      "translatable": [
        "prompt",
        "negative_prompt"
      ],
      "speech_enabled": [
        "prompt",
        "negative_prompt"
      ],
      "linkto": {
        "*": "*"
      },
      "map": {
        "prompt": "prompt"
      },
      "properties": {
        "prompt": {
          "type": "string",
          "title": "Prompt",
          "description": "The text prompt to guide video generation.",
          "x-order": 1
        },
        "num_frames": {
          "type": "integer",
          "title": "Number of Frames",
          "description": "Number of frames to generate.",
          "default": 81,
          "minimum": 81,
          "maximum": 121,
          "step": 1,
          "x-order": 2
        },
        "frames_per_second": {
          "type": "integer",
          "title": "Frames per Second",
          "description": "Frames per second of the generated video. When using interpolation and adjust_fps_for_interpolation is set to true (default true), the final FPS will be multiplied by the number of interpolated frames plus one.",
          "default": 16,
          "minimum": 4,
          "maximum": 60,
          "step": 1,
          "x-order": 3
        },
        "negative_prompt": {
          "type": "string",
          "title": "Negative Prompt",
          "description": "Negative prompt for video generation.",
          "default": "bright colors, overexposed, static, blurred details, subtitles, style, artwork, painting, picture, still, overall gray, worst quality, low quality, JPEG compression residue, ugly, incomplete, extra fingers, poorly drawn hands, poorly drawn faces, deformed, disfigured, malformed limbs, fused fingers, still picture, cluttered background, three legs, many people in the background, walking backwards",
          "x-order": 4
        },
        "seed": {
          "type": "integer",
          "title": "Seed",
          "description": "Random seed for reproducibility. If None, a random seed is chosen.",
          "x-order": 5
        },
        "resolution": {
          "type": "string",
          "title": "Resolution",
          "description": "Resolution of the generated video.",
          "enum": [
            "480p",
            "580p",
            "720p"
          ],
          "default": "720p",
          "x-order": 6
        },
        "aspect_ratio": {
          "type": "string",
          "title": "Aspect Ratio",
          "description": "Aspect ratio of the generated video. If 'auto', the aspect ratio will be determined automatically based on the input image.",
          "enum": [
            "16:9",
            "9:16",
            "1:1"
          ],
          "default": "16:9",
          "x-order": 7
        },
        "num_inference_steps": {
          "type": "integer",
          "title": "Number of Inference Steps",
          "description": "Number of inference steps for sampling. Higher values give better quality but take longer.",
          "default": 30,
          "minimum": 1,
          "maximum": 100,
          "step": 1,
          "display": "hidden",
          "x-order": 8
        },
        "enable_safety_checker": {
          "type": "boolean",
          "title": "Enable Safety Checker",
          "description": "If set to true, input data will be checked for safety before processing.",
          "default": false,
          "display": "hidden",
          "x-order": 9
        },
        "enable_prompt_expansion": {
          "type": "boolean",
          "title": "Enable Prompt Expansion",
          "description": "Whether to enable prompt expansion. This will use a large language model to expand the prompt with additional details while maintaining the original meaning.",
          "default": false,
          "x-order": 10
        },
        "guidance_scale": {
          "type": "number",
          "title": "Guidance Scale",
          "description": "Classifier-free guidance scale. Higher values give better adherence to the prompt but may decrease quality.",
          "default": 3.5,
          "minimum": 0,
          "maximum": 20,
          "step": 0.1,
          "display": "hidden",
          "x-order": 11
        },
        "guidance_scale_2": {
          "type": "number",
          "title": "Guidance Scale 2",
          "description": "Guidance scale for the second stage of the model. This is used to control the adherence to the prompt in the second stage of the model.",
          "default": 3.5,
          "minimum": 0,
          "maximum": 20,
          "step": 0.1,
          "display": "hidden",
          "x-order": 12
        },
        "shift": {
          "type": "number",
          "title": "Shift",
          "description": "Shift value for the video.",
          "default": 5,
          "minimum": 1,
          "maximum": 10,
          "step": 0.1,
          "display": "hidden",
          "x-order": 13
        },
        "interpolator_model": {
          "type": "string",
          "title": "Interpolator Model",
          "description": "The model to use for frame interpolation. If None, no interpolation is applied.",
          "enum": [
            "none",
            "film",
            "rife"
          ],
          "default": "film",
          "display": "hidden",
          "x-order": 14
        },
        "num_interpolated_frames": {
          "type": "integer",
          "title": "No. of Interpolated Frames",
          "description": "Number of frames to interpolate between each pair of generated frames.",
          "default": 1,
          "minimum": 0,
          "maximum": 4,
          "display": "hidden",
          "x-order": 15
        },
        "adjust_fps_for_interpolation": {
          "type": "boolean",
          "title": "Adjust FPS for Interpolation",
          "description": "If true, the number of frames per second will be multiplied by the number of interpolated frames plus one. If false, the passed frames per second will be used as-is.",
          "default": false,
          "display": "hidden",
          "x-order": 16
        }
      }
    }
  },
  "videogen/google_veo2": {
    "name": "videogen/google_veo2",
    "schema": {
      "type": "object",
      "title": "Input",
      "required": [
        "prompt"
      ],
      "translatable": [
        "prompt"
      ],
      "speech_enabled": [
        "prompt"
      ],
      "linkto": {
        "*": "*"
      },
      "map": {
        "prompt": "prompt"
      },
      "properties": {
        "seed": {
          "type": "integer",
          "title": "Seed",
          "x-order": 3,
          "description": "Random seed. Omit for random generations"
        },
        "prompt": {
          "type": "string",
          "title": "Prompt",
          "x-order": 0,
          "description": "Text prompt for video generation"
        },
        "duration": {
          "enum": [
            5,
            6,
            7,
            8
          ],
          "type": "integer",
          "title": "duration",
          "description": "Video duration",
          "default": 5,
          "x-order": 2
        },
        "aspect_ratio": {
          "enum": [
            "16:9",
            "9:16"
          ],
          "type": "string",
          "title": "aspect_ratio",
          "description": "Video aspect ratio",
          "default": "16:9",
          "x-order": 1
        }
      }
    }
  },
  "videogen/google_veo2_i2v": {
    "name": "videogen/google_veo2_i2v",
    "schema": {
      "type": "object",
      "title": "Input",
      "required": [
        "prompt",
        "image_url"
      ],
      "translatable": [
        "prompt"
      ],
      "speech_enabled": [
        "prompt"
      ],
      "linkto": {
        "*": "*"
      },
      "map": {
        "prompt": "prompt",
        "image_url": "image"
      },
      "properties": {
        "image_url": {
          "type": "string",
          "title": "Image URL",
          "fileType": "image",
          "x-order": 1,
          "format": "uri",
          "description": "URL of the input image to animate. Should be 720p or higher resolution."
        },
        "prompt": {
          "type": "string",
          "title": "Prompt",
          "x-order": 0,
          "description": "Text prompt for video generation"
        },
        "duration": {
          "enum": [
            "5s",
            "6s",
            "7s",
            "8s"
          ],
          "type": "string",
          "title": "duration",
          "description": "Video duration",
          "default": "5s",
          "x-order": 2
        },
        "aspect_ratio": {
          "enum": [
            "auto",
            "16:9",
            "9:16"
          ],
          "type": "string",
          "title": "aspect_ratio",
          "description": "Video aspect ratio",
          "default": "auto",
          "x-order": 3
        }
      }
    }
  },
  "videogen/google_veo3_t2v": {
    "name": "videogen/google_veo3_t2v",
    "schema": {
      "type": "object",
      "title": "Input",
      "required": [
        "prompt"
      ],
      "translatable": [
        "prompt"
      ],
      "speech_enabled": [
        "prompt"
      ],
      "linkto": {
        "*": "*"
      },
      "map": {
        "prompt": "prompt"
      },
      "properties": {
        "seed": {
          "type": "integer",
          "title": "Seed",
          "x-order": 5,
          "nullable": true,
          "description": "Random seed. Omit for random generations"
        },
        "prompt": {
          "type": "string",
          "title": "Prompt",
          "x-order": 0,
          "description": "Text prompt for video generation"
        },
        "resolution": {
          "enum": [
            "720p",
            "1080p"
          ],
          "type": "string",
          "title": "resolution",
          "description": "Resolution of the generated video",
          "default": "720p",
          "x-order": 4
        },
        "aspect_ratio": {
          "enum": [
            "16:9",
            "9:16"
          ],
          "type": "string",
          "title": "aspect_ratio",
          "description": "Video aspect ratio",
          "default": "16:9",
          "x-order": 1
        },
        "negative_prompt": {
          "type": "string",
          "title": "Negative Prompt",
          "x-order": 3,
          "nullable": true,
          "description": "Description of what to discourage in the generated video"
        }
      }
    }
  },
  "videogen/google_veo3_i2v": {
    "name": "videogen/google_veo3_i2v",
    "schema": {
      "type": "object",
      "title": "Input",
      "required": [
        "prompt"
      ],
      "translatable": [
        "prompt"
      ],
      "speech_enabled": [
        "prompt"
      ],
      "linkto": {
        "*": "*"
      },
      "map": {
        "prompt": "prompt"
      },
      "properties": {
        "seed": {
          "type": "integer",
          "title": "Seed",
          "x-order": 5,
          "nullable": true,
          "description": "Random seed. Omit for random generations"
        },
        "prompt": {
          "type": "string",
          "title": "Prompt",
          "x-order": 0,
          "description": "Text prompt for video generation"
        },
        "resolution": {
          "enum": [
            "720p",
            "1080p"
          ],
          "type": "string",
          "title": "resolution",
          "description": "Resolution of the generated video",
          "default": "720p",
          "x-order": 4
        },
        "aspect_ratio": {
          "enum": [
            "16:9",
            "9:16"
          ],
          "type": "string",
          "title": "aspect_ratio",
          "description": "Video aspect ratio",
          "default": "16:9",
          "x-order": 1
        },
        "image": {
          "type": "string",
          "title": "Image",
          "format": "uri",
          "x-order": 2,
          "fileType": "image",
          "description": "Input image to start generating from. Ideal images are 1280x720"
        },
        "negative_prompt": {
          "type": "string",
          "title": "Negative Prompt",
          "x-order": 3,
          "nullable": true,
          "description": "Description of what to discourage in the generated video"
        }
      }
    }
  },
  "videogen/google_veo3_fast_t2v": {
    "name": "videogen/google_veo3_fast_t2v",
    "schema": {
      "type": "object",
      "title": "Input",
      "required": [
        "prompt"
      ],
      "translatable": [
        "prompt"
      ],
      "speech_enabled": [
        "prompt"
      ],
      "linkto": {
        "*": "*"
      },
      "map": {
        "prompt": "prompt"
      },
      "properties": {
        "seed": {
          "type": "integer",
          "title": "Seed",
          "x-order": 5,
          "nullable": true,
          "description": "Random seed. Omit for random generations"
        },
        "prompt": {
          "type": "string",
          "title": "Prompt",
          "x-order": 0,
          "description": "Text prompt for video generation"
        },
        "resolution": {
          "enum": [
            "720p",
            "1080p"
          ],
          "type": "string",
          "title": "resolution",
          "description": "Resolution of the generated video",
          "default": "720p",
          "x-order": 4
        },
        "aspect_ratio": {
          "enum": [
            "16:9",
            "9:16"
          ],
          "type": "string",
          "title": "aspect_ratio",
          "description": "Video aspect ratio",
          "default": "16:9",
          "x-order": 1
        },
        "negative_prompt": {
          "type": "string",
          "title": "Negative Prompt",
          "x-order": 3,
          "nullable": true,
          "description": "Description of what to discourage in the generated video"
        }
      }
    }
  },
  "videogen/google_veo3_fast_i2v": {
    "name": "videogen/google_veo3_fast_i2v",
    "schema": {
      "type": "object",
      "title": "Input",
      "required": [
        "prompt"
      ],
      "translatable": [
        "prompt"
      ],
      "speech_enabled": [
        "prompt"
      ],
      "linkto": {
        "*": "*"
      },
      "map": {
        "prompt": "prompt"
      },
      "properties": {
        "seed": {
          "type": "integer",
          "title": "Seed",
          "x-order": 5,
          "nullable": true,
          "description": "Random seed. Omit for random generations"
        },
        "prompt": {
          "type": "string",
          "title": "Prompt",
          "x-order": 0,
          "description": "Text prompt for video generation"
        },
        "resolution": {
          "enum": [
            "720p",
            "1080p"
          ],
          "type": "string",
          "title": "resolution",
          "description": "Resolution of the generated video",
          "default": "720p",
          "x-order": 4
        },
        "aspect_ratio": {
          "enum": [
            "16:9",
            "9:16"
          ],
          "type": "string",
          "title": "aspect_ratio",
          "description": "Video aspect ratio",
          "default": "16:9",
          "x-order": 1
        },
        "image": {
          "type": "string",
          "title": "Image",
          "format": "uri",
          "x-order": 2,
          "fileType": "image",
          "description": "Input image to start generating from. Ideal images are 1280x720"
        },
        "negative_prompt": {
          "type": "string",
          "title": "Negative Prompt",
          "x-order": 3,
          "nullable": true,
          "description": "Description of what to discourage in the generated video"
        }
      }
    }
  },
  "videogen/luma_ray2_flash_i2v": {
    "name": "videogen/luma_ray2_flash_i2v",
    "schema": {
      "type": "object",
      "title": "Input",
      "linkto": {
        "*": "*"
      },
      "map": {
        "prompt": "prompt",
        "image_url": "image",
        "end_image_url": "end_image"
      },
      "required": [
        "prompt"
      ],
      "translatable": [
        "prompt"
      ],
      "speech_enabled": [
        "prompt"
      ],
      "properties": {
        "prompt": {
          "type": "string",
          "title": "Prompt",
          "description": "Text prompt for video generation",
          "x-order": 0
        },
        "image_url": {
          "type": "string",
          "title": "Initial Image URL",
          "description": "Initial image to start the video from. Can be used together with end_image_url.",
          "format": "uri",
          "fileType": "image",
          "x-order": 1
        },
        "end_image_url": {
          "type": "string",
          "title": "Final Image URL",
          "description": "Final image to end the video with. Can be used together with image_url.",
          "format": "uri",
          "fileType": "image",
          "x-order": 2
        },
        "aspect_ratio": {
          "type": "string",
          "title": "Aspect Ratio",
          "description": "The aspect ratio of the generated video",
          "enum": [
            "16:9",
            "9:16",
            "4:3",
            "3:4",
            "21:9",
            "9:21"
          ],
          "default": "16:9",
          "x-order": 3
        },
        "loop": {
          "type": "boolean",
          "title": "Loop Video",
          "description": "Whether the video should loop (end of video is blended with the beginning)",
          "default": false,
          "x-order": 4
        },
        "resolution": {
          "type": "string",
          "title": "Resolution",
          "description": "The resolution of the generated video (720p costs 2x more, 1080p costs 4x more)",
          "enum": [
            "540p",
            "720p",
            "1080p"
          ],
          "default": "540p",
          "x-order": 5
        },
        "duration": {
          "type": "string",
          "title": "Duration",
          "description": "The duration of the generated video",
          "enum": [
            "5s"
          ],
          "default": "5s",
          "x-order": 6
        }
      }
    }
  },
  "videogen/luma_ray2_i2v": {
    "name": "videogen/luma_ray2_i2v",
    "schema": {
      "type": "object",
      "title": "Input",
      "linkto": {
        "*": "*"
      },
      "map": {
        "prompt": "prompt",
        "image_url": "image",
        "end_image_url": "end_image"
      },
      "required": [
        "prompt"
      ],
      "translatable": [
        "prompt"
      ],
      "speech_enabled": [
        "prompt"
      ],
      "properties": {
        "prompt": {
          "type": "string",
          "title": "Prompt",
          "description": "Text prompt for video generation",
          "x-order": 0
        },
        "image_url": {
          "type": "string",
          "title": "Initial Image URL",
          "description": "Initial image to start the video from. Can be used together with end_image_url.",
          "format": "uri",
          "fileType": "image",
          "x-order": 1
        },
        "end_image_url": {
          "type": "string",
          "title": "Final Image URL",
          "description": "Final image to end the video with. Can be used together with image_url.",
          "format": "uri",
          "fileType": "image",
          "x-order": 2
        },
        "aspect_ratio": {
          "type": "string",
          "title": "Aspect Ratio",
          "description": "The aspect ratio of the generated video",
          "enum": [
            "16:9",
            "9:16",
            "4:3",
            "3:4",
            "21:9",
            "9:21"
          ],
          "default": "16:9",
          "x-order": 3
        },
        "loop": {
          "type": "boolean",
          "title": "Loop Video",
          "description": "Whether the video should loop (end of video is blended with the beginning)",
          "default": false,
          "x-order": 4
        },
        "resolution": {
          "type": "string",
          "title": "Resolution",
          "description": "The resolution of the generated video (720p costs 2x more, 1080p costs 4x more)",
          "enum": [
            "540p",
            "720p",
            "1080p"
          ],
          "default": "540p",
          "x-order": 5
        },
        "duration": {
          "type": "string",
          "title": "Duration",
          "description": "The duration of the generated video",
          "enum": [
            "5s"
          ],
          "default": "5s",
          "x-order": 6
        }
      }
    }
  },
  "videogen/luma_ray2_t2v": {
    "name": "videogen/luma_ray2_t2v",
    "schema": {
      "type": "object",
      "title": "Input",
      "linkto": {
        "*": "*"
      },
      "map": {
        "prompt": "prompt",
        "negative_prompt": "negative_prompt"
      },
      "required": [
        "prompt"
      ],
      "translatable": [
        "prompt"
      ],
      "speech_enabled": [
        "prompt"
      ],
      "properties": {
        "prompt": {
          "type": "string",
          "title": "Prompt",
          "description": "Text prompt for video generation",
          "x-order": 0
        },
        "aspect_ratio": {
          "type": "string",
          "title": "Aspect Ratio",
          "description": "The aspect ratio of the generated video",
          "enum": [
            "16:9",
            "9:16",
            "4:3",
            "3:4",
            "21:9",
            "9:21"
          ],
          "default": "16:9",
          "x-order": 3
        },
        "loop": {
          "type": "boolean",
          "title": "Loop Video",
          "description": "Whether the video should loop (end of video is blended with the beginning)",
          "default": false,
          "x-order": 4
        },
        "resolution": {
          "type": "string",
          "title": "Resolution",
          "description": "The resolution of the generated video (720p costs 2x more, 1080p costs 4x more)",
          "enum": [
            "540p",
            "720p",
            "1080p"
          ],
          "default": "540p",
          "x-order": 5
        },
        "duration": {
          "type": "string",
          "title": "Duration",
          "description": "The duration of the generated video",
          "enum": [
            "5s",
            "9s"
          ],
          "default": "5s",
          "x-order": 6
        }
      }
    }
  },
  "videogen/luma_ray2_flash_t2v": {
    "name": "videogen/luma_ray2_flash_t2v",
    "schema": {
      "type": "object",
      "title": "Input",
      "linkto": {
        "*": "*"
      },
      "map": {
        "prompt": "prompt",
        "negative_prompt": "negative_prompt"
      },
      "required": [
        "prompt"
      ],
      "translatable": [
        "prompt"
      ],
      "speech_enabled": [
        "prompt"
      ],
      "properties": {
        "prompt": {
          "type": "string",
          "title": "Prompt",
          "description": "Text prompt for video generation",
          "x-order": 0
        },
        "aspect_ratio": {
          "type": "string",
          "title": "Aspect Ratio",
          "description": "The aspect ratio of the generated video",
          "enum": [
            "16:9",
            "9:16",
            "4:3",
            "3:4",
            "21:9",
            "9:21"
          ],
          "default": "16:9",
          "x-order": 3
        },
        "loop": {
          "type": "boolean",
          "title": "Loop Video",
          "description": "Whether the video should loop (end of video is blended with the beginning)",
          "default": false,
          "x-order": 4
        },
        "resolution": {
          "type": "string",
          "title": "Resolution",
          "description": "The resolution of the generated video (720p costs 2x more, 1080p costs 4x more)",
          "enum": [
            "540p",
            "720p",
            "1080p"
          ],
          "default": "540p",
          "x-order": 5
        },
        "duration": {
          "type": "string",
          "title": "Duration",
          "description": "The duration of the generated video",
          "enum": [
            "5s",
            "9s"
          ],
          "default": "5s",
          "x-order": 6
        }
      }
    }
  },
  "videogen/pikaadditions": {
    "name": "videogen/pikaadditions",
    "schema": {
      "type": "object",
      "title": "Input",
      "required": [
        "prompt",
        "video_url",
        "image_url"
      ],
      "translatable": [
        "prompt",
        "negative_prompt"
      ],
      "speech_enabled": [
        "prompt",
        "negative_prompt"
      ],
      "linkto": {
        "*": "*"
      },
      "map": {
        "prompt": "prompt",
        "video_url": "video",
        "image_url": "image"
      },
      "properties": {
        "video_url": {
          "type": "string",
          "title": "Video URL",
          "description": "URL of the input video",
          "format": "uri",
          "fileType": "video",
          "x-order": 0
        },
        "image_url": {
          "type": "string",
          "title": "Image URL",
          "description": "URL of the image to add",
          "format": "uri",
          "action": "upload_to_azure_data",
          "fileType": "image",
          "x-order": 1
        },
        "prompt": {
          "type": "string",
          "title": "Prompt",
          "description": "Text prompt describing what to add",
          "x-order": 2
        },
        "negative_prompt": {
          "type": "string",
          "title": "Negative Prompt",
          "description": "Negative prompt to guide the model",
          "x-order": 3
        },
        "seed": {
          "type": "integer",
          "title": "Seed",
          "description": "The seed for the random number generator",
          "x-order": 4
        }
      }
    }
  },
  "videogen/pika2_2_i2v": {
    "name": "videogen/pika2_2_i2v",
    "schema": {
      "type": "object",
      "title": "Input",
      "required": [
        "prompt",
        "image_url"
      ],
      "translatable": [
        "prompt",
        "negative_prompt"
      ],
      "speech_enabled": [
        "prompt",
        "negative_prompt"
      ],
      "linkto": {
        "*": "*"
      },
      "map": {
        "prompt": "prompt",
        "image_url": "image",
        "negative_prompt": "negative_prompt"
      },
      "properties": {
        "image_url": {
          "type": "string",
          "title": "Image URL",
          "description": "URL of the image to use as the first frame",
          "format": "uri",
          "fileType": "image",
          "action": "upload_to_azure_data",
          "x-order": 0
        },
        "prompt": {
          "type": "string",
          "title": "Prompt",
          "description": "Text prompt describing what to add.",
          "x-order": 1
        },
        "seed": {
          "type": "integer",
          "title": "Seed",
          "description": "The seed for the random number generator",
          "x-order": 2
        },
        "negative_prompt": {
          "type": "string",
          "title": "Negative Prompt",
          "description": "A negative prompt to guide the model",
          "default": "",
          "x-order": 3
        },
        "resolution": {
          "type": "string",
          "title": "Resolution",
          "description": "The resolution of the generated video",
          "enum": [
            "720p",
            "1080p"
          ],
          "default": "720p",
          "x-order": 4
        },
        "duration": {
          "type": "integer",
          "title": "Duration",
          "description": "The duration of the generated video in seconds",
          "default": 5,
          "enum": [
            5,
            10
          ],
          "x-order": 5
        }
      }
    }
  },
  "videogen/pika2_i2v_turbo": {
    "name": "videogen/pika2_i2v_turbo",
    "schema": {
      "type": "object",
      "title": "Input",
      "required": [
        "prompt",
        "image_url"
      ],
      "translatable": [
        "prompt",
        "negative_prompt"
      ],
      "speech_enabled": [
        "prompt",
        "negative_prompt"
      ],
      "linkto": {
        "*": "*"
      },
      "map": {
        "prompt": "prompt",
        "image_url": "image",
        "negative_prompt": "negative_prompt"
      },
      "properties": {
        "image_url": {
          "type": "string",
          "title": "Image URL",
          "description": "URL of the image to use as the first frame",
          "format": "uri",
          "action": "upload_to_azure_data",
          "fileType": "image",
          "x-order": 0
        },
        "prompt": {
          "type": "string",
          "title": "Prompt",
          "description": "Text prompt describing what to add.",
          "x-order": 1
        },
        "seed": {
          "type": "integer",
          "title": "Seed",
          "description": "The seed for the random number generator",
          "x-order": 2
        },
        "negative_prompt": {
          "type": "string",
          "title": "Negative Prompt",
          "description": "A negative prompt to guide the model",
          "default": "",
          "x-order": 3
        },
        "resolution": {
          "type": "string",
          "title": "Resolution",
          "description": "The resolution of the generated video",
          "enum": [
            "720p",
            "1080p"
          ],
          "default": "720p",
          "x-order": 4
        },
        "duration": {
          "type": "integer",
          "title": "Duration",
          "description": "The duration of the generated video in seconds",
          "default": 5,
          "enum": [
            5
          ],
          "x-order": 5
        }
      }
    }
  },
  "videogen/pika2_2_t2v": {
    "name": "videogen/pika2_2_t2v",
    "schema": {
      "type": "object",
      "title": "Input",
      "required": [
        "prompt"
      ],
      "translatable": [
        "prompt",
        "negative_prompt"
      ],
      "speech_enabled": [
        "prompt",
        "negative_prompt"
      ],
      "linkto": {
        "*": "*"
      },
      "map": {
        "prompt": "prompt",
        "negative_prompt": "negative_prompt"
      },
      "properties": {
        "prompt": {
          "type": "string",
          "title": "Prompt",
          "description": "Text prompt describing what to add.",
          "x-order": 0
        },
        "aspect_ratio": {
          "type": "string",
          "title": "Aspect Ratio",
          "description": "The aspect ratio of the generated video",
          "enum": [
            "16:9",
            "9:16",
            "1:1",
            "4:5",
            "5:4",
            "3:2",
            "2:3"
          ],
          "default": "16:9",
          "x-order": 1
        },
        "seed": {
          "type": "integer",
          "title": "Seed",
          "description": "The seed for the random number generator",
          "x-order": 2
        },
        "negative_prompt": {
          "type": "string",
          "title": "Negative Prompt",
          "description": "A negative prompt to guide the model",
          "default": "",
          "x-order": 3
        },
        "resolution": {
          "type": "string",
          "title": "Resolution",
          "description": "The resolution of the generated video",
          "enum": [
            "720p",
            "1080p"
          ],
          "default": "720p",
          "x-order": 4
        },
        "duration": {
          "type": "integer",
          "title": "Duration",
          "description": "The duration of the generated video in seconds",
          "default": 5,
          "enum": [
            5,
            10
          ],
          "x-order": 5
        }
      }
    }
  },
  "videogen/pikaswaps": {
    "name": "videogen/pikaswaps",
    "schema": {
      "type": "object",
      "title": "Input",
      "required": [
        "video_url",
        "image_url",
        "modify_region",
        "prompt"
      ],
      "translatable": [
        "prompt",
        "negative_prompt",
        "modify_region"
      ],
      "speech_enabled": [
        "prompt",
        "negative_prompt",
        "modify_region"
      ],
      "linkto": {
        "*": "*"
      },
      "map": {
        "prompt": "prompt",
        "video_url": "video",
        "image_url": "image"
      },
      "properties": {
        "video_url": {
          "type": "string",
          "title": "Video URL",
          "description": "URL of the input video",
          "format": "uri",
          "fileType": "video",
          "x-order": 0
        },
        "image_url": {
          "type": "string",
          "title": "Image URL",
          "description": "URL of the image to swap with",
          "format": "uri",
          "action": "upload_to_azure_data",
          "fileType": "image",
          "x-order": 1
        },
        "modify_region": {
          "type": "string",
          "title": "Modify Region",
          "description": "Plaintext description of the object/region to modify",
          "x-order": 2
        },
        "prompt": {
          "type": "string",
          "title": "Prompt",
          "description": "Text prompt describing the modification",
          "x-order": 3
        },
        "negative_prompt": {
          "type": "string",
          "title": "Negative Prompt",
          "description": "Negative prompt to guide the model",
          "x-order": 4
        },
        "seed": {
          "type": "integer",
          "title": "Seed",
          "description": "The seed for the random number generator",
          "x-order": 5
        }
      }
    }
  },
  "videogen/vidu_i2v": {
    "name": "videogen/vidu_i2v",
    "schema": {
      "type": "object",
      "title": "Input",
      "required": [
        "prompt",
        "image_url"
      ],
      "translatable": [
        "prompt"
      ],
      "speech_enabled": [
        "prompt"
      ],
      "linkto": {
        "*": "*"
      },
      "map": {
        "prompt": "prompt",
        "image_url": "image"
      },
      "properties": {
        "image_url": {
          "type": "string",
          "title": "Image URL",
          "x-order": 1,
          "format": "uri",
          "fileType": "image",
          "description": "URL of the image to use as the first frame"
        },
        "prompt": {
          "type": "string",
          "title": "Prompt",
          "x-order": 0,
          "description": "Text prompt for video generation, max 1500 characters",
          "maxLength": 1500
        },
        "seed": {
          "type": "integer",
          "title": "Seed",
          "description": "Random seed for generation",
          "x-order": 4
        },
        "movement_amplitude": {
          "type": "string",
          "title": "Movement Amplitude",
          "description": "The movement amplitude of objects in the frame",
          "enum": [
            "auto",
            "small",
            "medium",
            "large"
          ],
          "default": "auto",
          "x-order": 5
        }
      }
    }
  },
  "videogen/vidu_r2v": {
    "name": "videogen/vidu_r2v",
    "schema": {
      "type": "object",
      "title": "Input",
      "required": [
        "prompt",
        "reference_image_urls"
      ],
      "translatable": [
        "prompt"
      ],
      "speech_enabled": [
        "prompt"
      ],
      "linkto": {
        "*": "*"
      },
      "map": {
        "prompt": "prompt"
      },
      "properties": {
        "prompt": {
          "type": "string",
          "title": "Prompt",
          "description": "Text prompt for video generation, max 1500 characters",
          "maxLength": 1500,
          "x-order": 0
        },
        "reference_image_urls": {
          "type": "array",
          "items": {
            "type": "string",
            "format": "uri"
          },
          "title": "Reference Image URLs",
          "description": "URLs of the reference images to use for consistent subject appearance",
          "maxItems": 4,
          "x-order": 1
        },
        "seed": {
          "type": "integer",
          "title": "Seed",
          "description": "Random seed for generation",
          "x-order": 2
        },
        "aspect_ratio": {
          "type": "string",
          "title": "Aspect Ratio",
          "description": "The aspect ratio of the output video",
          "enum": [
            "16:9",
            "9:16",
            "1:1"
          ],
          "default": "16:9",
          "x-order": 3
        },
        "movement_amplitude": {
          "type": "string",
          "title": "Movement Amplitude",
          "description": "The movement amplitude of objects in the frame",
          "enum": [
            "auto",
            "small",
            "medium",
            "large"
          ],
          "default": "auto",
          "x-order": 4
        }
      }
    }
  },
  "videogen/vidu_se2v": {
    "name": "videogen/vidu_se2v",
    "schema": {
      "type": "object",
      "title": "Input",
      "required": [
        "prompt",
        "start_image_url",
        "end_image_url"
      ],
      "translatable": [
        "prompt"
      ],
      "speech_enabled": [
        "prompt"
      ],
      "linkto": {
        "*": "*"
      },
      "map": {
        "prompt": "prompt",
        "start_image_url": "image",
        "end_image_url": "end_image"
      },
      "properties": {
        "prompt": {
          "type": "string",
          "title": "Prompt",
          "description": "Text prompt for video generation, max 1500 characters",
          "maxLength": 1500,
          "x-order": 0
        },
        "start_image_url": {
          "type": "string",
          "title": "Start Image URL",
          "description": "URL of the image to use as the first frame",
          "format": "uri",
          "fileType": "image",
          "x-order": 1
        },
        "end_image_url": {
          "type": "string",
          "title": "End Image URL",
          "description": "URL of the image to use as the last frame",
          "format": "uri",
          "fileType": "image",
          "x-order": 2
        },
        "seed": {
          "type": "integer",
          "title": "Seed",
          "description": "Random seed for generation",
          "x-order": 3
        },
        "movement_amplitude": {
          "type": "string",
          "title": "Movement Amplitude",
          "description": "The movement amplitude of objects in the frame",
          "enum": [
            "auto",
            "small",
            "medium",
            "large"
          ],
          "default": "auto",
          "x-order": 4
        }
      }
    }
  },
  "videogen/framepack": {
    "name": "videogen/framepack",
    "schema": {
      "type": "object",
      "title": "Input",
      "required": [
        "input_image",
        "prompt"
      ],
      "translatable": [
        "prompt"
      ],
      "speech_enabled": [
        "prompt"
      ],
      "linkto": {
        "*": "*"
      },
      "map": {
        "prompt": "prompt",
        "input_image": "image",
        "negative_prompt": "negative_prompt"
      },
      "properties": {
        "seed": {
          "type": "integer",
          "title": "Seed",
          "x-order": 3,
          "description": "Set for consistent results or leave empty for random"
        },
        "steps": {
          "type": "integer",
          "title": "Steps",
          "default": 25,
          "maximum": 50,
          "minimum": 1,
          "x-order": 6,
          "description": "More steps give higher quality but take longer"
        },
        "prompt": {
          "type": "string",
          "title": "Prompt",
          "x-order": 1,
          "description": "Text description of what you want in the video"
        },
        "mp4_crf": {
          "type": "integer",
          "title": "Mp4 Crf",
          "default": 23,
          "maximum": 51,
          "minimum": 0,
          "x-order": 11,
          "description": "Controls video compression - lower values give better quality but larger files"
        },
        "cfg_scale": {
          "type": "number",
          "title": "Cfg Scale",
          "default": 1,
          "maximum": 32,
          "minimum": 1,
          "x-order": 7,
          "description": "Higher values follow the prompt more closely, lower values are more creative"
        },
        "cfg_rescale": {
          "type": "number",
          "title": "Cfg Rescale",
          "default": 0,
          "maximum": 1,
          "minimum": 0,
          "x-order": 9,
          "description": "Reduces oversaturation at high CFG values"
        },
        "input_image": {
          "type": "string",
          "title": "Input Image",
          "format": "uri",
          "fileType": "image",
          "x-order": 0,
          "description": "Initial image to start the video from"
        },
        "use_teacache": {
          "type": "boolean",
          "title": "Use Teacache",
          "default": true,
          "x-order": 10,
          "description": "Makes generation faster with minimal quality impact"
        },
        "negative_prompt": {
          "type": "string",
          "title": "Negative Prompt",
          "default": "",
          "x-order": 2,
          "description": "Things you want to avoid in the video"
        },
        "latent_window_size": {
          "type": "integer",
          "title": "Latent Window Size",
          "default": 9,
          "maximum": 16,
          "minimum": 1,
          "x-order": 5,
          "description": "Controls how video chunks are processed - smaller is faster but may reduce quality"
        },
        "distilled_cfg_scale": {
          "type": "number",
          "title": "Distilled Cfg Scale",
          "default": 10,
          "maximum": 32,
          "minimum": 1,
          "x-order": 8,
          "description": "Controls prompt adherence for distilled model components"
        },
        "total_video_length_seconds": {
          "type": "number",
          "title": "Total Video Length Seconds",
          "default": 3,
          "maximum": 30,
          "minimum": 1,
          "x-order": 4,
          "description": "How long the video should be in seconds"
        }
      }
    }
  },
  "videogen/pixverse_effects": {
    "name": "videogen/pixverse_effects",
    "schema": {
      "type": "object",
      "title": "Input",
      "linkto": {
        "*": "*"
      },
      "map": {
        "prompt": "prompt",
        "image_url": "image",
        "negative_prompt": "negative_prompt"
      },
      "required": [
        "effect"
      ],
      "translatable": [
        "negative_prompt"
      ],
      "speech_enabled": [
        "negative_prompt"
      ],
      "properties": {
        "effect": {
          "type": "string",
          "title": "Effect",
          "description": "The effect to apply to the video",
          "enum": [
            "Kiss Me AI",
            "Kiss",
            "Muscle Surge",
            "Warmth of Jesus",
            "Anything",
            "Robot",
            "The Tiger Touch",
            "Hug",
            "Holy Wings",
            "Hulk",
            "Venom"
          ],
          "x-order": 0
        },
        "image_url": {
          "type": "string",
          "title": "Image URL",
          "description": "Optional URL of the image to use as the first frame. If not provided, generates from text",
          "format": "uri",
          "fileType": "image",
          "x-order": 1
        },
        "resolution": {
          "type": "string",
          "title": "Resolution",
          "description": "The resolution of the generated video",
          "default": "720p",
          "enum": [
            "360p",
            "540p",
            "720p",
            "1080p"
          ],
          "x-order": 2
        },
        "duration": {
          "type": "string",
          "title": "Duration",
          "description": "The duration of the generated video in seconds",
          "default": "5",
          "enum": [
            "5",
            "8"
          ],
          "x-order": 3
        },
        "negative_prompt": {
          "type": "string",
          "title": "Negative Prompt",
          "description": "Negative prompt to be used for the generation",
          "default": "",
          "x-order": 4
        },
        "style": {
          "type": "string",
          "title": "Style",
          "description": "The style of the generated video",
          "enum": [
            "anime",
            "3d_animation",
            "clay",
            "comic",
            "cyberpunk"
          ],
          "x-order": 5
        },
        "seed": {
          "type": "integer",
          "title": "Seed",
          "description": "The same seed and the same prompt given to the same version of the model will output the same video every time",
          "x-order": 6
        }
      }
    }
  },
  "videogen/pixverse_i2v": {
    "name": "videogen/pixverse_i2v",
    "schema": {
      "type": "object",
      "title": "Input",
      "linkto": {
        "*": "*"
      },
      "map": {
        "prompt": "prompt",
        "image_url": "image",
        "negative_prompt": "negative_prompt"
      },
      "required": [
        "prompt",
        "image_url"
      ],
      "translatable": [
        "prompt",
        "negative_prompt"
      ],
      "speech_enabled": [
        "prompt",
        "negative_prompt"
      ],
      "properties": {
        "prompt": {
          "type": "string",
          "title": "Prompt",
          "description": "Text prompt describing what to generate",
          "x-order": 0
        },
        "aspect_ratio": {
          "type": "string",
          "title": "Aspect Ratio",
          "description": "The aspect ratio of the generated video",
          "default": "16:9",
          "enum": [
            "16:9",
            "4:3",
            "1:1",
            "3:4",
            "9:16"
          ],
          "x-order": 1
        },
        "resolution": {
          "type": "string",
          "title": "Resolution",
          "description": "The resolution of the generated video",
          "default": "720p",
          "enum": [
            "360p",
            "540p",
            "720p",
            "1080p"
          ],
          "x-order": 2
        },
        "duration": {
          "type": "string",
          "title": "Duration",
          "description": "The duration of the generated video in seconds. 8s videos cost double. 1080p videos are limited to 5 seconds",
          "default": "5",
          "enum": [
            "5",
            "8"
          ],
          "x-order": 3
        },
        "negative_prompt": {
          "type": "string",
          "title": "Negative Prompt",
          "description": "Negative prompt to be used for the generation",
          "default": "",
          "x-order": 4
        },
        "style": {
          "type": "string",
          "title": "Style",
          "description": "The style of the generated video",
          "enum": [
            "",
            "anime",
            "3d_animation",
            "clay",
            "comic",
            "cyberpunk"
          ],
          "x-order": 5
        },
        "seed": {
          "type": "integer",
          "title": "Seed",
          "description": "The same seed and the same prompt given to the same version of the model will output the same video every time",
          "x-order": 6
        },
        "image_url": {
          "type": "string",
          "title": "Image URL",
          "description": "URL of the image to use as the first frame",
          "format": "uri",
          "fileType": "image",
          "x-order": 7
        }
      }
    }
  },
  "videogen/pixverse_t2v": {
    "name": "videogen/pixverse_t2v",
    "schema": {
      "type": "object",
      "title": "Input",
      "linkto": {
        "*": "*"
      },
      "map": {
        "prompt": "prompt",
        "negative_prompt": "negative_prompt"
      },
      "required": [
        "prompt"
      ],
      "translatable": [
        "prompt",
        "negative_prompt"
      ],
      "speech_enabled": [
        "prompt",
        "negative_prompt"
      ],
      "properties": {
        "prompt": {
          "type": "string",
          "title": "Prompt",
          "description": "Text prompt describing what to generate",
          "x-order": 0
        },
        "aspect_ratio": {
          "type": "string",
          "title": "Aspect Ratio",
          "description": "The aspect ratio of the generated video",
          "default": "16:9",
          "enum": [
            "16:9",
            "4:3",
            "1:1",
            "3:4",
            "9:16"
          ],
          "x-order": 1
        },
        "resolution": {
          "type": "string",
          "title": "Resolution",
          "description": "The resolution of the generated video",
          "default": "720p",
          "enum": [
            "360p",
            "540p",
            "720p",
            "1080p"
          ],
          "x-order": 2
        },
        "duration": {
          "type": "string",
          "title": "Duration",
          "description": "The duration of the generated video in seconds. 8s videos cost double. 1080p videos are limited to 5 seconds",
          "default": "5",
          "enum": [
            "5",
            "8"
          ],
          "x-order": 3
        },
        "negative_prompt": {
          "type": "string",
          "title": "Negative Prompt",
          "description": "Negative prompt to be used for the generation",
          "default": "",
          "x-order": 4
        },
        "style": {
          "type": "string",
          "title": "Style",
          "description": "The style of the generated video",
          "enum": [
            "",
            "anime",
            "3d_animation",
            "clay",
            "comic",
            "cyberpunk"
          ],
          "x-order": 5
        },
        "seed": {
          "type": "integer",
          "title": "Seed",
          "description": "The same seed and the same prompt given to the same version of the model will output the same video every time",
          "x-order": 6
        }
      }
    }
  },
  "videogen/pixverse_i2v_fast": {
    "name": "videogen/pixverse_i2v_fast",
    "schema": {
      "type": "object",
      "title": "Input",
      "linkto": {
        "*": "*"
      },
      "map": {
        "prompt": "prompt",
        "image_url": "image",
        "negative_prompt": "negative_prompt"
      },
      "required": [
        "prompt",
        "image_url"
      ],
      "translatable": [
        "prompt",
        "negative_prompt"
      ],
      "speech_enabled": [
        "prompt",
        "negative_prompt"
      ],
      "properties": {
        "prompt": {
          "type": "string",
          "title": "Prompt",
          "description": "Text prompt describing what to generate",
          "x-order": 0
        },
        "aspect_ratio": {
          "type": "string",
          "title": "Aspect Ratio",
          "description": "The aspect ratio of the generated video",
          "default": "16:9",
          "enum": [
            "16:9",
            "4:3",
            "1:1",
            "3:4",
            "9:16"
          ],
          "x-order": 1
        },
        "resolution": {
          "type": "string",
          "title": "Resolution",
          "description": "The resolution of the generated video",
          "default": "720p",
          "enum": [
            "360p",
            "540p",
            "720p"
          ],
          "x-order": 2
        },
        "negative_prompt": {
          "type": "string",
          "title": "Negative Prompt",
          "description": "Negative prompt to be used for the generation",
          "default": "",
          "x-order": 4
        },
        "style": {
          "type": "string",
          "title": "Style",
          "description": "The style of the generated video",
          "enum": [
            "",
            "anime",
            "3d_animation",
            "clay",
            "comic",
            "cyberpunk"
          ],
          "x-order": 5
        },
        "seed": {
          "type": "integer",
          "title": "Seed",
          "description": "The same seed and the same prompt given to the same version of the model will output the same video every time",
          "x-order": 6
        },
        "image_url": {
          "type": "string",
          "title": "Image URL",
          "description": "URL of the image to use as the first frame",
          "format": "uri",
          "fileType": "image",
          "x-order": 7
        }
      }
    }
  },
  "videogen/pixverse_t2v_fast": {
    "name": "videogen/pixverse_t2v_fast",
    "schema": {
      "type": "object",
      "title": "Input",
      "linkto": {
        "*": "*"
      },
      "map": {
        "prompt": "prompt",
        "negative_prompt": "negative_prompt"
      },
      "required": [
        "prompt"
      ],
      "translatable": [
        "prompt",
        "negative_prompt"
      ],
      "speech_enabled": [
        "prompt",
        "negative_prompt"
      ],
      "properties": {
        "prompt": {
          "type": "string",
          "title": "Prompt",
          "description": "Text prompt describing what to generate",
          "x-order": 0
        },
        "aspect_ratio": {
          "type": "string",
          "title": "Aspect Ratio",
          "description": "The aspect ratio of the generated video",
          "default": "16:9",
          "enum": [
            "16:9",
            "4:3",
            "1:1",
            "3:4",
            "9:16"
          ],
          "x-order": 1
        },
        "resolution": {
          "type": "string",
          "title": "Resolution",
          "description": "The resolution of the generated video",
          "default": "720p",
          "enum": [
            "360p",
            "540p",
            "720p"
          ],
          "x-order": 2
        },
        "negative_prompt": {
          "type": "string",
          "title": "Negative Prompt",
          "description": "Negative prompt to be used for the generation",
          "default": "",
          "x-order": 4
        },
        "style": {
          "type": "string",
          "title": "Style",
          "description": "The style of the generated video",
          "enum": [
            "",
            "anime",
            "3d_animation",
            "clay",
            "comic",
            "cyberpunk"
          ],
          "x-order": 5
        },
        "seed": {
          "type": "integer",
          "title": "Seed",
          "description": "The same seed and the same prompt given to the same version of the model will output the same video every time",
          "x-order": 6
        }
      }
    }
  },
  "videogen/pixverse_transition": {
    "name": "videogen/pixverse_transition",
    "schema": {
      "type": "object",
      "title": "Input",
      "linkto": {
        "*": "*"
      },
      "map": {
        "prompt": "prompt",
        "first_image_url": "image",
        "last_image_url": "end_image"
      },
      "required": [
        "prompt",
        "first_image_url",
        "last_image_url"
      ],
      "translatable": [
        "prompt",
        "negative_prompt"
      ],
      "speech_enabled": [
        "prompt",
        "negative_prompt"
      ],
      "properties": {
        "prompt": {
          "type": "string",
          "title": "Prompt",
          "description": "The prompt for the transition",
          "x-order": 0
        },
        "aspect_ratio": {
          "type": "string",
          "title": "Aspect Ratio",
          "description": "The aspect ratio of the generated video",
          "default": "16:9",
          "enum": [
            "16:9",
            "4:3",
            "1:1",
            "3:4",
            "9:16"
          ],
          "x-order": 1
        },
        "resolution": {
          "type": "string",
          "title": "Resolution",
          "description": "The resolution of the generated video",
          "default": "720p",
          "enum": [
            "360p",
            "540p",
            "720p",
            "1080p"
          ],
          "x-order": 2
        },
        "duration": {
          "type": "string",
          "title": "Duration",
          "description": "The duration of the generated video in seconds",
          "default": "5",
          "enum": [
            "5",
            "8"
          ],
          "x-order": 3
        },
        "negative_prompt": {
          "type": "string",
          "title": "Negative Prompt",
          "description": "Negative prompt to be used for the generation",
          "default": "",
          "x-order": 4
        },
        "style": {
          "type": "string",
          "title": "Style",
          "description": "The style of the generated video",
          "enum": [
            "",
            "anime",
            "3d_animation",
            "clay",
            "comic",
            "cyberpunk"
          ],
          "x-order": 5
        },
        "seed": {
          "type": "integer",
          "title": "Seed",
          "description": "The same seed and the same prompt given to the same version of the model will output the same video every time",
          "x-order": 6
        },
        "first_image_url": {
          "type": "string",
          "title": "First Image URL",
          "description": "URL of the image to use as the first frame",
          "format": "uri",
          "fileType": "image",
          "x-order": 7
        },
        "last_image_url": {
          "type": "string",
          "title": "Last Image URL",
          "description": "URL of the image to use as the last frame",
          "format": "uri",
          "fileType": "image",
          "x-order": 8
        }
      }
    }
  },
  "videogen/pixverse_v4_i2v_fast": {
    "name": "videogen/pixverse_v4_i2v_fast",
    "schema": {
      "type": "object",
      "title": "Input",
      "linkto": {
        "*": "*"
      },
      "map": {
        "prompt": "prompt",
        "image_url": "image",
        "negative_prompt": "negative_prompt"
      },
      "required": [
        "prompt",
        "image_url"
      ],
      "translatable": [
        "prompt",
        "negative_prompt"
      ],
      "speech_enabled": [
        "prompt",
        "negative_prompt"
      ],
      "properties": {
        "prompt": {
          "type": "string",
          "title": "Prompt",
          "description": "Text prompt describing what to generate",
          "x-order": 0
        },
        "aspect_ratio": {
          "type": "string",
          "title": "Aspect Ratio",
          "description": "The aspect ratio of the generated video",
          "default": "16:9",
          "enum": [
            "16:9",
            "4:3",
            "1:1",
            "3:4",
            "9:16"
          ],
          "x-order": 1
        },
        "resolution": {
          "type": "string",
          "title": "Resolution",
          "description": "The resolution of the generated video",
          "default": "720p",
          "enum": [
            "360p",
            "540p",
            "720p"
          ],
          "x-order": 2
        },
        "negative_prompt": {
          "type": "string",
          "title": "Negative Prompt",
          "description": "Negative prompt to be used for the generation",
          "default": "",
          "x-order": 4
        },
        "style": {
          "type": "string",
          "title": "Style",
          "description": "The style of the generated video",
          "enum": [
            "",
            "anime",
            "3d_animation",
            "clay",
            "comic",
            "cyberpunk"
          ],
          "x-order": 5
        },
        "seed": {
          "type": "integer",
          "title": "Seed",
          "description": "The same seed and the same prompt given to the same version of the model will output the same video every time",
          "x-order": 6
        },
        "image_url": {
          "type": "string",
          "title": "Image URL",
          "description": "URL of the image to use as the first frame",
          "format": "uri",
          "fileType": "image",
          "x-order": 7
        }
      }
    }
  },
  "videogen/pixverse_v4_t2v_fast": {
    "name": "videogen/pixverse_v4_t2v_fast",
    "schema": {
      "type": "object",
      "title": "Input",
      "linkto": {
        "*": "*"
      },
      "map": {
        "prompt": "prompt",
        "negative_prompt": "negative_prompt"
      },
      "required": [
        "prompt"
      ],
      "translatable": [
        "prompt",
        "negative_prompt"
      ],
      "speech_enabled": [
        "prompt",
        "negative_prompt"
      ],
      "properties": {
        "prompt": {
          "type": "string",
          "title": "Prompt",
          "description": "Text prompt describing what to generate",
          "x-order": 0
        },
        "aspect_ratio": {
          "type": "string",
          "title": "Aspect Ratio",
          "description": "The aspect ratio of the generated video",
          "default": "16:9",
          "enum": [
            "16:9",
            "4:3",
            "1:1",
            "3:4",
            "9:16"
          ],
          "x-order": 1
        },
        "resolution": {
          "type": "string",
          "title": "Resolution",
          "description": "The resolution of the generated video",
          "default": "720p",
          "enum": [
            "360p",
            "540p",
            "720p"
          ],
          "x-order": 2
        },
        "negative_prompt": {
          "type": "string",
          "title": "Negative Prompt",
          "description": "Negative prompt to be used for the generation",
          "default": "",
          "x-order": 4
        },
        "style": {
          "type": "string",
          "title": "Style",
          "description": "The style of the generated video",
          "enum": [
            "",
            "anime",
            "3d_animation",
            "clay",
            "comic",
            "cyberpunk"
          ],
          "x-order": 5
        },
        "seed": {
          "type": "integer",
          "title": "Seed",
          "description": "The same seed and the same prompt given to the same version of the model will output the same video every time",
          "x-order": 6
        }
      }
    }
  },
  "videogen/pixverse_v4_t2v": {
    "name": "videogen/pixverse_v4_t2v",
    "schema": {
      "type": "object",
      "title": "Input",
      "linkto": {
        "*": "*"
      },
      "map": {
        "prompt": "prompt",
        "negative_prompt": "negative_prompt"
      },
      "required": [
        "prompt"
      ],
      "translatable": [
        "prompt",
        "negative_prompt"
      ],
      "speech_enabled": [
        "prompt",
        "negative_prompt"
      ],
      "properties": {
        "prompt": {
          "type": "string",
          "title": "Prompt",
          "description": "Text prompt describing what to generate",
          "x-order": 0
        },
        "aspect_ratio": {
          "type": "string",
          "title": "Aspect Ratio",
          "description": "The aspect ratio of the generated video",
          "default": "16:9",
          "enum": [
            "16:9",
            "4:3",
            "1:1",
            "3:4",
            "9:16"
          ],
          "x-order": 1
        },
        "resolution": {
          "type": "string",
          "title": "Resolution",
          "description": "The resolution of the generated video",
          "default": "720p",
          "enum": [
            "360p",
            "540p",
            "720p",
            "1080p"
          ],
          "x-order": 2
        },
        "duration": {
          "type": "string",
          "title": "Duration",
          "description": "The duration of the generated video in seconds. 8s videos cost double. 1080p videos are limited to 5 seconds",
          "default": "5",
          "enum": [
            "5",
            "8"
          ],
          "x-order": 3
        },
        "negative_prompt": {
          "type": "string",
          "title": "Negative Prompt",
          "description": "Negative prompt to be used for the generation",
          "default": "",
          "x-order": 4
        },
        "style": {
          "type": "string",
          "title": "Style",
          "description": "The style of the generated video",
          "enum": [
            "",
            "anime",
            "3d_animation",
            "clay",
            "comic",
            "cyberpunk"
          ],
          "x-order": 5
        },
        "seed": {
          "type": "integer",
          "title": "Seed",
          "description": "The same seed and the same prompt given to the same version of the model will output the same video every time",
          "x-order": 6
        }
      }
    }
  },
  "videogen/pixverse_v4_i2v": {
    "name": "videogen/pixverse_v4_i2v",
    "schema": {
      "type": "object",
      "title": "Input",
      "linkto": {
        "*": "*"
      },
      "map": {
        "prompt": "prompt",
        "image_url": "image",
        "negative_prompt": "negative_prompt"
      },
      "required": [
        "prompt",
        "image_url"
      ],
      "translatable": [
        "prompt",
        "negative_prompt"
      ],
      "speech_enabled": [
        "prompt",
        "negative_prompt"
      ],
      "properties": {
        "prompt": {
          "type": "string",
          "title": "Prompt",
          "description": "Text prompt describing what to generate",
          "x-order": 0
        },
        "aspect_ratio": {
          "type": "string",
          "title": "Aspect Ratio",
          "description": "The aspect ratio of the generated video",
          "default": "16:9",
          "enum": [
            "16:9",
            "4:3",
            "1:1",
            "3:4",
            "9:16"
          ],
          "x-order": 1
        },
        "resolution": {
          "type": "string",
          "title": "Resolution",
          "description": "The resolution of the generated video",
          "default": "720p",
          "enum": [
            "360p",
            "540p",
            "720p",
            "1080p"
          ],
          "x-order": 2
        },
        "duration": {
          "type": "string",
          "title": "Duration",
          "description": "The duration of the generated video in seconds. 8s videos cost double. 1080p videos are limited to 5 seconds",
          "default": "5",
          "enum": [
            "5",
            "8"
          ],
          "x-order": 3
        },
        "negative_prompt": {
          "type": "string",
          "title": "Negative Prompt",
          "description": "Negative prompt to be used for the generation",
          "default": "",
          "x-order": 4
        },
        "style": {
          "type": "string",
          "title": "Style",
          "description": "The style of the generated video",
          "enum": [
            "",
            "anime",
            "3d_animation",
            "clay",
            "comic",
            "cyberpunk"
          ],
          "x-order": 5
        },
        "seed": {
          "type": "integer",
          "title": "Seed",
          "description": "The same seed and the same prompt given to the same version of the model will output the same video every time",
          "x-order": 6
        },
        "image_url": {
          "type": "string",
          "title": "Image URL",
          "description": "URL of the image to use as the first frame",
          "format": "uri",
          "fileType": "image",
          "x-order": 7
        }
      }
    }
  },
  "videogen/pixverse_v4_5": {
    "name": "videogen/pixverse_v4_5",
    "schema": {
      "type": "object",
      "title": "Input",
      "required": [
        "prompt"
      ],
      "translatable": [
        "prompt"
      ],
      "speech_enabled": [
        "prompt"
      ],
      "linkto": {
        "*": "*"
      },
      "map": {
        "prompt": "prompt",
        "image": "image",
        "last_frame_image": "end_image"
      },
      "properties": {
        "seed": {
          "type": "integer",
          "title": "Seed",
          "x-order": 8,
          "description": "Random seed. Set for reproducible generation"
        },
        "image": {
          "type": "string",
          "title": "Image",
          "format": "uri",
          "fileType": "image",
          "x-order": 1,
          "description": "Image to use for the first frame of the video"
        },
        "style": {
          "enum": [
            "None",
            "anime",
            "3d_animation",
            "clay",
            "cyberpunk",
            "comic"
          ],
          "type": "string",
          "title": "style",
          "description": "Style of the video",
          "default": "None",
          "x-order": 9
        },
        "effect": {
          "enum": [
            "None",
            "Let's YMCA!",
            "Subject 3 Fever",
            "Ghibli Live!",
            "Suit Swagger",
            "Muscle Surge",
            "360° Microwave",
            "Warmth of Jesus",
            "Emergency Beat",
            "Anything, Robot",
            "Kungfu Club",
            "Mint in Box",
            "Retro Anime Pop",
            "Vogue Walk",
            "Mega Dive",
            "Evil Trigger"
          ],
          "type": "string",
          "title": "effect",
          "description": "Special effect to apply to the video",
          "default": "None",
          "x-order": 10
        },
        "prompt": {
          "type": "string",
          "title": "Prompt",
          "x-order": 0,
          "description": "Text prompt for video generation"
        },
        "quality": {
          "enum": [
            "360p",
            "540p",
            "720p",
            "1080p"
          ],
          "type": "string",
          "title": "quality",
          "description": "Resolution of the video.",
          "default": "540p",
          "x-order": 3
        },
        "duration": {
          "enum": [
            5,
            8
          ],
          "type": "integer",
          "title": "duration",
          "description": "Duration of the video in seconds. 8 second videos cost twice as much as 5 second videos. (1080p does not support 8 second duration)",
          "default": 5,
          "x-order": 5
        },
        "motion_mode": {
          "enum": [
            "normal",
            "smooth"
          ],
          "type": "string",
          "title": "motion_mode",
          "description": "Motion mode for the video. Smooth videos generate more frames, so they cost twice as much. (smooth is only available when using a 5 second duration, 1080p does not support smooth motion)",
          "default": "normal",
          "x-order": 6
        },
        "aspect_ratio": {
          "enum": [
            "16:9",
            "9:16",
            "1:1"
          ],
          "type": "string",
          "title": "aspect_ratio",
          "description": "Aspect ratio of the video",
          "default": "16:9",
          "x-order": 4
        },
        "negative_prompt": {
          "type": "string",
          "title": "Negative Prompt",
          "default": "",
          "x-order": 7,
          "description": "Negative prompt to avoid certain elements in the video"
        },
        "last_frame_image": {
          "type": "string",
          "title": "Last Frame Image",
          "format": "uri",
          "fileType": "image",
          "x-order": 2,
          "description": "Use to generate a video that transitions from the first image to the last image. Must be used with image."
        },
        "sound_effect_switch": {
          "type": "boolean",
          "title": "Sound Effect Switch",
          "default": false,
          "x-order": 11,
          "description": "Enable background music or sound effects"
        },
        "sound_effect_content": {
          "type": "string",
          "title": "Sound Effect Content",
          "x-order": 12,
          "description": "Sound effect prompt. If not given, a random sound effect will be generated."
        }
      }
    }
  },
  "videogen/pixverse_extend_video": {
    "name": "videogen/pixverse_extend_video",
    "schema": {
      "type": "object",
      "title": "Pixverse Video Extension Input",
      "required": [
        "video_url"
      ],
      "translatable": [
        "prompt",
        "negative_prompt"
      ],
      "speech_enabled": [
        "prompt",
        "negative_prompt"
      ],
      "linkto": {
        "*": "*"
      },
      "map": {
        "prompt": "prompt",
        "video_url": "video"
      },
      "properties": {
        "video_url": {
          "type": "string",
          "title": "Video URL",
          "fileType": "video",
          "description": "URL of the input video to extend",
          "format": "uri",
          "x-order": 0
        },
        "prompt": {
          "type": "string",
          "title": "Prompt",
          "description": "Prompt describing how to extend the video",
          "x-order": 1
        },
        "negative_prompt": {
          "type": "string",
          "title": "Negative Prompt",
          "description": "Negative prompt to be used for the generation",
          "default": "",
          "x-order": 2
        },
        "style": {
          "type": "string",
          "title": "Style",
          "description": "The style of the extended video",
          "enum": [
            "",
            "anime",
            "3d_animation",
            "day",
            "cyberpunk",
            "comic"
          ],
          "x-order": 3
        },
        "resolution": {
          "type": "string",
          "title": "Resolution",
          "description": "The resolution of the generated video",
          "enum": [
            "360p",
            "540p",
            "720p",
            "1080p"
          ],
          "default": "720p",
          "x-order": 4
        },
        "duration": {
          "type": "string",
          "title": "Duration",
          "description": "The duration of the generated video in seconds. 1080p videos are limited to 5 seconds",
          "enum": [
            "5",
            "8"
          ],
          "default": "5",
          "x-order": 5
        },
        "model": {
          "type": "string",
          "title": "Model",
          "description": "The model version to use for generation",
          "enum": [
            "v3.5",
            "v4",
            "v4.5"
          ],
          "default": "v4.5",
          "x-order": 6
        },
        "seed": {
          "type": "integer",
          "title": "Seed",
          "description": "Random seed for generation",
          "x-order": 7
        }
      }
    }
  },
  "videogen/magi_i2v": {
    "name": "videogen/magi_i2v",
    "schema": {
      "type": "object",
      "title": "Input",
      "required": [
        "prompt",
        "image_url"
      ],
      "translatable": [
        "prompt"
      ],
      "speech_enabled": [
        "prompt"
      ],
      "linkto": {
        "*": "*"
      },
      "map": {
        "prompt": "prompt",
        "image_url": "image"
      },
      "properties": {
        "prompt": {
          "type": "string",
          "title": "Prompt",
          "description": "The text prompt to guide video generation",
          "x-order": 0
        },
        "image_url": {
          "type": "string",
          "title": "Image URL",
          "description": "URL of the input image to represent the first frame of the video. If the input image does not match the chosen aspect ratio, it is resized and center cropped.",
          "format": "uri",
          "fileType": "image",
          "x-order": 1
        },
        "num_frames": {
          "type": "integer",
          "title": "Number of Frames",
          "description": "Number of frames to generate. Must be between 96 and 192 (inclusive). Each additional 24 frames beyond 96 incurs an additional billing unit",
          "minimum": 96,
          "maximum": 192,
          "default": 96,
          "x-order": 2
        },
        "frames_per_second": {
          "type": "integer",
          "title": "Frames Per Second",
          "description": "Frames per second of the generated video. Must be between 5 to 30",
          "minimum": 5,
          "maximum": 30,
          "default": 24,
          "x-order": 4
        },
        "seed": {
          "type": "integer",
          "title": "Seed",
          "description": "Random seed for reproducibility. If None, a random seed is chosen",
          "x-order": 5
        },
        "resolution": {
          "type": "string",
          "title": "Resolution",
          "description": "Resolution of the generated video (480p or 720p). 480p is 0.5 billing units, and 720p is 1 billing unit",
          "enum": [
            "480p",
            "720p"
          ],
          "default": "720p",
          "x-order": 6
        },
        "enable_safety_checker": {
          "type": "boolean",
          "title": "Enable Safety Checker",
          "description": "If set to true, the safety checker will be enabled",
          "default": true,
          "x-order": 7
        },
        "aspect_ratio": {
          "type": "string",
          "title": "Aspect Ratio",
          "description": "Aspect ratio of the generated video. If 'auto', the aspect ratio will be determined automatically based on the input image",
          "enum": [
            "auto",
            "16:9",
            "9:16",
            "1:1"
          ],
          "default": "auto",
          "x-order": 8
        }
      }
    }
  },
  "videogen/magi_t2v": {
    "name": "videogen/magi_t2v",
    "schema": {
      "type": "object",
      "title": "Input",
      "required": [
        "prompt"
      ],
      "translatable": [
        "prompt"
      ],
      "speech_enabled": [
        "prompt"
      ],
      "linkto": {
        "*": "*"
      },
      "map": {
        "prompt": "prompt",
        "negative_prompt": "negative_prompt"
      },
      "properties": {
        "prompt": {
          "type": "string",
          "title": "Prompt",
          "description": "The text prompt to guide video generation",
          "x-order": 0
        },
        "num_frames": {
          "type": "integer",
          "title": "Number of Frames",
          "description": "Number of frames to generate. Must be between 96 and 192 (inclusive). Each additional 24 frames beyond 96 incurs an additional billing unit",
          "minimum": 96,
          "maximum": 192,
          "default": 96,
          "x-order": 2
        },
        "frames_per_second": {
          "type": "integer",
          "title": "Frames Per Second",
          "description": "Frames per second of the generated video. Must be between 5 to 30",
          "minimum": 5,
          "maximum": 30,
          "default": 24,
          "x-order": 4
        },
        "seed": {
          "type": "integer",
          "title": "Seed",
          "description": "Random seed for reproducibility. If None, a random seed is chosen",
          "x-order": 5
        },
        "resolution": {
          "type": "string",
          "title": "Resolution",
          "description": "Resolution of the generated video (480p or 720p). 480p is 0.5 billing units, and 720p is 1 billing unit",
          "enum": [
            "480p",
            "720p"
          ],
          "default": "720p",
          "x-order": 6
        },
        "enable_safety_checker": {
          "type": "boolean",
          "title": "Enable Safety Checker",
          "description": "If set to true, the safety checker will be enabled",
          "default": true,
          "x-order": 7
        },
        "aspect_ratio": {
          "type": "string",
          "title": "Aspect Ratio",
          "description": "Aspect ratio of the generated video. If 'auto', the aspect ratio will be determined automatically based on the input image",
          "enum": [
            "auto",
            "16:9",
            "9:16",
            "1:1"
          ],
          "default": "auto",
          "x-order": 8
        }
      }
    }
  },
  "videogen/magi_extend": {
    "name": "videogen/magi_extend",
    "schema": {
      "type": "object",
      "title": "Input",
      "required": [
        "prompt",
        "video_url"
      ],
      "translatable": [
        "prompt"
      ],
      "speech_enabled": [
        "prompt"
      ],
      "linkto": {
        "*": "*"
      },
      "map": {
        "prompt": "prompt",
        "video_url": "video"
      },
      "properties": {
        "prompt": {
          "type": "string",
          "title": "Prompt",
          "description": "The text prompt to guide video generation",
          "x-order": 0
        },
        "video_url": {
          "type": "string",
          "title": "Video URL",
          "description": "URL of the input video to represent the beginning of the video. If the input video does not match the chosen aspect ratio, it is resized and center cropped",
          "format": "uri",
          "fileType": "video",
          "x-order": 1
        },
        "num_frames": {
          "type": "integer",
          "title": "Number of Frames",
          "description": "Number of frames to generate. Must be between 96 and 192 (inclusive). Each additional 24 frames beyond 96 incurs an additional billing unit",
          "minimum": 96,
          "maximum": 192,
          "default": 96,
          "x-order": 2
        },
        "start_frame": {
          "type": "integer",
          "title": "Start Frame",
          "description": "The frame to begin the generation from, with the remaining frames will be treated as the prefix video. The final video will contain the frames up until this number unchanged, followed by the generated frames",
          "x-order": 3
        },
        "frames_per_second": {
          "type": "integer",
          "title": "Frames Per Second",
          "description": "Frames per second of the generated video. Must be between 5 to 30",
          "minimum": 5,
          "maximum": 30,
          "default": 24,
          "x-order": 4
        },
        "seed": {
          "type": "integer",
          "title": "Seed",
          "description": "Random seed for reproducibility. If None, a random seed is chosen",
          "x-order": 5
        },
        "resolution": {
          "type": "string",
          "title": "Resolution",
          "description": "Resolution of the generated video (480p or 720p). 480p is 0.5 billing units, and 720p is 1 billing unit",
          "enum": [
            "480p",
            "720p"
          ],
          "default": "720p",
          "x-order": 6
        },
        "enable_safety_checker": {
          "type": "boolean",
          "title": "Enable Safety Checker",
          "description": "If set to true, the safety checker will be enabled",
          "default": true,
          "x-order": 7
        },
        "aspect_ratio": {
          "type": "string",
          "title": "Aspect Ratio",
          "description": "Aspect ratio of the generated video. If 'auto', the aspect ratio will be determined automatically based on the input image",
          "enum": [
            "auto",
            "16:9",
            "9:16",
            "1:1"
          ],
          "default": "auto",
          "x-order": 8
        }
      }
    }
  },
  "videogen/vidu_q1_i2v": {
    "name": "videogen/vidu_q1_i2v",
    "schema": {
      "type": "object",
      "title": "Input",
      "required": [
        "prompt",
        "image_url"
      ],
      "translatable": [
        "prompt"
      ],
      "speech_enabled": [
        "prompt"
      ],
      "linkto": {
        "*": "*"
      },
      "map": {
        "prompt": "prompt",
        "image_url": "image"
      },
      "properties": {
        "prompt": {
          "type": "string",
          "title": "Prompt",
          "maxLength": 1500,
          "x-order": 0,
          "description": "Text prompt for video generation"
        },
        "image_url": {
          "type": "string",
          "title": "Image URL",
          "format": "uri",
          "fileType": "image",
          "x-order": 1,
          "description": "URL of the image to use as the first frame"
        },
        "seed": {
          "type": "integer",
          "title": "Seed",
          "default": 0,
          "x-order": 2,
          "description": "Seed for the random number generator"
        },
        "movement_amplitude": {
          "type": "string",
          "title": "Movement Amplitude",
          "enum": [
            "auto",
            "small",
            "medium",
            "large"
          ],
          "default": "auto",
          "x-order": 3,
          "description": "The movement amplitude of objects in the frame"
        }
      }
    }
  },
  "videogen/vidu_q1_t2v": {
    "name": "videogen/vidu_q1_t2v",
    "schema": {
      "type": "object",
      "title": "Input",
      "required": [
        "prompt"
      ],
      "translatable": [
        "prompt"
      ],
      "speech_enabled": [
        "prompt"
      ],
      "linkto": {
        "*": "*"
      },
      "map": {
        "prompt": "prompt"
      },
      "properties": {
        "prompt": {
          "type": "string",
          "title": "Prompt",
          "maxLength": 1500,
          "x-order": 0,
          "description": "Text prompt for video generation"
        },
        "seed": {
          "type": "integer",
          "title": "Seed",
          "default": 0,
          "x-order": 2,
          "description": "Seed for the random number generator"
        },
        "style": {
          "type": "string",
          "title": "Style",
          "enum": [
            "general",
            "anime"
          ],
          "default": "general",
          "x-order": 1,
          "description": "Style of the video generation"
        },
        "aspect_ratio": {
          "type": "string",
          "title": "Aspect Ratio",
          "enum": [
            "16:9",
            "9:16",
            "1:1"
          ],
          "default": "16:9",
          "x-order": 3,
          "description": "Aspect ratio of the video generation"
        },
        "movement_amplitude": {
          "type": "string",
          "title": "Movement Amplitude",
          "enum": [
            "auto",
            "small",
            "medium",
            "large"
          ],
          "default": "auto",
          "x-order": 4,
          "description": "The movement amplitude of objects in the frame"
        }
      }
    }
  },
  "videogen/vidu_q1_se2v": {
    "name": "videogen/vidu_q1_se2v",
    "schema": {
      "type": "object",
      "title": "Input",
      "required": [
        "prompt",
        "start_image_url",
        "end_image_url"
      ],
      "translatable": [
        "prompt"
      ],
      "speech_enabled": [
        "prompt"
      ],
      "linkto": {
        "*": "*"
      },
      "map": {
        "prompt": "prompt",
        "start_image_url": "image",
        "end_image_url": "end_image"
      },
      "properties": {
        "prompt": {
          "type": "string",
          "title": "Prompt",
          "maxLength": 1500,
          "x-order": 0,
          "description": "Text prompt for video generation"
        },
        "start_image_url": {
          "type": "string",
          "title": "Start Image URL",
          "format": "uri",
          "fileType": "image",
          "x-order": 1,
          "description": "URL of the image to use as the first frame"
        },
        "end_image_url": {
          "type": "string",
          "title": "End Image URL",
          "format": "uri",
          "fileType": "image",
          "x-order": 2,
          "description": "URL of the image to use as the last frame"
        },
        "seed": {
          "type": "integer",
          "title": "Seed",
          "default": 0,
          "x-order": 3,
          "description": "Seed for the random number generator"
        },
        "movement_amplitude": {
          "type": "string",
          "title": "Movement Amplitude",
          "enum": [
            "auto",
            "small",
            "medium",
            "large"
          ],
          "default": "auto",
          "x-order": 4,
          "description": "The movement amplitude of objects in the frame"
        }
      }
    }
  },
  "videogen/vidu_q1_r2v": {
    "name": "videogen/vidu_q1_r2v",
    "schema": {
      "type": "object",
      "title": "Input",
      "required": [
        "prompt",
        "start_image_url",
        "end_image_url"
      ],
      "translatable": [
        "prompt"
      ],
      "speech_enabled": [
        "prompt"
      ],
      "linkto": {
        "*": "*"
      },
      "map": {
        "prompt": "prompt"
      },
      "properties": {
        "prompt": {
          "type": "string",
          "title": "Prompt",
          "maxLength": 1500,
          "x-order": 0,
          "description": "Text prompt for video generation. Max: 1500 characters"
        },
        "reference_image_urls": {
          "type": "array",
          "items": {
            "type": "string",
            "format": "uri",
            "fileType": "image"
          },
          "title": "Reference Image URLs",
          "description": "URLs of the reference images to use for consistent subject appearance",
          "maxItems": 4,
          "x-order": 1
        },
        "seed": {
          "type": "integer",
          "title": "Seed",
          "default": 0,
          "x-order": 3,
          "description": "Seed for the random number generator"
        },
        "aspect_ratio": {
          "type": "string",
          "title": "Aspect Ratio",
          "enum": [
            "1:1",
            "16:9",
            "9:16"
          ],
          "default": "16:9",
          "x-order": 2,
          "description": "The aspect ratio of the video"
        },
        "movement_amplitude": {
          "type": "string",
          "title": "Movement Amplitude",
          "enum": [
            "auto",
            "small",
            "medium",
            "large"
          ],
          "default": "auto",
          "x-order": 4,
          "description": "The movement amplitude of objects in the frame"
        },
        "bgm": {
          "type": "boolean",
          "title": "Background Music",
          "default": true,
          "x-order": 5,
          "description": "Whether to add Background Music for the video"
        }
      }
    }
  },
  "videogen/vace_14b": {
    "name": "videogen/vace_14b",
    "schema": {
      "type": "object",
      "title": "Input",
      "required": [
        "prompt"
      ],
      "translatable": [
        "prompt"
      ],
      "speech_enabled": [
        "prompt"
      ],
      "linkto": {
        "*": "*"
      },
      "map": {
        "prompt": "prompt",
        "src_video": "video"
      },
      "properties": {
        "seed": {
          "type": "integer",
          "title": "Seed",
          "default": -1,
          "x-order": 7,
          "description": "Random seed (-1 for random)"
        },
        "size": {
          "enum": [
            "720*1280",
            "1280*720",
            "480*832",
            "832*480"
          ],
          "type": "string",
          "title": "size",
          "description": "Output resolution",
          "default": "832*480",
          "x-order": 6
        },
        "prompt": {
          "type": "string",
          "title": "Prompt",
          "x-order": 0,
          "description": "Prompt"
        },
        "src_mask": {
          "type": "string",
          "title": "Src Mask",
          "format": "uri",
          "x-order": 2,
          "description": "Input mask video to edit."
        },
        "frame_num": {
          "type": "integer",
          "title": "Frame Num",
          "default": 81,
          "x-order": 5,
          "description": "Number of frames to generate."
        },
        "src_video": {
          "type": "string",
          "title": "Src Video",
          "format": "uri",
          "fileType": "video",
          "x-order": 1,
          "description": "Input video to edit."
        },
        "speed_mode": {
          "enum": [
            "Lightly Juiced 🍊 (more consistent)",
            "Juiced 🔥 (more speed)",
            "Extra Juiced 🚀 (even more speed)"
          ],
          "type": "string",
          "title": "speed_mode",
          "description": "Speed optimization level",
          "default": "Lightly Juiced 🍊 (more consistent)",
          "x-order": 4
        },
        "sample_shift": {
          "type": "integer",
          "title": "Sample Shift",
          "default": 16,
          "x-order": 8,
          "description": "Sample shift"
        },
        "sample_steps": {
          "type": "integer",
          "title": "Sample Steps",
          "default": 50,
          "x-order": 10,
          "description": "Sample steps"
        },
        "sample_solver": {
          "enum": [
            "unipc",
            "dpm++"
          ],
          "type": "string",
          "title": "sample_solver",
          "description": "Sample solver",
          "default": "unipc",
          "x-order": 9
        },
        "src_ref_images": {
          "type": "array",
          "items": {
            "type": "string",
            "format": "uri"
          },
          "title": "Src Ref Images",
          "x-order": 3,
          "maxItems": 4,
          "description": "Input reference images to edit."
        },
        "sample_guide_scale": {
          "type": "number",
          "title": "Sample Guide Scale",
          "default": 5,
          "x-order": 11,
          "description": "Sample guide scale"
        }
      }
    }
  },
  "videogen/bytedance_seedance1_t2v": {
    "name": "videogen/bytedance_seedance1_t2v",
    "schema": {
      "type": "object",
      "title": "Input",
      "required": [
        "prompt"
      ],
      "map": {
        "prompt": "prompt"
      },
      "translatable": [
        "prompt"
      ],
      "speech_enabled": [
        "prompt"
      ],
      "linkto": {
        "*": "*"
      },
      "properties": {
        "prompt": {
          "type": "string",
          "title": "Prompt",
          "description": "The text prompt used to generate the video",
          "x-order": 0
        },
        "aspect_ratio": {
          "type": "string",
          "title": "Aspect Ratio",
          "description": "The aspect ratio of the generated video",
          "enum": [
            "21:9",
            "16:9",
            "4:3",
            "1:1",
            "3:4",
            "9:16",
            "auto"
          ],
          "default": "16:9",
          "x-order": 1
        },
        "resolution": {
          "type": "string",
          "title": "Resolution",
          "description": "Video resolution - 480p for faster generation, 720p for higher quality",
          "enum": [
            "480p",
            "720p"
          ],
          "default": "720p",
          "x-order": 2
        },
        "duration": {
          "type": "integer",
          "title": "Duration",
          "description": "Duration of the video in seconds",
          "enum": [
            5,
            10
          ],
          "default": 5,
          "x-order": 3
        },
        "camera_fixed": {
          "type": "boolean",
          "title": "Camera Fixed",
          "default": false,
          "description": "Whether to fix the camera position",
          "x-order": 4
        },
        "seed": {
          "type": "integer",
          "title": "Seed",
          "description": "Random seed to control video generation. Use -1 for random.",
          "x-order": 5
        }
      }
    }
  },
  "videogen/bytedance_seedance1_i2v": {
    "name": "videogen/bytedance_seedance1_i2v",
    "schema": {
      "type": "object",
      "title": "Input",
      "required": [
        "prompt",
        "image_url"
      ],
      "map": {
        "prompt": "prompt",
        "image_url": "image",
        "end_image_url": "end_image"
      },
      "translatable": [
        "prompt"
      ],
      "speech_enabled": [
        "prompt"
      ],
      "linkto": {
        "*": "*"
      },
      "properties": {
        "prompt": {
          "type": "string",
          "title": "Prompt",
          "description": "The text prompt used to generate the video",
          "x-order": 0
        },
        "image_url": {
          "type": "string",
          "title": "Image",
          "format": "uri",
          "fileType": "image",
          "description": "The image to use for the video",
          "x-order": 1
        },
        "end_image_url": {
          "type": "string",
          "title": "End Image",
          "format": "uri",
          "fileType": "image",
          "description": "The image to use for the end of the video",
          "x-order": 2
        },
        "aspect_ratio": {
          "type": "string",
          "title": "Aspect Ratio",
          "description": "The aspect ratio of the generated video",
          "enum": [
            "21:9",
            "16:9",
            "4:3",
            "1:1",
            "3:4",
            "9:16",
            "auto"
          ],
          "default": "16:9",
          "x-order": 3
        },
        "resolution": {
          "type": "string",
          "title": "Resolution",
          "description": "Video resolution - 480p for faster generation, 720p for higher quality",
          "enum": [
            "480p",
            "720p"
          ],
          "default": "720p",
          "x-order": 4
        },
        "duration": {
          "type": "integer",
          "title": "Duration",
          "description": "Duration of the video in seconds",
          "enum": [
            5,
            10
          ],
          "default": 5,
          "x-order": 5
        },
        "camera_fixed": {
          "type": "boolean",
          "title": "Camera Fixed",
          "default": false,
          "description": "Whether to fix the camera position",
          "x-order": 6
        },
        "seed": {
          "type": "integer",
          "title": "Seed",
          "description": "Random seed to control video generation. Use -1 for random.",
          "x-order": 7
        }
      }
    }
  },
  "videogen/bytedance_seedance1_pro_t2v": {
    "name": "videogen/bytedance_seedance1_pro_t2v",
    "schema": {
      "type": "object",
      "title": "Input",
      "required": [
        "prompt"
      ],
      "map": {
        "prompt": "prompt"
      },
      "translatable": [
        "prompt"
      ],
      "speech_enabled": [
        "prompt"
      ],
      "linkto": {
        "*": "*"
      },
      "properties": {
        "prompt": {
          "type": "string",
          "title": "Prompt",
          "description": "The text prompt used to generate the video",
          "x-order": 0
        },
        "aspect_ratio": {
          "type": "string",
          "title": "Aspect Ratio",
          "description": "The aspect ratio of the generated video",
          "enum": [
            "21:9",
            "16:9",
            "4:3",
            "1:1",
            "3:4",
            "9:16"
          ],
          "default": "16:9",
          "x-order": 2
        },
        "resolution": {
          "type": "string",
          "title": "Resolution",
          "description": "Video resolution - 480p for faster generation, 720p for higher quality",
          "enum": [
            "480p",
            "1080p"
          ],
          "default": "1080p",
          "x-order": 3
        },
        "duration": {
          "type": "integer",
          "title": "Duration",
          "description": "Duration of the video in seconds",
          "enum": [
            5,
            10
          ],
          "default": 5,
          "x-order": 4
        },
        "camera_fixed": {
          "type": "boolean",
          "title": "Camera Fixed",
          "default": false,
          "description": "Whether to fix the camera position",
          "x-order": 5
        },
        "seed": {
          "type": "integer",
          "title": "Seed",
          "description": "Random seed to control video generation. Use -1 for random.",
          "x-order": 6
        }
      }
    }
  },
  "videogen/bytedance_seedance1_pro_i2v": {
    "name": "videogen/bytedance_seedance1_pro_i2v",
    "schema": {
      "type": "object",
      "title": "Input",
      "required": [
        "prompt",
        "image_url"
      ],
      "map": {
        "prompt": "prompt",
        "image_url": "image"
      },
      "translatable": [
        "prompt"
      ],
      "speech_enabled": [
        "prompt"
      ],
      "linkto": {
        "*": "*"
      },
      "properties": {
        "prompt": {
          "type": "string",
          "title": "Prompt",
          "description": "The text prompt used to generate the video",
          "x-order": 0
        },
        "image_url": {
          "type": "string",
          "title": "Image",
          "format": "uri",
          "fileType": "image",
          "description": "The image to use for the video",
          "x-order": 1
        },
        "aspect_ratio": {
          "type": "string",
          "title": "Aspect Ratio",
          "description": "The aspect ratio of the generated video",
          "enum": [
            "21:9",
            "16:9",
            "4:3",
            "1:1",
            "3:4",
            "9:16"
          ],
          "default": "16:9",
          "x-order": 2
        },
        "resolution": {
          "type": "string",
          "title": "Resolution",
          "description": "Video resolution - 480p for faster generation, 720p for higher quality",
          "enum": [
            "480p",
            "1080p"
          ],
          "default": "1080p",
          "x-order": 3
        },
        "duration": {
          "type": "integer",
          "title": "Duration",
          "description": "Duration of the video in seconds",
          "enum": [
            5,
            10
          ],
          "default": 5,
          "x-order": 4
        },
        "camera_fixed": {
          "type": "boolean",
          "title": "Camera Fixed",
          "default": false,
          "description": "Whether to fix the camera position",
          "x-order": 5
        },
        "seed": {
          "type": "integer",
          "title": "Seed",
          "description": "Random seed to control video generation. Use -1 for random.",
          "x-order": 6
        },
        "end_image_url": {
          "type": "string",
          "title": "End Image",
          "format": "uri",
          "fileType": "image",
          "description": "The image to use for the end of the video",
          "x-order": 7
        }
      }
    }
  },
  "videogen/bytedance_seedance1_r2v": {
    "name": "videogen/bytedance_seedance1_r2v",
    "schema": {
      "type": "object",
      "title": "Input",
      "required": [
        "prompt",
        "reference_image_urls"
      ],
      "translatable": [
        "prompt"
      ],
      "speech_enabled": [
        "prompt"
      ],
      "linkto": {
        "*": "*"
      },
      "map": {
        "prompt": "prompt"
      },
      "properties": {
        "prompt": {
          "type": "string",
          "title": "Prompt",
          "description": "The text prompt used to generate the video",
          "x-order": 0
        },
        "resolution": {
          "type": "string",
          "title": "Resolution",
          "description": "Video resolution - 480p for faster generation, 720p for higher quality",
          "enum": [
            "480p",
            "720p"
          ],
          "default": "720p",
          "x-order": 1
        },
        "duration": {
          "type": "integer",
          "title": "Duration",
          "description": "Duration of the video in seconds",
          "enum": [
            3,
            4,
            5,
            6,
            7,
            8,
            9,
            10,
            11,
            12
          ],
          "default": 5,
          "x-order": 2
        },
        "camera_fixed": {
          "type": "boolean",
          "title": "Camera Fixed",
          "description": "Whether to fix the camera position",
          "x-order": 3
        },
        "seed": {
          "type": "integer",
          "title": "Seed",
          "description": "Random seed to control video generation. Use -1 for random.",
          "x-order": 4
        },
        "enable_safety_checker": {
          "type": "boolean",
          "title": "Enable Safety Checker",
          "description": "If set to true, the safety checker will be enabled.",
          "default": false,
          "display": "hidden",
          "x-order": 5
        },
        "reference_image_urls": {
          "type": "array",
          "title": "Reference Images",
          "description": "Reference images to generate the video with.",
          "maxItems": 4,
          "items": {
            "type": "string",
            "format": "uri",
            "fileType": "image"
          },
          "x-order": 6
        }
      }
    }
  },
  "videogen/minimax_hailuo2_pro_t2v": {
    "name": "videogen/minimax_hailuo2_pro_t2v",
    "schema": {
      "type": "object",
      "title": "Input",
      "required": [
        "prompt"
      ],
      "translatable": [
        "prompt"
      ],
      "speech_enabled": [
        "prompt"
      ],
      "linkto": {
        "*": "*"
      },
      "map": {
        "prompt": "prompt"
      },
      "properties": {
        "prompt": {
          "type": "string",
          "title": "Prompt",
          "description": "The prompt for video generation.",
          "x-order": 0
        },
        "duration": {
          "type": "string",
          "title": "Duration",
          "description": "The duration of the video in seconds. 10 seconds videos are not supported for 1080p resolution.",
          "enum": [
            "6",
            "10"
          ],
          "default": "6",
          "x-order": 1
        },
        "prompt_optimize": {
          "type": "boolean",
          "title": "Prompt Optimization",
          "description": "Whether to optimize the prompt for video generation.",
          "default": false,
          "display": "hidden",
          "x-order": 2
        }
      }
    }
  },
  "videogen/minimax_hailuo2_pro_i2v": {
    "name": "videogen/minimax_hailuo2_pro_i2v",
    "schema": {
      "type": "object",
      "title": "Input",
      "required": [
        "prompt",
        "image_url"
      ],
      "translatable": [
        "prompt"
      ],
      "speech_enabled": [
        "prompt"
      ],
      "linkto": {
        "*": "*"
      },
      "map": {
        "prompt": "prompt",
        "image_url": "image"
      },
      "properties": {
        "prompt": {
          "type": "string",
          "title": "Prompt",
          "description": "The prompt for video generation.",
          "x-order": 0
        },
        "image_url": {
          "type": "string",
          "title": "Image",
          "description": "The image to be used for video generation.",
          "format": "uri",
          "fileType": "image",
          "x-order": 1
        },
        "duration": {
          "type": "string",
          "title": "Duration",
          "description": "The duration of the video in seconds. 10 seconds videos are not supported for 1080p resolution.",
          "enum": [
            "6",
            "10"
          ],
          "default": "6",
          "x-order": 2
        },
        "prompt_optimize": {
          "type": "boolean",
          "title": "Prompt Optimization",
          "description": "Whether to optimize the prompt for video generation.",
          "default": false,
          "display": "hidden",
          "x-order": 3
        },
        "end_image_url": {
          "type": "string",
          "title": "End Image",
          "format": "uri",
          "fileType": "image",
          "description": "The image to use for the end of the video",
          "x-order": 4
        }
      }
    }
  },
  "videogen/minimax_hailuo2_standard_i2v": {
    "name": "videogen/minimax_hailuo2_standard_i2v",
    "schema": {
      "type": "object",
      "title": "Input",
      "required": [
        "prompt",
        "image_url"
      ],
      "translatable": [
        "prompt"
      ],
      "speech_enabled": [
        "prompt"
      ],
      "linkto": {
        "*": "*"
      },
      "map": {
        "prompt": "prompt",
        "image_url": "image"
      },
      "properties": {
        "prompt": {
          "type": "string",
          "title": "Prompt",
          "description": "The prompt for video generation.",
          "x-order": 0
        },
        "image_url": {
          "type": "string",
          "title": "Image",
          "description": "The image to be used for video generation.",
          "format": "uri",
          "fileType": "image",
          "x-order": 1
        },
        "duration": {
          "type": "string",
          "title": "Duration",
          "description": "The duration of the video in seconds. 10 seconds videos are not supported for 1080p resolution.",
          "enum": [
            "6",
            "10"
          ],
          "default": "6",
          "x-order": 2
        },
        "prompt_optimize": {
          "type": "boolean",
          "title": "Prompt Optimization",
          "description": "Whether to optimize the prompt for video generation.",
          "default": false,
          "display": "hidden",
          "x-order": 3
        },
        "end_image_url": {
          "type": "string",
          "title": "End Image",
          "format": "uri",
          "fileType": "image",
          "description": "The image to use for the end of the video",
          "x-order": 4
        }
      }
    }
  },
  "videogen/minimax_hailuo2_standard_t2v": {
    "name": "videogen/minimax_hailuo2_standard_t2v",
    "schema": {
      "type": "object",
      "title": "Input",
      "required": [
        "prompt"
      ],
      "translatable": [
        "prompt"
      ],
      "speech_enabled": [
        "prompt"
      ],
      "linkto": {
        "*": "*"
      },
      "map": {
        "prompt": "prompt"
      },
      "properties": {
        "prompt": {
          "type": "string",
          "title": "Prompt",
          "description": "The prompt for video generation.",
          "x-order": 0
        },
        "duration": {
          "type": "string",
          "title": "Duration",
          "description": "The duration of the video in seconds. 10 seconds videos are not supported for 1080p resolution.",
          "enum": [
            "6",
            "10"
          ],
          "default": "6",
          "x-order": 1
        },
        "prompt_optimize": {
          "type": "boolean",
          "title": "Prompt Optimization",
          "description": "Whether to optimize the prompt for video generation.",
          "default": false,
          "display": "hidden",
          "x-order": 2
        }
      }
    }
  },
  "videogen/moonvalley_marey_i2v": {
    "name": "videogen/moonvalley_marey_i2v",
    "schema": {
      "type": "object",
      "title": "Input",
      "required": [
        "prompt",
        "image_url"
      ],
      "linkto": {
        "*": "*"
      },
      "map": {
        "prompt": "prompt",
        "image_url": "image"
      },
      "translatable": [
        "prompt",
        "negative_prompt"
      ],
      "speech_enabled": [
        "prompt",
        "negative_prompt"
      ],
      "properties": {
        "prompt": {
          "type": "string",
          "title": "Prompt",
          "description": "The prompt to generate a video from.",
          "x-order": 0
        },
        "dimensions": {
          "type": "string",
          "title": "Dimensions",
          "description": "The dimensions of the generated video in width x height format.",
          "enum": [
            "1920x1080",
            "1080x1920",
            "1152x1152",
            "1536x1152",
            "1152x1536"
          ],
          "default": "1920x1080",
          "x-order": 1
        },
        "duration": {
          "type": "string",
          "title": "Duration",
          "description": "The duration of the generated video.",
          "enum": [
            "5s",
            "10s"
          ],
          "default": "5s",
          "x-order": 2
        },
        "negative_prompt": {
          "type": "string",
          "title": "Negative Prompt",
          "description": "Negative prompt used to guide the model away from undesirable features.",
          "default": "gopro, bright, contrast, static, overexposed, bright, vignette, artifacts, still, noise, texture, scanlines, videogame, 360 camera, VR, transition, flare, saturation, distorted, warped, wide angle, contrast, saturated, vibrant, glowing, cross dissolve, texture, videogame, saturation, cheesy, ugly hands, mutated hands, mutant, disfigured, extra fingers, blown out, horrible, blurry, worst quality, bad, transition, dissolve, cross-dissolve, melt, fade in, fade out, wobbly, weird, low quality, plastic, stock footage, video camera, boring, static",
          "x-order": 3
        },
        "seed": {
          "type": "integer",
          "title": "Seed",
          "description": "Seed for random number generation. Use -1 for random seed each run.",
          "default": 9,
          "x-order": 4
        },
        "image_url": {
          "type": "string",
          "title": "Image",
          "description": "The URL of the image to use as the first frame of the video.",
          "format": "uri",
          "fileType": "image",
          "x-order": 5
        }
      }
    }
  },
  "videogen/moonvalley_marey_t2v": {
    "name": "videogen/moonvalley_marey_t2v",
    "schema": {
      "type": "object",
      "title": "Input",
      "required": [
        "prompt"
      ],
      "linkto": {
        "*": "*"
      },
      "map": {
        "prompt": "prompt"
      },
      "translatable": [
        "prompt",
        "negative_prompt"
      ],
      "speech_enabled": [
        "prompt",
        "negative_prompt"
      ],
      "properties": {
        "prompt": {
          "type": "string",
          "title": "Prompt",
          "description": "The prompt to generate a video from.",
          "x-order": 0
        },
        "dimensions": {
          "type": "string",
          "title": "Dimensions",
          "description": "The dimensions of the generated video in width x height format.",
          "enum": [
            "1920x1080",
            "1080x1920",
            "1152x1152",
            "1536x1152",
            "1152x1536"
          ],
          "default": "1920x1080",
          "x-order": 1
        },
        "duration": {
          "type": "string",
          "title": "Duration",
          "description": "The duration of the generated video.",
          "enum": [
            "5s",
            "10s"
          ],
          "default": "5s",
          "x-order": 2
        },
        "negative_prompt": {
          "type": "string",
          "title": "Negative Prompt",
          "description": "Negative prompt used to guide the model away from undesirable features.",
          "default": "gopro, bright, contrast, static, overexposed, bright, vignette, artifacts, still, noise, texture, scanlines, videogame, 360 camera, VR, transition, flare, saturation, distorted, warped, wide angle, contrast, saturated, vibrant, glowing, cross dissolve, texture, videogame, saturation, cheesy, ugly hands, mutated hands, mutant, disfigured, extra fingers, blown out, horrible, blurry, worst quality, bad, transition, dissolve, cross-dissolve, melt, fade in, fade out, wobbly, weird, low quality, plastic, stock footage, video camera, boring, static",
          "x-order": 3
        },
        "seed": {
          "type": "integer",
          "title": "Seed",
          "description": "Seed for random number generation. Use -1 for random seed each run.",
          "default": 9,
          "x-order": 4
        }
      }
    }
  },
  "videogen/higgsfield_video": {
    "name": "videogen/higgsfield_video",
    "schema": {
      "type": "object",
      "title": "Input",
      "required": [
        "prompt",
        "model",
        "image_url"
      ],
      "translatable": [
        "prompt"
      ],
      "speech_enabled": [
        "prompt"
      ],
      "linkto": {
        "*": "*"
      },
      "map": {
        "prompt": "prompt",
        "image_url": "image"
      },
      "properties": {
        "prompt": {
          "type": "string",
          "title": "Prompt",
          "description": "Text prompt describing the video you want to generate",
          "x-order": 0
        },
        "model": {
          "enum": [
            "dop-lite",
            "dop-preview",
            "dop-turbo"
          ],
          "type": "string",
          "default": "dop-lite",
          "title": "Model",
          "description": "Choose the model for video generation. dop-lite is fastest, dop-turbo is highest quality",
          "x-order": 1
        },
        "image_url": {
          "type": "string",
          "title": "Image URL",
          "description": "Upload an image to use as the starting point for video generation",
          "format": "uri",
          "fileType": "image",
          "action": "upload_to_azure_data",
          "x-order": 2
        },
        "seed": {
          "type": "integer",
          "title": "Seed",
          "minimum": 1,
          "maximum": 1000000,
          "step": 1,
          "x-order": 3,
          "description": "Seed for reproducibility. Range: 1 to 1,000,000"
        },
        "motion_id": {
          "type": "string",
          "default": "31177282-bde3-4870-b283-1135ca0a201a",
          "title": "Motion Preset",
          "description": "Choose how the image animates",
          "extra": "modal",
          "x-order": 4
        },
        "motion_strength": {
          "type": "number",
          "title": "Motion Strength",
          "minimum": 0,
          "maximum": 1,
          "default": 0.5,
          "step": 0.1,
          "x-order": 5,
          "description": "How strong the motion effect should be (0.0 to 1.0)"
        },
        "enhance_prompt": {
          "type": "boolean",
          "title": "Enhance Prompt",
          "default": true,
          "x-order": 6,
          "description": "Automatically enhance your prompt for better results"
        },
        "check_nsfw": {
          "type": "boolean",
          "title": "Check NSFW Content",
          "default": true,
          "display": "hidden",
          "x-order": 7,
          "description": "Filter out inappropriate content"
        },
        "batch_size": {
          "enum": [
            1,
            2,
            4
          ],
          "type": "integer",
          "title": "Batch Size",
          "description": "Number of videos to generate",
          "display": "hidden",
          "default": 1,
          "x-order": 8
        }
      }
    }
  },
  "videogen/decart_lucy_14b": {
    "name": "videogen/decart_lucy_14b",
    "schema": {
      "type": "object",
      "title": "Input",
      "required": [
        "prompt",
        "image_url"
      ],
      "translatable": [
        "prompt"
      ],
      "speech_enabled": [
        "prompt"
      ],
      "linkto": {
        "*": "*"
      },
      "map": {
        "prompt": "prompt",
        "image_url": "image"
      },
      "properties": {
        "prompt": {
          "type": "string",
          "title": "Prompt",
          "description": "Text description of the desired video content",
          "x-order": 0
        },
        "image_url": {
          "type": "string",
          "title": "Image",
          "description": "URL of the image to use as the first frame",
          "format": "uri",
          "fileType": "image",
          "x-order": 1
        },
        "resolution": {
          "type": "string",
          "title": "Resolution",
          "description": "Resolution of the generated video",
          "enum": [
            "720p"
          ],
          "default": "720p",
          "display": "hidden",
          "x-order": 2
        },
        "aspect_ratio": {
          "type": "string",
          "title": "Aspect Ratio",
          "description": "Aspect ratio of the generated video",
          "enum": [
            "9:16",
            "16:9"
          ],
          "default": "16:9",
          "x-order": 3
        },
        "sync_mode": {
          "type": "boolean",
          "title": "Sync Mode",
          "description": "If set to true, the function will wait for the image to be generated and uploaded before returning the response. This will increase the latency of the function but it allows you to get the image directly in the response without going through the CDN.",
          "default": false,
          "display": "hidden",
          "x-order": 4
        }
      }
    }
  },
  "videogen/wan_fun_control": {
    "name": "videogen/wan_fun_control",
    "schema": {
      "type": "object",
      "title": "Input",
      "required": [
        "prompt",
        "control_video_url"
      ],
      "translatable": [
        "prompt",
        "negative_prompt"
      ],
      "speech_enabled": [
        "prompt",
        "negative_prompt"
      ],
      "linkto": {
        "*": "*"
      },
      "map": {
        "prompt": "prompt",
        "control_video_url": "video",
        "reference_image_url": "image"
      },
      "properties": {
        "prompt": {
          "type": "string",
          "title": "Prompt",
          "description": "The prompt to generate the video",
          "x-order": 0
        },
        "negative_prompt": {
          "type": "string",
          "title": "Negative Prompt",
          "description": "The negative prompt to generate the video",
          "default": "",
          "x-order": 1
        },
        "num_inference_steps": {
          "type": "integer",
          "title": "Number of Inference Steps",
          "description": "The number of inference steps",
          "default": 27,
          "minimum": 4,
          "maximum": 50,
          "step": 1,
          "display": "hidden",
          "x-order": 2
        },
        "guidance_scale": {
          "type": "number",
          "title": "Guidance Scale",
          "description": "The guidance scale",
          "default": 6,
          "minimum": 1,
          "maximum": 10,
          "step": 0.1,
          "display": "hidden",
          "x-order": 3
        },
        "shift": {
          "type": "number",
          "title": "Shift",
          "description": "The shift for the scheduler",
          "default": 5,
          "minimum": 1,
          "maximum": 10,
          "step": 0.1,
          "display": "hidden",
          "x-order": 4
        },
        "seed": {
          "type": "integer",
          "title": "Seed",
          "description": "The seed for the random number generator",
          "x-order": 5
        },
        "match_input_num_frames": {
          "type": "boolean",
          "title": "Match Input Number of Frames",
          "description": "Whether to match the number of frames in the input video",
          "default": true,
          "x-order": 6
        },
        "num_frames": {
          "type": "integer",
          "title": "Number of Frames",
          "description": "The number of frames to generate. Only used when match_input_num_frames is False",
          "default": 81,
          "minimum": 49,
          "maximum": 121,
          "step": 1,
          "x-order": 7
        },
        "match_input_fps": {
          "type": "boolean",
          "title": "Match Input FPS",
          "description": "Whether to match the fps in the input video",
          "default": true,
          "x-order": 8
        },
        "fps": {
          "type": "integer",
          "title": "FPS",
          "description": "The fps to generate. Only used when match_input_fps is False",
          "default": 16,
          "minimum": 4,
          "maximum": 60,
          "step": 1,
          "x-order": 9
        },
        "control_video_url": {
          "type": "string",
          "title": "Control Video",
          "description": "The URL of the control video to use as a reference for the video generation",
          "format": "uri",
          "fileType": "video",
          "x-order": 10
        },
        "preprocess_video": {
          "type": "boolean",
          "title": "Preprocess Video",
          "description": "Whether to preprocess the video. If True, the video will be preprocessed to depth or pose",
          "default": false,
          "x-order": 11
        },
        "preprocess_type": {
          "type": "string",
          "title": "Preprocess Type",
          "description": "The type of preprocess to apply to the video. Only used when preprocess_video is True",
          "enum": [
            "depth",
            "pose"
          ],
          "default": "depth",
          "x-order": 12
        },
        "reference_image_url": {
          "type": "string",
          "title": "Reference Image",
          "description": "The URL of the reference image to use as a reference for the video generation",
          "format": "uri",
          "fileType": "image",
          "x-order": 13
        }
      }
    }
  },
  "videogen/kling2_5_i2v": {
    "name": "videogen/kling2_5_i2v",
    "schema": {
      "type": "object",
      "title": "Input",
      "required": [
        "prompt",
        "image_url"
      ],
      "translatable": [
        "prompt"
      ],
      "speech_enabled": [
        "prompt"
      ],
      "linkto": {
        "*": "*"
      },
      "map": {
        "prompt": "prompt",
        "image_url": "image"
      },
      "properties": {
        "prompt": {
          "type": "string",
          "title": "Prompt",
          "x-order": 0,
          "description": "Text prompt for video generation"
        },
        "image_url": {
          "type": "string",
          "title": "Start Image",
          "format": "uri",
          "fileType": "image",
          "x-order": 1,
          "description": "URL of the image to be used for the video"
        },
        "duration": {
          "enum": [
            "5",
            "10"
          ],
          "type": "string",
          "title": "Duration",
          "description": "The duration of the generated video in seconds",
          "default": "5",
          "x-order": 2
        },
        "negative_prompt": {
          "type": "string",
          "title": "Negative Prompt",
          "default": "blur, distort, and low quality",
          "x-order": 3,
          "description": "Things you do not want to see in the video"
        },
        "cfg_scale": {
          "type": "number",
          "title": "CFG Scale",
          "default": 0.5,
          "display": "hidden",
          "maximum": 1,
          "minimum": 0,
          "step": 0.1,
          "x-order": 4,
          "description": "The CFG (Classifier Free Guidance) scale is a measure of how close you want the model to stick to your prompt."
        }
      }
    }
  },
  "videogen/kling2_5_t2v": {
    "name": "videogen/kling2_5_t2v",
    "schema": {
      "type": "object",
      "title": "Input",
      "required": [
        "prompt"
      ],
      "translatable": [
        "prompt"
      ],
      "speech_enabled": [
        "prompt"
      ],
      "linkto": {
        "*": "*"
      },
      "map": {
        "prompt": "prompt"
      },
      "properties": {
        "prompt": {
          "type": "string",
          "title": "Prompt",
          "x-order": 0,
          "description": "Text prompt for video generation"
        },
        "duration": {
          "enum": [
            "5",
            "10"
          ],
          "type": "string",
          "title": "Duration",
          "description": "The duration of the generated video in seconds",
          "default": "5",
          "x-order": 2
        },
        "aspect_ratio": {
          "enum": [
            "16:9",
            "9:16",
            "1:1"
          ],
          "type": "string",
          "title": "Aspect Ratio",
          "description": "The aspect ratio of the generated video frame",
          "default": "16:9",
          "x-order": 3
        },
        "negative_prompt": {
          "type": "string",
          "title": "Negative Prompt",
          "default": "blur, distort, and low quality",
          "x-order": 4,
          "description": "Things you do not want to see in the video"
        },
        "cfg_scale": {
          "type": "number",
          "title": "CFG Scale",
          "default": 0.5,
          "display": "hidden",
          "maximum": 1,
          "minimum": 0,
          "step": 0.1,
          "x-order": 5,
          "description": "The CFG (Classifier Free Guidance) scale is a measure of how close you want the model to stick to your prompt."
        }
      }
    }
  },
  "videogen/wan2_5": {
    "name": "videogen/wan2_5",
    "schema": {
      "type": "object",
      "title": "Input",
      "required": [
        "prompt"
      ],
      "translatable": [
        "prompt",
        "negative_prompt"
      ],
      "speech_enabled": [
        "prompt",
        "negative_prompt"
      ],
      "linkto": {
        "*": "*"
      },
      "map": {
        "prompt": "prompt",
        "image_url": "image"
      },
      "properties": {
        "prompt": {
          "type": "string",
          "title": "Prompt",
          "description": "The prompt for generating the output.",
          "x-order": 0
        },
        "negative_prompt": {
          "type": "string",
          "title": "Negative Prompt",
          "description": "Negative prompt for the generation.",
          "x-order": 1
        },
        "image_url": {
          "type": "string",
          "title": "Start Image",
          "description": "URL of the image to use as the first frame. Must be publicly accessible.",
          "format": "uri",
          "fileType": "image",
          "x-order": 2
        },
        "fast": {
          "type": "boolean",
          "title": "Fast Generation",
          "description": "Enable fast generation mode for quicker results.",
          "default": false,
          "x-order": 3
        },
        "size": {
          "type": "string",
          "title": "Size (for T2V)",
          "description": "The size of the generated media in pixels (width*height).",
          "enum": [
            "1280*720",
            "720*1280",
            "1920*1080",
            "1080*1920"
          ],
          "default": "1280*720",
          "x-order": 4
        },
        "resolution": {
          "type": "string",
          "title": "Resolution",
          "description": "Video resolution.",
          "enum": [
            "720p",
            "1080p"
          ],
          "default": "1080p",
          "x-order": 5
        },
        "duration": {
          "type": "integer",
          "title": "Duration",
          "description": "The duration of the generated media in seconds.",
          "enum": [
            5,
            10
          ],
          "default": 5,
          "x-order": 6
        },
        "enable_prompt_expansion": {
          "type": "boolean",
          "title": "Enable Prompt Expansion",
          "description": "If set to true, the prompt optimizer will be enabled.",
          "default": false,
          "x-order": 7
        },
        "seed": {
          "type": "integer",
          "title": "Seed",
          "description": "The random seed to use for the generation. -1 means a random seed will be used.",
          "default": -1,
          "x-order": 8
        }
      }
    }
  },
  "videogen/sora2_t2v": {
    "name": "videogen/sora2_t2v",
    "schema": {
      "type": "object",
      "title": "Input",
      "required": [
        "prompt"
      ],
      "translatable": [
        "prompt"
      ],
      "speech_enabled": [
        "prompt"
      ],
      "linkto": {
        "*": "*"
      },
      "map": {
        "prompt": "prompt"
      },
      "properties": {
        "prompt": {
          "type": "string",
          "title": "Prompt",
          "x-order": 1,
          "description": "A text description of the video to generate"
        },
        "seconds": {
          "enum": [
            4,
            8,
            12
          ],
          "type": "integer",
          "title": "Duration",
          "description": "Duration of the video in seconds",
          "default": 4,
          "x-order": 3
        },
        "aspect_ratio": {
          "enum": [
            "portrait",
            "landscape"
          ],
          "type": "string",
          "title": "aspect_ratio",
          "description": "Aspect ratio of the video. Portrait is 720x1280, landscape is 1280x720",
          "default": "portrait",
          "x-order": 4
        }
      }
    }
  },
  "videogen/sora2_pro_t2v": {
    "name": "videogen/sora2_pro_t2v",
    "schema": {
      "type": "object",
      "title": "Input",
      "required": [
        "prompt"
      ],
      "translatable": [
        "prompt"
      ],
      "speech_enabled": [
        "prompt"
      ],
      "linkto": {
        "*": "*"
      },
      "map": {
        "prompt": "prompt"
      },
      "properties": {
        "prompt": {
          "type": "string",
          "title": "Prompt",
          "x-order": 1,
          "description": "A text description of the video to generate"
        },
        "seconds": {
          "enum": [
            4,
            8,
            12
          ],
          "type": "integer",
          "title": "seconds",
          "description": "Duration of the video in seconds",
          "default": 4,
          "x-order": 3
        },
        "resolution": {
          "enum": [
            "standard",
            "high"
          ],
          "type": "string",
          "title": "resolution",
          "description": "Resolution quality. Standard is 720p, high is 1024p",
          "default": "standard",
          "x-order": 5
        },
        "aspect_ratio": {
          "enum": [
            "portrait",
            "landscape"
          ],
          "type": "string",
          "title": "aspect_ratio",
          "description": "Aspect ratio of the video. Portrait is 720x1280, landscape is 1280x720",
          "default": "portrait",
          "x-order": 4
        }
      }
    }
  },
  "3dgen/trellis": {
    "name": "3dgen/trellis",
    "schema": {
      "type": "object",
      "title": "Input",
      "required": [
        "images"
      ],
      "linkto": {
        "*": "*"
      },
      "map": {
        "images": "image"
      },
      "properties": {
        "seed": {
          "type": "integer",
          "title": "Seed",
          "default": 0,
          "x-order": 1,
          "description": "Random seed for generation"
        },
        "images": {
          "type": "array",
          "items": {
            "type": "string",
            "format": "uri",
            "fileType": "image"
          },
          "maxItems": 4,
          "title": "Images",
          "x-order": 0,
          "description": "List of input images to generate 3D asset from"
        },
        "texture_size": {
          "type": "integer",
          "title": "Texture Size",
          "default": 512,
          "maximum": 2048,
          "minimum": 512,
          "x-order": 13,
          "description": "GLB Extraction - Texture Size (only used if generate_model=True)"
        },
        "mesh_simplify": {
          "type": "number",
          "title": "Mesh Simplify",
          "default": 0.98,
          "maximum": 0.98,
          "minimum": 0,
          "display": "hidden",
          "x-order": 12,
          "description": "GLB Extraction - Mesh Simplification (only used if generate_model=True)"
        },
        "generate_color": {
          "type": "boolean",
          "title": "Generate Color",
          "default": true,
          "x-order": 3,
          "description": "Generate color video render"
        },
        "generate_model": {
          "type": "boolean",
          "title": "Generate Model",
          "default": true,
          "x-order": 5,
          "description": "Generate 3D model file (GLB)"
        },
        "randomize_seed": {
          "type": "boolean",
          "title": "Randomize Seed",
          "default": true,
          "x-order": 2,
          "description": "Randomize seed"
        },
        "generate_normal": {
          "type": "boolean",
          "title": "Generate Normal",
          "default": false,
          "x-order": 4,
          "description": "Generate normal video render"
        },
        "save_gaussian_ply": {
          "type": "boolean",
          "title": "Save Gaussian Ply",
          "default": false,
          "x-order": 6,
          "description": "Save Gaussian point cloud as PLY file"
        },
        "ss_sampling_steps": {
          "type": "integer",
          "title": "Ss Sampling Steps",
          "default": 12,
          "maximum": 50,
          "minimum": 1,
          "display": "hidden",
          "x-order": 9,
          "description": "Stage 1: Sparse Structure Generation - Sampling Steps"
        },
        "slat_sampling_steps": {
          "type": "integer",
          "title": "Slat Sampling Steps",
          "default": 12,
          "maximum": 50,
          "minimum": 1,
          "display": "hidden",
          "x-order": 11,
          "description": "Stage 2: Structured Latent Generation - Sampling Steps"
        },
        "return_no_background": {
          "type": "boolean",
          "title": "Return No Background",
          "default": false,
          "x-order": 7,
          "description": "Return the preprocessed images without background"
        },
        "ss_guidance_strength": {
          "type": "number",
          "title": "Ss Guidance Strength",
          "default": 7.5,
          "maximum": 10,
          "minimum": 0,
          "display": "hidden",
          "x-order": 8,
          "description": "Stage 1: Sparse Structure Generation - Guidance Strength"
        },
        "slat_guidance_strength": {
          "type": "number",
          "title": "Slat Guidance Strength",
          "default": 3,
          "maximum": 10,
          "minimum": 0,
          "display": "hidden",
          "x-order": 10,
          "description": "Stage 2: Structured Latent Generation - Guidance Strength"
        }
      }
    }
  },
  "3dgen/panorama": {
    "name": "3dgen/panorama",
    "schema": {
      "type": "object",
      "title": "Input",
      "required": [
        "prompt"
      ],
      "translatable": [
        "prompt"
      ],
      "speech_enabled": [
        "prompt"
      ],
      "linkto": {
        "*": "*"
      },
      "properties": {
        "mask": {
          "type": "string",
          "title": "Mask",
          "format": "uri",
          "fileType": "image",
          "display": "hidden",
          "x-order": 2,
          "description": "Image mask for image inpainting mode. If provided, aspect_ratio, width, and height inputs are ignored."
        },
        "seed": {
          "type": "integer",
          "title": "Seed",
          "x-order": 11,
          "description": "Random seed. Set for reproducible generation"
        },
        "image": {
          "type": "string",
          "title": "Image",
          "format": "uri",
          "fileType": "image",
          "display": "hidden",
          "x-order": 1,
          "description": "Input image for image to image or inpainting mode. If provided, aspect_ratio, width, and height inputs are ignored."
        },
        "model": {
          "enum": [
            "dev",
            "schnell"
          ],
          "type": "string",
          "title": "model",
          "display": "hidden",
          "description": "Which model to run inference with. The dev model performs best with around 28 inference steps but the schnell model only needs 4 steps.",
          "default": "dev",
          "x-order": 7
        },
        "width": {
          "type": "integer",
          "title": "Width",
          "maximum": 1440,
          "minimum": 256,
          "step": 16,
          "x-order": 5,
          "description": "Width of generated image. Only works if `aspect_ratio` is set to custom. Will be rounded to nearest multiple of 16. Incompatible with fast generation"
        },
        "height": {
          "type": "integer",
          "title": "Height",
          "maximum": 1440,
          "minimum": 256,
          "step": 16,
          "x-order": 4,
          "description": "Height of generated image. Only works if `aspect_ratio` is set to custom. Will be rounded to nearest multiple of 16. Incompatible with fast generation"
        },
        "prompt": {
          "type": "string",
          "title": "Prompt",
          "x-order": 0,
          "default": "<Add prompt here>, 360 view in the TOK style",
          "description": "Prompt for generated image. For ptimal performance of the model, it is recommended to use “360 view in the TOK style” at the end of the prompt."
        },
        "go_fast": {
          "type": "boolean",
          "title": "Go Fast",
          "default": false,
          "x-order": 15,
          "description": "Run faster predictions with model optimized for speed (currently fp8 quantized); disable to run in original bf16"
        },
        "extra_lora": {
          "type": "string",
          "title": "Extra Lora",
          "x-order": 19,
          "display": "hidden",
          "description": "Load LoRA weights. Supports Replicate models in the format <owner>/<username> or <owner>/<username>/<version>, HuggingFace URLs in the format huggingface.co/<owner>/<model-name>, CivitAI URLs in the format civitai.com/models/<id>[/<model-name>], or arbitrary .safetensors URLs from the Internet. For example, 'fofr/flux-pixar-cars'"
        },
        "lora_scale": {
          "type": "number",
          "title": "Lora Scale",
          "default": 1,
          "maximum": 3,
          "minimum": -1,
          "x-order": 18,
          "display": "hidden",
          "description": "Determines how strongly the main LoRA should be applied. Sane results between 0 and 1 for base inference. For go_fast we apply a 1.5x multiplier to this value; we've generally seen good performance when scaling the base value by that amount. You may still need to experiment to find the best value for your particular lora."
        },
        "megapixels": {
          "enum": [
            "1",
            "0.25"
          ],
          "type": "string",
          "title": "megapixels",
          "display": "hidden",
          "description": "Approximate number of megapixels for generated image",
          "default": "1",
          "x-order": 16
        },
        "num_outputs": {
          "type": "integer",
          "title": "Num Outputs",
          "default": 1,
          "maximum": 4,
          "minimum": 1,
          "x-order": 8,
          "display": "hidden",
          "description": "Number of outputs to generate"
        },
        "aspect_ratio": {
          "enum": [
            "1:1",
            "16:9",
            "21:9",
            "3:2",
            "2:3",
            "4:5",
            "5:4",
            "3:4",
            "4:3",
            "9:16",
            "9:21",
            "custom"
          ],
          "type": "string",
          "title": "aspect_ratio",
          "description": "Aspect ratio for the generated image. If custom is selected, uses height and width below & will run in bf16 mode",
          "default": "1:1",
          "x-order": 3
        },
        "output_format": {
          "enum": [
            "webp",
            "jpg",
            "png"
          ],
          "type": "string",
          "title": "output_format",
          "description": "Format of the output images",
          "default": "webp",
          "x-order": 12
        },
        "guidance_scale": {
          "type": "number",
          "title": "Guidance Scale",
          "default": 3,
          "maximum": 10,
          "minimum": 0,
          "x-order": 10,
          "description": "Guidance scale for the diffusion process. Lower values can give more realistic images. Good values to try are 2, 2.5, 3 and 3.5"
        },
        "output_quality": {
          "type": "integer",
          "title": "Output Quality",
          "default": 80,
          "maximum": 100,
          "minimum": 0,
          "x-order": 13,
          "description": "Quality when saving the output images, from 0 to 100. 100 is best quality, 0 is lowest quality. Not relevant for .png outputs"
        },
        "prompt_strength": {
          "type": "number",
          "title": "Prompt Strength",
          "default": 0.8,
          "maximum": 1,
          "minimum": 0,
          "display": "hidden",
          "x-order": 6,
          "description": "Prompt strength when using img2img. 1.0 corresponds to full destruction of information in image"
        },
        "extra_lora_scale": {
          "type": "number",
          "title": "Extra Lora Scale",
          "default": 1,
          "maximum": 3,
          "minimum": -1,
          "display": "hidden",
          "x-order": 20,
          "description": "Determines how strongly the extra LoRA should be applied. Sane results between 0 and 1 for base inference. For go_fast we apply a 1.5x multiplier to this value; we've generally seen good performance when scaling the base value by that amount. You may still need to experiment to find the best value for your particular lora."
        },
        "num_inference_steps": {
          "type": "integer",
          "title": "Num Inference Steps",
          "default": 28,
          "maximum": 50,
          "minimum": 1,
          "display": "hidden",
          "x-order": 9,
          "description": "Number of denoising steps. More steps can give more detailed images, but take longer."
        },
        "disable_safety_checker": {
          "type": "boolean",
          "title": "Disable Safety Checker",
          "default": true,
          "display": "hidden",
          "x-order": 14,
          "description": "Disable safety checker for generated images."
        }
      }
    }
  },
  "3dgen/hunyuan2_3d": {
    "name": "3dgen/hunyuan2_3d",
    "schema": {
      "type": "object",
      "title": "Input",
      "required": [
        "image"
      ],
      "map": {
        "image": "image"
      },
      "linkto": {
        "*": "*"
      },
      "properties": {
        "seed": {
          "type": "integer",
          "title": "Seed",
          "default": 1234,
          "x-order": 3,
          "description": "Random seed for generation"
        },
        "image": {
          "type": "string",
          "title": "Image",
          "format": "uri",
          "fileType": "image",
          "x-order": 0,
          "description": "Input image for generating 3D shape"
        },
        "steps": {
          "type": "integer",
          "title": "Steps",
          "default": 50,
          "maximum": 50,
          "minimum": 20,
          "x-order": 1,
          "description": "Number of inference steps"
        },
        "guidance_scale": {
          "type": "number",
          "title": "Guidance Scale",
          "default": 5.5,
          "maximum": 20,
          "minimum": 1,
          "x-order": 2,
          "description": "Guidance scale for generation"
        },
        "octree_resolution": {
          "enum": [
            256,
            384,
            512
          ],
          "type": "integer",
          "title": "octree_resolution",
          "description": "Octree resolution for mesh generation",
          "default": 256,
          "x-order": 4
        },
        "remove_background": {
          "type": "boolean",
          "title": "Remove Background",
          "default": true,
          "x-order": 5,
          "description": "Whether to remove background from input image"
        }
      }
    }
  },
  "3dgen/hunyuan_3d_2mv": {
    "name": "3dgen/hunyuan_3d_2mv",
    "schema": {
      "type": "object",
      "title": "Input",
      "required": [
        "front_image"
      ],
      "map": {
        "front_image": "image",
        "back_image": "back_image",
        "left_image": "left_image",
        "right_image": "right_image"
      },
      "linkto": {
        "*": "*"
      },
      "properties": {
        "seed": {
          "type": "integer",
          "title": "Seed",
          "default": 1234,
          "x-order": 6,
          "description": "Random seed"
        },
        "steps": {
          "type": "integer",
          "title": "Steps",
          "default": 30,
          "maximum": 100,
          "minimum": 1,
          "x-order": 4,
          "description": "Number of inference steps"
        },
        "file_type": {
          "enum": [
            "glb",
            "obj",
            "ply",
            "stl"
          ],
          "type": "string",
          "title": "file_type",
          "description": "Output file type",
          "default": "glb",
          "x-order": 12
        },
        "back_image": {
          "type": "string",
          "title": "Back Image",
          "fileType": "image",
          "format": "uri",
          "x-order": 1,
          "description": "Back view image"
        },
        "left_image": {
          "type": "string",
          "title": "Left Image",
          "fileType": "image",
          "format": "uri",
          "x-order": 2,
          "description": "Left view image"
        },
        "num_chunks": {
          "type": "integer",
          "title": "Num Chunks",
          "default": 200000,
          "maximum": 5000000,
          "minimum": 1000,
          "x-order": 9,
          "display": "hidden",
          "description": "Number of chunks"
        },
        "front_image": {
          "type": "string",
          "title": "Front Image",
          "fileType": "image",
          "format": "uri",
          "x-order": 0,
          "description": "Front view image"
        },
        "right_image": {
          "type": "string",
          "title": "Right Image",
          "fileType": "image",
          "format": "uri",
          "x-order": 3,
          "description": "Right view image"
        },
        "guidance_scale": {
          "type": "number",
          "title": "Guidance Scale",
          "default": 5,
          "x-order": 5,
          "display": "hidden",
          "description": "Guidance scale"
        },
        "randomize_seed": {
          "type": "boolean",
          "title": "Randomize Seed",
          "default": true,
          "x-order": 10,
          "description": "Randomize seed"
        },
        "target_face_num": {
          "type": "integer",
          "title": "Target Face Num",
          "default": 10000,
          "maximum": 1000000,
          "minimum": 100,
          "x-order": 11,
          "description": "Target number of faces for mesh simplification"
        },
        "octree_resolution": {
          "type": "integer",
          "title": "Octree Resolution",
          "default": 256,
          "maximum": 512,
          "minimum": 16,
          "x-order": 7,
          "display": "hidden",
          "description": "Octree resolution"
        },
        "remove_background": {
          "type": "boolean",
          "title": "Remove Background",
          "default": true,
          "x-order": 8,
          "description": "Remove image background"
        }
      }
    }
  },
  "3dgen/hunyuan2_3d_2_1": {
    "name": "3dgen/hunyuan2_3d_2_1",
    "schema": {
      "type": "object",
      "title": "Input",
      "required": [
        "image"
      ],
      "map": {
        "image": "image"
      },
      "linkto": {
        "*": "*"
      },
      "properties": {
        "seed": {
          "type": "integer",
          "title": "Seed",
          "default": 1234,
          "x-order": 5,
          "description": "Random seed for generation"
        },
        "image": {
          "type": "string",
          "title": "Image",
          "format": "uri",
          "fileType": "image",
          "x-order": 0,
          "description": "Input image for generating 3D shape"
        },
        "steps": {
          "type": "integer",
          "title": "Steps",
          "default": 50,
          "maximum": 50,
          "minimum": 5,
          "x-order": 1,
          "description": "Number of inference steps"
        },
        "num_chunks": {
          "type": "integer",
          "title": "Num Chunks",
          "default": 8000,
          "maximum": 200000,
          "minimum": 1000,
          "x-order": 4,
          "display": "hidden",
          "description": "Number of chunks for mesh generation"
        },
        "max_facenum": {
          "type": "integer",
          "title": "Max Facenum",
          "default": 20000,
          "maximum": 200000,
          "minimum": 10000,
          "x-order": 3,
          "description": "Maximum number of faces for mesh generation"
        },
        "guidance_scale": {
          "type": "number",
          "title": "Guidance Scale",
          "default": 7.5,
          "maximum": 20,
          "minimum": 1,
          "x-order": 2,
          "description": "Guidance scale for generation"
        },
        "generate_texture": {
          "type": "boolean",
          "title": "Generate Texture",
          "default": true,
          "x-order": 8,
          "description": "Whether to generate PBR textures"
        },
        "octree_resolution": {
          "enum": [
            196,
            256,
            384,
            512
          ],
          "type": "integer",
          "title": "octree_resolution",
          "description": "Octree resolution for mesh generation",
          "default": 256,
          "x-order": 6
        },
        "remove_background": {
          "type": "boolean",
          "title": "Remove Background",
          "default": true,
          "x-order": 7,
          "description": "Whether to remove background from input image"
        }
      }
    }
  },
  "3dgen/tripo3d_2_5": {
    "name": "3dgen/tripo3d_2_5",
    "schema": {
      "type": "object",
      "title": "Input",
      "required": [
        "image_url"
      ],
      "translatable": [],
      "speech_enabled": [],
      "linkto": {
        "*": "*"
      },
      "map": {
        "image_url": "image"
      },
      "properties": {
        "seed": {
          "type": "integer",
          "title": "Seed",
          "description": "This is the random seed for model generation. The seed controls the geometry generation process, ensuring identical models when the same seed is used. This parameter is an integer and is randomly chosen if not set.",
          "x-order": 0
        },
        "pbr": {
          "type": "boolean",
          "title": "PBR",
          "description": "A boolean option to enable pbr. The default value is True, set False to get a model without pbr. If this option is set to True, texture will be ignored and used as True.",
          "default": true,
          "x-order": 2
        },
        "texture": {
          "type": "string",
          "title": "Texture",
          "description": "An option to enable texturing. Default is 'standard', set 'no' to get a model without any textures, and set 'HD' to get a model with hd quality textures.",
          "enum": [
            "no",
            "standard",
            "HD"
          ],
          "default": "standard",
          "x-order": 3
        },
        "texture_seed": {
          "type": "integer",
          "title": "Texture Seed",
          "description": "This is the random seed for texture generation. Using the same seed will produce identical textures. This parameter is an integer and is randomly chosen if not set. If you want a model with different textures, please use same seed and different texture_seed.",
          "x-order": 4
        },
        "auto_size": {
          "type": "boolean",
          "title": "Auto Size",
          "description": "Automatically scale the model to real-world dimensions, with the unit in meters. The default value is False.",
          "default": false,
          "x-order": 5
        },
        "style": {
          "type": "string",
          "title": "Style",
          "default": "",
          "description": "Defines the artistic style or transformation to be applied to the 3D model, altering its appearance according to preset options. Omit this option to keep the original style and apperance.",
          "enum": [
            "",
            "person:person2cartoon",
            "object:clay",
            "object:steampunk",
            "animal:venom",
            "object:barbie",
            "object:christmas",
            "gold",
            "ancient_bronze"
          ],
          "x-order": 6
        },
        "quad": {
          "type": "boolean",
          "title": "Quad",
          "description": "Set True to enable quad mesh output (extra $0.05 per generation). If quad=True and face_limit is not set, the default face_limit will be 10000. Note: Enabling this option will force the output to be an FBX model.",
          "x-order": 7
        },
        "texture_alignment": {
          "type": "string",
          "title": "Texture Alignment",
          "description": "Determines the prioritization of texture alignment in the 3D model. The default value is original_image.",
          "enum": [
            "original_image",
            "geometry"
          ],
          "default": "original_image",
          "x-order": 8
        },
        "orientation": {
          "type": "string",
          "title": "Orientation",
          "description": "Set orientation=align_image to automatically rotate the model to align the original image. The default value is default.",
          "enum": [
            "default",
            "align_image"
          ],
          "default": "default",
          "x-order": 9
        },
        "image_url": {
          "type": "string",
          "title": "Image",
          "description": "URL of the image to use for model generation.",
          "format": "uri",
          "fileType": "image",
          "x-order": 10
        }
      }
    }
  },
  "imgutils_control/canny": {
    "name": "imgutils_control/canny",
    "schema": {
      "type": "object",
      "title": "Input",
      "translatable": [
        "prompt"
      ],
      "speech_enabled": [
        "prompt"
      ],
      "required": [
        "prompt",
        "control_image"
      ],
      "linkto": {
        "*": "*"
      },
      "map": {
        "control_image": "control_image",
        "prompt": "prompt"
      },
      "properties": {
        "seed": {
          "type": "integer",
          "title": "Seed",
          "x-order": 2,
          "description": "Random seed. Set for reproducible generation"
        },
        "steps": {
          "type": "integer",
          "title": "Steps",
          "default": 50,
          "maximum": 50,
          "minimum": 15,
          "x-order": 3,
          "description": "Number of diffusion steps. Higher values yield finer details but increase processing time."
        },
        "prompt": {
          "type": "string",
          "title": "Prompt",
          "x-order": 0,
          "description": "Text prompt for image generation"
        },
        "guidance": {
          "type": "number",
          "title": "Guidance",
          "default": 30,
          "maximum": 100,
          "minimum": 1,
          "x-order": 5,
          "description": "Controls the balance between adherence to the text as well as image prompt and image quality/diversity. Higher values make the output more closely match the prompt but may reduce overall image quality. Lower values allow for more creative freedom but might produce results less relevant to the prompt."
        },
        "control_image": {
          "type": "string",
          "title": "Control Image",
          "format": "uri",
          "fileType": "image",
          "x-order": 1,
          "description": "Image to use as control input. Must be jpeg, png, gif, or webp."
        },
        "output_format": {
          "enum": [
            "jpg",
            "png"
          ],
          "type": "string",
          "title": "output_format",
          "description": "Format of the output images.",
          "default": "jpg",
          "x-order": 7
        },
        "safety_tolerance": {
          "type": "integer",
          "title": "Safety Tolerance",
          "default": 2,
          "maximum": 6,
          "minimum": 1,
          "x-order": 6,
          "description": "Safety tolerance, 1 is most strict and 6 is most permissive"
        },
        "prompt_upsampling": {
          "type": "boolean",
          "title": "Prompt Upsampling",
          "default": false,
          "x-order": 4,
          "description": "Automatically modify the prompt for more creative generation"
        }
      }
    }
  },
  "imgutils_control/scribble2img": {
    "name": "imgutils_control/scribble2img",
    "schema": {
      "type": "object",
      "title": "Input",
      "required": [
        "image",
        "prompt"
      ],
      "translatable": [
        "prompt",
        "a_prompt",
        "n_prompt"
      ],
      "speech_enabled": [
        "prompt",
        "a_prompt",
        "n_prompt"
      ],
      "linkto": {
        "*": "*"
      },
      "map": {
        "image": "control_image",
        "prompt": "prompt"
      },
      "properties": {
        "eta": {
          "type": "number",
          "title": "Eta",
          "default": 0,
          "x-order": 7,
          "description": "eta (DDIM)"
        },
        "seed": {
          "type": "integer",
          "title": "Seed",
          "x-order": 6,
          "description": "Seed"
        },
        "image": {
          "type": "string",
          "title": "Image",
          "format": "uri",
          "fileType": "image",
          "x-order": 0,
          "description": "Input image"
        },
        "scale": {
          "type": "number",
          "title": "Scale",
          "default": 9,
          "maximum": 30,
          "minimum": 0.1,
          "x-order": 5,
          "description": "Guidance Scale"
        },
        "prompt": {
          "type": "string",
          "title": "Prompt",
          "x-order": 1,
          "description": "Prompt for the model"
        },
        "a_prompt": {
          "type": "string",
          "title": "A Prompt",
          "default": "best quality, extremely detailed",
          "x-order": 8,
          "description": "Added Prompt"
        },
        "n_prompt": {
          "type": "string",
          "title": "N Prompt",
          "default": "longbody, lowres, bad anatomy, bad hands, missing fingers, extra digit, fewer digits, cropped, worst quality, low quality",
          "x-order": 9,
          "description": "Negative Prompt"
        },
        "ddim_steps": {
          "type": "integer",
          "title": "Ddim Steps",
          "default": 20,
          "x-order": 4,
          "description": "Steps"
        },
        "num_samples": {
          "enum": [
            "1"
          ],
          "type": "string",
          "title": "num_samples",
          "description": "Number of samples (higher values may OOM)",
          "default": "1",
          "x-order": 2
        },
        "image_resolution": {
          "enum": [
            "256",
            "512",
            "768"
          ],
          "type": "string",
          "title": "image_resolution",
          "description": "Image resolution to be generated",
          "default": "512",
          "x-order": 3
        }
      }
    }
  },
  "imgutils_control/pose": {
    "name": "imgutils_control/pose",
    "schema": {
      "type": "object",
      "title": "Input",
      "required": [
        "image"
      ],
      "translatable": [
        "prompt",
        "negative_prompt"
      ],
      "speech_enabled": [
        "prompt",
        "negative_prompt"
      ],
      "linkto": {
        "*": "*"
      },
      "map": {
        "image": "control_image",
        "prompt": "prompt"
      },
      "properties": {
        "image": {
          "type": "string",
          "title": "Image",
          "format": "uri",
          "fileType": "image",
          "x-order": 0,
          "description": "Input image"
        },
        "prompt": {
          "type": "string",
          "title": "Prompt",
          "default": "A couple, 4k photo, highly detailed",
          "x-order": 1,
          "description": "Input prompt"
        },
        "scheduler": {
          "enum": [
            "DDIM",
            "DPMSolverMultistep",
            "HeunDiscrete",
            "KarrasDPM",
            "K_EULER_ANCESTRAL",
            "K_EULER",
            "PNDM",
            "LMSDiscrete"
          ],
          "type": "string",
          "title": "scheduler",
          "description": "Which scheduler to use",
          "default": "K_EULER_ANCESTRAL",
          "x-order": 8
        },
        "num_samples": {
          "type": "integer",
          "title": "Num Samples",
          "default": 1,
          "maximum": 4,
          "minimum": 1,
          "x-order": 7,
          "description": "Number of outputs to generate"
        },
        "random_seed": {
          "type": "integer",
          "title": "Random Seed",
          "x-order": 9,
          "description": "Random seed for reproducibility, leave blank to randomize output"
        },
        "guidance_scale": {
          "type": "number",
          "title": "Guidance Scale",
          "default": 7.5,
          "maximum": 10,
          "minimum": 0,
          "x-order": 6,
          "description": "Guidance scale to match the prompt"
        },
        "negative_prompt": {
          "type": "string",
          "title": "Negative Prompt",
          "default": "anime, cartoon, graphic, text, painting, crayon, graphite, abstract, glitch, deformed, mutated, ugly, disfigured",
          "x-order": 2,
          "description": "Specify things to not see in the output"
        },
        "num_inference_steps": {
          "type": "integer",
          "title": "Num Inference Steps",
          "default": 30,
          "maximum": 100,
          "minimum": 0,
          "x-order": 3,
          "description": "Number of diffusion steps"
        },
        "adapter_conditioning_scale": {
          "type": "number",
          "title": "Adapter Conditioning Scale",
          "default": 1,
          "maximum": 5,
          "minimum": 0,
          "x-order": 4,
          "description": "Conditioning scale"
        },
        "adapter_conditioning_factor": {
          "type": "number",
          "title": "Adapter Conditioning Factor",
          "default": 1,
          "maximum": 1,
          "minimum": 0,
          "x-order": 5,
          "description": "Factor to scale image by"
        }
      }
    }
  },
  "imgutils_control/depth": {
    "name": "imgutils_control/depth",
    "schema": {
      "type": "object",
      "title": "Input",
      "translatable": [
        "prompt"
      ],
      "speech_enabled": [
        "prompt"
      ],
      "required": [
        "prompt",
        "control_image"
      ],
      "linkto": {
        "*": "*"
      },
      "map": {
        "control_image": "control_image",
        "prompt": "prompt"
      },
      "properties": {
        "seed": {
          "type": "integer",
          "title": "Seed",
          "x-order": 2,
          "description": "Random seed. Set for reproducible generation"
        },
        "steps": {
          "type": "integer",
          "title": "Steps",
          "default": 50,
          "maximum": 50,
          "minimum": 15,
          "x-order": 3,
          "description": "Number of diffusion steps. Higher values yield finer details but increase processing time."
        },
        "prompt": {
          "type": "string",
          "title": "Prompt",
          "x-order": 0,
          "description": "Text prompt for image generation"
        },
        "guidance": {
          "type": "number",
          "title": "Guidance",
          "default": 15,
          "maximum": 100,
          "minimum": 1,
          "x-order": 5,
          "description": "Controls the balance between adherence to the text as well as image prompt and image quality/diversity. Higher values make the output more closely match the prompt but may reduce overall image quality. Lower values allow for more creative freedom but might produce results less relevant to the prompt."
        },
        "control_image": {
          "type": "string",
          "title": "Control Image",
          "format": "uri",
          "fileType": "image",
          "x-order": 1,
          "description": "Image to use as control input. Must be jpeg, png, gif, or webp."
        },
        "output_format": {
          "enum": [
            "jpg",
            "png"
          ],
          "type": "string",
          "title": "output_format",
          "description": "Format of the output images.",
          "default": "jpg",
          "x-order": 7
        },
        "safety_tolerance": {
          "type": "integer",
          "title": "Safety Tolerance",
          "default": 2,
          "maximum": 6,
          "minimum": 1,
          "x-order": 6,
          "description": "Safety tolerance, 1 is most strict and 6 is most permissive"
        },
        "prompt_upsampling": {
          "type": "boolean",
          "title": "Prompt Upsampling",
          "default": false,
          "x-order": 4,
          "description": "Automatically modify the prompt for more creative generation"
        }
      }
    }
  },
  "imgutils_control/hed": {
    "name": "imgutils_control/hed",
    "schema": {
      "type": "object",
      "title": "Input",
      "required": [
        "input_image",
        "prompt"
      ],
      "translatable": [
        "prompt",
        "a_prompt",
        "n_prompt"
      ],
      "speech_enabled": [
        "prompt",
        "a_prompt",
        "n_prompt"
      ],
      "linkto": {
        "*": "*"
      },
      "map": {
        "input_image": "control_image",
        "prompt": "prompt"
      },
      "properties": {
        "eta": {
          "type": "number",
          "title": "Eta",
          "default": 0,
          "x-order": 7,
          "description": "eta (DDIM)"
        },
        "seed": {
          "type": "integer",
          "title": "Seed",
          "x-order": 6,
          "description": "Seed"
        },
        "scale": {
          "type": "number",
          "title": "Scale",
          "default": 9,
          "maximum": 30,
          "minimum": 0.1,
          "x-order": 5,
          "description": "Guidance Scale"
        },
        "prompt": {
          "type": "string",
          "title": "Prompt",
          "x-order": 1,
          "description": "Prompt for the model"
        },
        "a_prompt": {
          "type": "string",
          "title": "A Prompt",
          "default": "best quality, extremely detailed",
          "x-order": 8,
          "description": "Added Prompt"
        },
        "n_prompt": {
          "type": "string",
          "title": "N Prompt",
          "default": "longbody, lowres, bad anatomy, bad hands, missing fingers, extra digit, fewer digits, cropped, worst quality, low quality",
          "x-order": 9,
          "description": "Negative Prompt"
        },
        "ddim_steps": {
          "type": "integer",
          "title": "Ddim Steps",
          "default": 20,
          "x-order": 4,
          "description": "Steps"
        },
        "input_image": {
          "type": "string",
          "title": "Input Image",
          "format": "uri",
          "fileType": "image",
          "x-order": 0,
          "description": "Input image"
        },
        "num_samples": {
          "enum": [
            "1",
            "4"
          ],
          "type": "string",
          "title": "num_samples",
          "description": "Number of samples (higher values may OOM)",
          "default": "1",
          "x-order": 2
        },
        "image_resolution": {
          "enum": [
            "256",
            "512",
            "768"
          ],
          "type": "string",
          "title": "image_resolution",
          "description": "Image resolution to be generated",
          "default": "512",
          "x-order": 3
        },
        "detect_resolution": {
          "type": "integer",
          "title": "Detect Resolution",
          "default": 512,
          "maximum": 1024,
          "minimum": 128,
          "x-order": 10,
          "description": "Resolution for detection (only applicable when model type is 'HED')"
        }
      }
    }
  },
  "imgutils_control/controlnet_preprocessors": {
    "name": "imgutils_control/controlnet_preprocessors",
    "schema": {
      "type": "object",
      "title": "Input",
      "required": [
        "image"
      ],
      "linkto": {
        "*": "*"
      },
      "map": {
        "image": "control_image"
      },
      "properties": {
        "hed": {
          "type": "boolean",
          "title": "Hed",
          "default": true,
          "x-order": 4,
          "description": "Run HED detection"
        },
        "sam": {
          "type": "boolean",
          "title": "Sam",
          "default": true,
          "x-order": 12,
          "description": "Run Sam detection"
        },
        "mlsd": {
          "type": "boolean",
          "title": "Mlsd",
          "default": true,
          "x-order": 6,
          "description": "Run MLSD detection"
        },
        "pidi": {
          "type": "boolean",
          "title": "Pidi",
          "default": true,
          "x-order": 8,
          "description": "Run PidiNet detection"
        },
        "canny": {
          "type": "boolean",
          "title": "Canny",
          "default": true,
          "x-order": 1,
          "description": "Run canny edge detection"
        },
        "image": {
          "type": "string",
          "title": "Image",
          "format": "uri",
          "fileType": "image",
          "x-order": 0,
          "description": "Image to preprocess"
        },
        "leres": {
          "type": "boolean",
          "title": "Leres",
          "default": true,
          "x-order": 13,
          "description": "Run Leres detection"
        },
        "midas": {
          "type": "boolean",
          "title": "Midas",
          "default": true,
          "x-order": 5,
          "description": "Run Midas detection"
        },
        "content": {
          "type": "boolean",
          "title": "Content",
          "default": true,
          "x-order": 2,
          "description": "Run content shuffle detection"
        },
        "lineart": {
          "type": "boolean",
          "title": "Lineart",
          "default": true,
          "x-order": 10,
          "description": "Run Lineart detection"
        },
        "open_pose": {
          "type": "boolean",
          "title": "Open Pose",
          "default": true,
          "x-order": 7,
          "description": "Run Openpose detection"
        },
        "normal_bae": {
          "type": "boolean",
          "title": "Normal Bae",
          "default": true,
          "x-order": 9,
          "description": "Run NormalBae detection"
        },
        "face_detector": {
          "type": "boolean",
          "title": "Face Detector",
          "default": true,
          "x-order": 3,
          "description": "Run face detection"
        },
        "lineart_anime": {
          "type": "boolean",
          "title": "Lineart Anime",
          "default": true,
          "x-order": 11,
          "description": "Run LineartAnime detection"
        }
      }
    }
  },
  "imgutils_transfer/face": {
    "name": "imgutils_transfer/face",
    "schema": {
      "type": "object",
      "title": "Input",
      "required": [
        "input_image",
        "swap_image"
      ],
      "linkto": {
        "*": "*"
      },
      "map": {
        "input_image": "image",
        "swap_image": "swap_image"
      },
      "properties": {
        "swap_image": {
          "type": "string",
          "title": "Swap Image",
          "format": "uri",
          "fileType": "image",
          "x-order": 1,
          "description": "Swap image"
        },
        "input_image": {
          "type": "string",
          "title": "Input Image",
          "format": "uri",
          "fileType": "image",
          "x-order": 0,
          "description": "Target image"
        }
      }
    }
  },
  "imgutils_transfer/garment": {
    "name": "imgutils_transfer/garment",
    "schema": {
      "type": "object",
      "title": "Input",
      "required": [
        "garm_img",
        "human_img"
      ],
      "translatable": [
        "garment_des"
      ],
      "speech_enabled": [
        "garment_des"
      ],
      "linkto": {
        "*": "*"
      },
      "map": {
        "garm_img": "swap_image",
        "human_img": "image"
      },
      "properties": {
        "crop": {
          "type": "boolean",
          "title": "Crop",
          "default": false,
          "x-order": 5,
          "description": "Use cropping? (check this if your image is not 3:4)"
        },
        "seed": {
          "type": "integer",
          "title": "Seed",
          "default": 42,
          "x-order": 9
        },
        "steps": {
          "type": "integer",
          "title": "Steps",
          "default": 30,
          "maximum": 40,
          "minimum": 1,
          "x-order": 8
        },
        "category": {
          "enum": [
            "upper_body",
            "lower_body",
            "dresses"
          ],
          "type": "string",
          "title": "category",
          "description": "Category of garment",
          "default": "upper_body",
          "x-order": 4
        },
        "force_dc": {
          "type": "boolean",
          "title": "Force Dc",
          "default": false,
          "x-order": 6,
          "description": "Use the DressCode version of IDM-VTON (this is default false, except if category=dresses)"
        },
        "garm_img": {
          "type": "string",
          "title": "Garm Img",
          "format": "uri",
          "fileType": "image",
          "x-order": 0,
          "description": "Garment, should match the category, can be a product image or even a photo of someone"
        },
        "mask_img": {
          "type": "string",
          "title": "Mask Img",
          "format": "uri",
          "fileType": "image",
          "x-order": 3,
          "description": "Mask image, optional (but faster)"
        },
        "human_img": {
          "type": "string",
          "title": "Human Img",
          "format": "uri",
          "fileType": "image",
          "x-order": 2,
          "description": "Model, if this is not 3:4 check crop"
        },
        "mask_only": {
          "type": "boolean",
          "title": "Mask Only",
          "default": false,
          "x-order": 7,
          "description": "Return only the mask"
        },
        "garment_des": {
          "type": "string",
          "title": "Garment Des",
          "x-order": 1,
          "description": "Description of garment e.g. Short Sleeve Round Neck T-shirt"
        }
      }
    }
  },
  "imgutils_transfer/fashn_tryon": {
    "name": "imgutils_transfer/fashn_tryon",
    "schema": {
      "type": "object",
      "title": "Input",
      "required": [
        "model_image",
        "garment_image"
      ],
      "linkto": {
        "*": "*"
      },
      "map": {
        "model_image": "image",
        "garment_image": "swap_image"
      },
      "properties": {
        "model_image": {
          "type": "string",
          "format": "uri",
          "title": "Model Image",
          "x-order": 0,
          "fileType": "image",
          "description": "URL or base64 of the model image"
        },
        "garment_image": {
          "type": "string",
          "format": "uri",
          "fileType": "image",
          "title": "Garment Image",
          "x-order": 1,
          "description": "URL or base64 of the garment image"
        },
        "category": {
          "type": "string",
          "title": "Category",
          "x-order": 2,
          "enum": [
            "tops",
            "bottoms",
            "one-pieces",
            "auto"
          ],
          "default": "auto",
          "description": "Category of the garment to try-on. 'auto' will attempt to automatically detect the category of the garment"
        },
        "mode": {
          "type": "string",
          "title": "Mode",
          "x-order": 3,
          "enum": [
            "performance",
            "balanced",
            "quality"
          ],
          "default": "quality",
          "display": "hidden",
          "description": "Specifies the mode of operation. 'performance' mode is faster but may sacrifice quality, 'balanced' mode is a balance between speed and quality, and 'quality' mode is slower but produces higher quality results"
        },
        "garment_photo_type": {
          "type": "string",
          "title": "Garment Photo Type",
          "x-order": 4,
          "enum": [
            "auto",
            "model",
            "flat-lay"
          ],
          "default": "auto",
          "description": "Specifies the type of garment photo to optimize internal parameters for better performance. 'model' is for photos of garments on a model, 'flat-lay' is for flat-lay or ghost mannequin images, and 'auto' attempts to automatically detect the photo type"
        },
        "moderation_level": {
          "type": "string",
          "title": "Moderation Level",
          "x-order": 5,
          "display": "hidden",
          "enum": [
            "none",
            "permissive",
            "conservative"
          ],
          "default": "conservative",
          "description": "Content moderation level for garment images. 'none' disables moderation, 'permissive' blocks only explicit content, 'conservative' also blocks underwear and swimwear"
        },
        "seed": {
          "type": "integer",
          "title": "Seed",
          "x-order": 6,
          "default": 42,
          "description": "Sets random operations to a fixed state. Use the same seed to reproduce results with the same inputs, or different seed to force different results"
        },
        "num_samples": {
          "type": "integer",
          "title": "Number of Samples",
          "x-order": 7,
          "display": "hidden",
          "default": 1,
          "description": "Number of images to generate in a single run. Image generation has a random element in it, so trying multiple images at once increases the chances of getting a good result"
        },
        "segmentation_free": {
          "type": "boolean",
          "title": "Segmentation Free",
          "x-order": 8,
          "display": "hidden",
          "default": true,
          "description": "Disables human parsing on the model image"
        },
        "output_format": {
          "type": "string",
          "title": "Output Format",
          "x-order": 9,
          "enum": [
            "png",
            "jpeg"
          ],
          "default": "png",
          "description": "Output format of the generated images. 'png' is highest quality, while 'jpeg' is faster"
        }
      }
    }
  },
  "imgutils_transfer/material": {
    "name": "imgutils_transfer/material",
    "schema": {
      "type": "object",
      "title": "Input",
      "required": [
        "material_image",
        "subject_image"
      ],
      "translatable": [
        "prompt",
        "negative_prompt"
      ],
      "speech_enabled": [
        "prompt",
        "negative_prompt"
      ],
      "linkto": {
        "*": "*"
      },
      "map": {
        "material_image": "swap_image",
        "subject_image": "image"
      },
      "properties": {
        "seed": {
          "type": "integer",
          "title": "Seed",
          "x-order": 10,
          "description": "Set a seed for reproducibility. Random by default."
        },
        "steps": {
          "type": "integer",
          "title": "Steps",
          "default": 6,
          "x-order": 5,
          "description": "Number of steps. 6 steps gives good results, but try increasing to 15 or 20 if you need more detail"
        },
        "prompt": {
          "type": "string",
          "title": "Prompt",
          "default": "marble sculpture",
          "x-order": 2,
          "description": "Use a prompt that describe the image when the material is applied"
        },
        "max_width": {
          "type": "integer",
          "title": "Max Width",
          "default": 1920,
          "x-order": 6,
          "description": "Max width of the output image"
        },
        "max_height": {
          "type": "integer",
          "title": "Max Height",
          "default": 1920,
          "x-order": 7,
          "description": "Max height of the output image"
        },
        "output_format": {
          "enum": [
            "webp",
            "jpg",
            "png"
          ],
          "type": "string",
          "title": "output_format",
          "description": "Format of the output images",
          "default": "webp",
          "x-order": 11
        },
        "subject_image": {
          "type": "string",
          "title": "Subject Image",
          "format": "uri",
          "fileType": "image",
          "x-order": 1,
          "description": "Subject image to transfer the material to"
        },
        "guidance_scale": {
          "type": "number",
          "title": "Guidance Scale",
          "default": 2,
          "maximum": 10,
          "minimum": 1,
          "x-order": 4,
          "description": "Guidance scale for the diffusion process"
        },
        "material_image": {
          "type": "string",
          "title": "Material Image",
          "format": "uri",
          "fileType": "image",
          "x-order": 0,
          "description": "Material to transfer to the input image"
        },
        "output_quality": {
          "type": "integer",
          "title": "Output Quality",
          "default": 80,
          "maximum": 100,
          "minimum": 0,
          "x-order": 12,
          "description": "Quality of the output images, from 0 to 100. 100 is best quality, 0 is lowest quality."
        },
        "negative_prompt": {
          "type": "string",
          "title": "Negative Prompt",
          "default": "",
          "x-order": 3,
          "description": "What you do not want to see in the image"
        },
        "material_strength": {
          "enum": [
            "medium",
            "strong"
          ],
          "type": "string",
          "title": "material_strength",
          "description": "Strength of the material",
          "default": "medium",
          "x-order": 8
        },
        "return_intermediate_images": {
          "type": "boolean",
          "title": "Return Intermediate Images",
          "default": false,
          "display": "hidden",
          "x-order": 9,
          "description": "Return intermediate images like mask, and annotated images. Useful for debugging."
        }
      }
    }
  },
  "imgutils_transfer/style": {
    "name": "imgutils_transfer/style",
    "schema": {
      "type": "object",
      "title": "Input",
      "required": [
        "image",
        "image_style"
      ],
      "translatable": [
        "prompt",
        "negative_prompt"
      ],
      "speech_enabled": [
        "prompt",
        "negative_prompt"
      ],
      "linkto": {
        "*": "*"
      },
      "map": {
        "image": "image",
        "image_style": "swap_image"
      },
      "properties": {
        "seed": {
          "type": "integer",
          "title": "Seed",
          "default": 1337,
          "x-order": 8,
          "description": "Leave blank to randomize the seed"
        },
        "image": {
          "type": "string",
          "title": "Image",
          "format": "uri",
          "fileType": "image",
          "x-order": 0,
          "description": "input image"
        },
        "prompt": {
          "type": "string",
          "title": "Prompt",
          "default": "masterpiece, best quality, highres",
          "x-order": 4,
          "description": "Prompt"
        },
        "image_style": {
          "type": "string",
          "title": "Image Style",
          "format": "uri",
          "fileType": "image",
          "x-order": 1,
          "description": "image for style"
        },
        "guidance_scale": {
          "type": "number",
          "title": "Guidance Scale",
          "default": 8,
          "maximum": 50,
          "minimum": 1,
          "x-order": 7,
          "description": "Scale for classifier-free guidance"
        },
        "style_strength": {
          "type": "number",
          "title": "Style Strength",
          "default": 0.4,
          "maximum": 3,
          "minimum": 0,
          "x-order": 2,
          "description": "How much the style should get applied"
        },
        "negative_prompt": {
          "type": "string",
          "title": "Negative Prompt",
          "default": "worst quality, low quality, normal quality",
          "x-order": 5,
          "description": "Negative Prompt"
        },
        "structure_strength": {
          "type": "number",
          "title": "Structure Strength",
          "default": 0.6,
          "maximum": 3,
          "minimum": 0,
          "x-order": 3,
          "description": "How much the structure should keep the same"
        },
        "num_inference_steps": {
          "type": "integer",
          "title": "Num Inference Steps",
          "default": 30,
          "maximum": 100,
          "minimum": 1,
          "x-order": 6,
          "description": "Number of denoising steps"
        }
      }
    }
  },
  "imgutils_transfer/easel_face_swap": {
    "name": "imgutils_transfer/easel_face_swap",
    "schema": {
      "type": "object",
      "title": "Input",
      "required": [
        "target_image",
        "swap_image"
      ],
      "linkto": {
        "*": "*"
      },
      "map": {
        "target_image": "image",
        "swap_image": "swap_image"
      },
      "properties": {
        "upscale": {
          "type": "boolean",
          "title": "Upscale",
          "default": true,
          "x-order": 6,
          "description": "Apply 2x upscale and boost quality. Upscaling will refine the image and make the subjects brighter. Default value: true"
        },
        "detailer": {
          "type": "boolean",
          "title": "Detailer",
          "default": false,
          "x-order": 7,
          "description": "(Beta) Apply detailer to the image. Detailer will improve certain image details, but slightly increase generation time."
        },
        "swap_image": {
          "type": "string",
          "title": "Swap Image",
          "format": "uri",
          "fileType": "image",
          "x-order": 1,
          "description": "The face image to swap from"
        },
        "hair_source": {
          "enum": [
            "user",
            "target"
          ],
          "type": "string",
          "title": "hair_source",
          "description": "Choose whose hairstyle to preserve: 'user' preserves hairstyle from face image, 'target' preserves from target image",
          "default": "user",
          "x-order": 5
        },
        "user_gender": {
          "enum": [
            "a man",
            "a woman"
          ],
          "type": "string",
          "title": "user_gender",
          "description": "Optional description of user gender ('a man', 'a woman'), used for multi-user swaps",
          "default": "a woman",
          "x-order": 3
        },
        "swap_image_b": {
          "type": "string",
          "title": "Swap Image B",
          "format": "uri",
          "x-order": 2,
          "description": "Optional second face image to swap from"
        },
        "target_image": {
          "type": "string",
          "title": "Target Image",
          "format": "uri",
          "fileType": "image",
          "x-order": 0,
          "description": "The image to swap onto"
        },
        "user_b_gender": {
          "enum": [
            "a man",
            "a woman"
          ],
          "type": "string",
          "title": "user_b_gender",
          "description": "Optional description of second user's gender for multi-user swaps",
          "default": "a woman",
          "x-order": 4
        }
      }
    }
  },
  "imgutils_transfer/easel_fashion_photoshoot": {
    "name": "imgutils_transfer/easel_fashion_photoshoot",
    "schema": {
      "type": "object",
      "title": "Input",
      "required": [
        "garment_image",
        "face_image",
        "gender"
      ],
      "linkto": {
        "*": "*"
      },
      "map": {
        "face_image": "image",
        "garment_image": "swap_image"
      },
      "properties": {
        "garment_image": {
          "type": "string",
          "title": "Garment Image",
          "description": "The garment image to be used for the fashion shoot.",
          "format": "uri",
          "fileType": "image",
          "x-order": 0
        },
        "face_image": {
          "type": "string",
          "title": "Face Image",
          "description": "The user's face image used for the fashion shoot.",
          "format": "uri",
          "fileType": "image",
          "x-order": 1
        },
        "gender": {
          "type": "string",
          "title": "Gender",
          "description": "The model's gender for the fashion shoot.",
          "enum": [
            "male",
            "female"
          ],
          "x-order": 2
        },
        "body_size": {
          "type": "string",
          "title": "Body Size",
          "description": "The body size for the fashion shoot.",
          "enum": [
            "XS",
            "S",
            "M",
            "L",
            "XL"
          ],
          "default": "L",
          "x-order": 3
        },
        "location": {
          "type": "string",
          "title": "Location",
          "description": "Sets the location / background for the fashion shoot.",
          "enum": [
            "park",
            "city"
          ],
          "default": "park",
          "x-order": 4
        }
      }
    }
  },
  "imgutils_transfer/easel_virtual_tryon": {
    "name": "imgutils_transfer/easel_virtual_tryon",
    "schema": {
      "type": "object",
      "title": "Input",
      "required": [
        "full_body_image",
        "clothing_image",
        "gender"
      ],
      "linkto": {
        "*": "*"
      },
      "map": {
        "full_body_image": "image",
        "clothing_image": "swap_image"
      },
      "properties": {
        "full_body_image": {
          "type": "string",
          "title": "Full Body Image",
          "description": "The reference person full body image to try clothes on",
          "format": "uri",
          "fileType": "image",
          "x-order": 0
        },
        "clothing_image": {
          "type": "string",
          "title": "Clothing Image",
          "description": "The clothing item to try on the person",
          "format": "uri",
          "fileType": "image",
          "x-order": 1
        },
        "gender": {
          "type": "string",
          "title": "Gender",
          "description": "The model's gender for the try-on. Default value: \"female\"",
          "enum": [
            "male",
            "female"
          ],
          "default": "female",
          "x-order": 2
        }
      }
    }
  },
  "imgutils/variations": {
    "name": "imgutils/variations",
    "schema": {
      "type": "object",
      "title": "Input",
      "linkto": {
        "*": "*"
      },
      "map": {
        "redux_image": "image"
      },
      "properties": {
        "seed": {
          "type": "integer",
          "title": "Seed",
          "x-order": 5,
          "description": "Random seed. Set for reproducible generation"
        },
        "guidance": {
          "type": "number",
          "title": "Guidance",
          "default": 3,
          "maximum": 10,
          "minimum": 0,
          "x-order": 4,
          "description": "Guidance for generated image"
        },
        "megapixels": {
          "enum": [
            "1",
            "0.25"
          ],
          "type": "string",
          "title": "megapixels",
          "description": "Approximate number of megapixels for generated image",
          "default": "1",
          "x-order": 9
        },
        "num_outputs": {
          "type": "integer",
          "title": "Num Outputs",
          "default": 4,
          "maximum": 4,
          "minimum": 1,
          "x-order": 2,
          "description": "Number of outputs to generate"
        },
        "redux_image": {
          "type": "string",
          "title": "Redux Image",
          "format": "uri",
          "fileType": "image",
          "x-order": 0,
          "description": "Input image to condition your output on. This replaces prompt for FLUX.1 Redux models"
        },
        "aspect_ratio": {
          "enum": [
            "1:1",
            "16:9",
            "21:9",
            "3:2",
            "2:3",
            "4:5",
            "5:4",
            "3:4",
            "4:3",
            "9:16",
            "9:21"
          ],
          "type": "string",
          "title": "aspect_ratio",
          "description": "Aspect ratio for the generated image",
          "default": "1:1",
          "x-order": 1
        },
        "output_format": {
          "enum": [
            "webp",
            "jpg",
            "png"
          ],
          "type": "string",
          "title": "output_format",
          "description": "Format of the output images",
          "default": "webp",
          "x-order": 6
        },
        "output_quality": {
          "type": "integer",
          "title": "Output Quality",
          "default": 80,
          "maximum": 100,
          "minimum": 0,
          "x-order": 7,
          "description": "Quality when saving the output images, from 0 to 100. 100 is best quality, 0 is lowest quality. Not relevant for .png outputs"
        },
        "num_inference_steps": {
          "type": "integer",
          "title": "Num Inference Steps",
          "default": 28,
          "maximum": 50,
          "minimum": 1,
          "x-order": 3,
          "description": "Number of denoising steps. Recommended range is 28-50"
        },
        "disable_safety_checker": {
          "type": "boolean",
          "title": "Disable Safety Checker",
          "default": true,
          "display": "hidden",
          "x-order": 8,
          "description": "Disable safety checker for generated images."
        }
      }
    }
  },
  "imgutils/inpainting": {
    "name": "imgutils/inpainting",
    "schema": {
      "type": "object",
      "title": "Input",
      "required": [
        "prompt",
        "image"
      ],
      "translatable": [
        "prompt"
      ],
      "speech_enabled": [
        "prompt"
      ],
      "linkto": {
        "*": "*"
      },
      "map": {
        "image": "image",
        "prompt": "prompt"
      },
      "properties": {
        "mask": {
          "type": "string",
          "title": "Mask",
          "extra": "Create mask",
          "default_extra": "image",
          "default_type": "mask",
          "format": "uri",
          "fileType": "image",
          "x-order": 2,
          "description": "A black-and-white image that describes the part of the image to inpaint. Black areas will be preserved while white areas will be inpainted. Must have the same size as image. Optional if you provide an alpha mask in the original image. Must be jpeg, png, gif, or webp."
        },
        "seed": {
          "type": "integer",
          "title": "Seed",
          "x-order": 4,
          "description": "Random seed. Set for reproducible generation"
        },
        "image": {
          "type": "string",
          "title": "Image",
          "format": "uri",
          "fileType": "image",
          "x-order": 1,
          "description": "The image to inpaint. Can contain an alpha mask. Must be jpeg, png, gif, or webp."
        },
        "steps": {
          "type": "integer",
          "title": "Steps",
          "default": 50,
          "maximum": 50,
          "minimum": 15,
          "x-order": 5,
          "description": "Number of diffusion steps. Higher values yield finer details but increase processing time."
        },
        "prompt": {
          "type": "string",
          "title": "Prompt",
          "x-order": 0,
          "description": "Text prompt for image generation"
        },
        "guidance": {
          "type": "number",
          "title": "Guidance",
          "default": 60,
          "maximum": 100,
          "minimum": 1.5,
          "x-order": 7,
          "description": "Controls the balance between adherence to the text prompt and image quality/diversity. Higher values make the output more closely match the prompt but may reduce overall image quality. Lower values allow for more creative freedom but might produce results less relevant to the prompt."
        },
        "outpaint": {
          "enum": [
            "None",
            "Zoom out 1.5x",
            "Zoom out 2x",
            "Make square",
            "Left outpaint",
            "Right outpaint",
            "Top outpaint",
            "Bottom outpaint"
          ],
          "type": "string",
          "title": "outpaint",
          "description": "A quick option for outpainting an input image. Mask will be ignored.",
          "default": "None",
          "x-order": 3
        },
        "output_format": {
          "enum": [
            "jpg",
            "png"
          ],
          "type": "string",
          "title": "output_format",
          "description": "Format of the output images.",
          "default": "jpg",
          "x-order": 9
        },
        "safety_tolerance": {
          "type": "integer",
          "title": "Safety Tolerance",
          "default": 2,
          "maximum": 6,
          "minimum": 1,
          "x-order": 8,
          "description": "Safety tolerance, 1 is most strict and 6 is most permissive"
        },
        "prompt_upsampling": {
          "type": "boolean",
          "title": "Prompt Upsampling",
          "default": false,
          "x-order": 6,
          "description": "Automatically modify the prompt for more creative generation"
        }
      }
    }
  },
  "imgutils/sa2va_26b_image": {
    "name": "imgutils/sa2va_26b_image",
    "schema": {
      "type": "object",
      "title": "Input",
      "required": [
        "image",
        "instruction"
      ],
      "translatable": [
        "instruction"
      ],
      "speech_enabled": [
        "instruction"
      ],
      "linkto": {
        "*": "*"
      },
      "map": {
        "image": "image",
        "instruction": "prompt"
      },
      "properties": {
        "image": {
          "type": "string",
          "title": "Image",
          "format": "uri",
          "fileType": "image",
          "x-order": 0,
          "description": "Input image for segmentation"
        },
        "instruction": {
          "type": "string",
          "title": "Instruction",
          "x-order": 1,
          "description": "Text instruction for the model. Add 'Segment the' to create a mask."
        }
      }
    }
  },
  "imgutils/gemini_flash2_imgedit": {
    "name": "imgutils/gemini_flash2_imgedit",
    "schema": {
      "type": "object",
      "title": "Input",
      "required": [
        "prompt"
      ],
      "translatable": [
        "prompt"
      ],
      "speech_enabled": [
        "prompt"
      ],
      "linkto": {
        "*": "*"
      },
      "map": {
        "image_url": "image",
        "prompt": "prompt"
      },
      "properties": {
        "image_url": {
          "type": "string",
          "title": "Image URL",
          "fileType": "image",
          "x-order": 1,
          "format": "uri",
          "description": "URL of the input image to animate. Should be 720p or higher resolution."
        },
        "prompt": {
          "type": "string",
          "title": "Prompt",
          "x-order": 0,
          "description": "Text prompt for video generation"
        }
      }
    }
  },
  "imgutils/gemini_flash2_imgedit_multi": {
    "name": "imgutils/gemini_flash2_imgedit_multi",
    "schema": {
      "type": "object",
      "title": "Input",
      "required": [
        "prompt",
        "input_image_urls"
      ],
      "translatable": [
        "prompt"
      ],
      "speech_enabled": [
        "prompt"
      ],
      "linkto": {
        "*": "*"
      },
      "map": {
        "prompt": "prompt"
      },
      "properties": {
        "prompt": {
          "type": "string",
          "title": "Prompt",
          "description": "Text prompt for video generation, max 1500 characters",
          "maxLength": 1500,
          "x-order": 0
        },
        "input_image_urls": {
          "type": "array",
          "items": {
            "type": "string",
            "format": "uri",
            "fileType": "image"
          },
          "title": "Reference Image URLs",
          "description": "URLs of the reference images to use for consistent subject appearance",
          "maxItems": 4,
          "x-order": 1
        }
      }
    }
  },
  "imgutils/step1x_edit": {
    "name": "imgutils/step1x_edit",
    "schema": {
      "type": "object",
      "title": "Input",
      "required": [
        "image"
      ],
      "translatable": [
        "prompt"
      ],
      "speech_enabled": [
        "prompt"
      ],
      "linkto": {
        "*": "*"
      },
      "map": {
        "image": "image",
        "prompt": "prompt"
      },
      "properties": {
        "seed": {
          "type": "integer",
          "title": "Seed",
          "x-order": 3,
          "description": "Random seed for reproducible results (leave blank for random)"
        },
        "image": {
          "type": "string",
          "title": "Image",
          "format": "uri",
          "fileType": "image",
          "x-order": 0,
          "description": "Input image"
        },
        "prompt": {
          "type": "string",
          "title": "Prompt",
          "default": "Remove the person from the image.",
          "x-order": 1,
          "description": "Editing instruction prompt"
        },
        "size_level": {
          "enum": [
            512,
            768,
            1024
          ],
          "type": "integer",
          "title": "size_level",
          "description": "Internal resolution (larger values process slower but may capture finer details)",
          "default": 512,
          "x-order": 2
        },
        "output_format": {
          "enum": [
            "webp",
            "jpg",
            "png"
          ],
          "type": "string",
          "title": "output_format",
          "description": "Output image format",
          "default": "webp",
          "x-order": 4
        },
        "output_quality": {
          "type": "integer",
          "title": "Output Quality",
          "default": 80,
          "maximum": 100,
          "minimum": 1,
          "x-order": 5,
          "description": "Compression quality for JPEG / WebP (1-100)"
        }
      }
    }
  },
  "imgutils/topaz_upscale": {
    "name": "imgutils/topaz_upscale",
    "schema": {
      "type": "object",
      "title": "Input",
      "required": [
        "image"
      ],
      "linkto": {
        "*": "*"
      },
      "map": {
        "image": "image"
      },
      "properties": {
        "image": {
          "type": "string",
          "title": "Image",
          "format": "uri",
          "fileType": "image",
          "x-order": 0,
          "description": "Image to enhance"
        },
        "enhance_model": {
          "enum": [
            "Standard V2",
            "Low Resolution V2",
            "CGI",
            "High Fidelity V2",
            "Text Refine"
          ],
          "type": "string",
          "title": "enhance_model",
          "description": "Model to use: Standard V2 (general purpose), Low Resolution V2 (for low-res images), CGI (for digital art), High Fidelity V2 (preserves details), Text Refine (optimized for text)",
          "default": "Standard V2",
          "x-order": 1
        },
        "output_format": {
          "enum": [
            "jpg",
            "png"
          ],
          "type": "string",
          "title": "output_format",
          "description": "Output format",
          "default": "jpg",
          "x-order": 3
        },
        "upscale_factor": {
          "enum": [
            "None",
            "2x",
            "4x",
            "6x"
          ],
          "type": "string",
          "title": "upscale_factor",
          "description": "How much to upscale the image",
          "default": "None",
          "x-order": 2
        },
        "face_enhancement": {
          "type": "boolean",
          "title": "Face Enhancement",
          "default": false,
          "x-order": 5,
          "description": "Enhance faces in the image"
        },
        "subject_detection": {
          "enum": [
            "None",
            "All",
            "Foreground",
            "Background"
          ],
          "type": "string",
          "title": "subject_detection",
          "description": "Subject detection",
          "default": "None",
          "x-order": 4
        },
        "face_enhancement_strength": {
          "type": "number",
          "title": "Face Enhancement Strength",
          "default": 0.8,
          "maximum": 1,
          "minimum": 0,
          "x-order": 7,
          "description": "Control how sharp the enhanced faces are relative to the background from 0 to 1. Defaults to 0.8, and is ignored if face_enhancement is false."
        },
        "face_enhancement_creativity": {
          "type": "number",
          "title": "Face Enhancement Creativity",
          "default": 0,
          "maximum": 1,
          "minimum": 0,
          "x-order": 6,
          "description": "Choose the level of creativity for face enhancement from 0 to 1. Defaults to 0, and is ignored if face_enhancement is false."
        }
      }
    }
  },
  "imgutils/recraft_crisp_upscale": {
    "name": "imgutils/recraft_crisp_upscale",
    "schema": {
      "type": "object",
      "title": "Input",
      "required": [
        "image"
      ],
      "linkto": {
        "*": "*"
      },
      "map": {
        "image_filter": "image_filter",
        "aspect_ratio": "aspect_ratio",
        "seed": "seed",
        "image": "image",
        "mask": "mask",
        "prompt": "prompt"
      },
      "properties": {
        "image": {
          "type": "string",
          "title": "Image",
          "format": "uri",
          "fileType": "image",
          "x-order": 1,
          "description": "Image to upscale"
        }
      }
    }
  },
  "imgutils/recraft_creative_upscale": {
    "name": "imgutils/recraft_creative_upscale",
    "schema": {
      "type": "object",
      "title": "Input",
      "required": [
        "image_url"
      ],
      "linkto": {
        "*": "*"
      },
      "map": {
        "image_filter": "image_filter",
        "aspect_ratio": "aspect_ratio",
        "seed": "seed",
        "image_url": "image",
        "mask": "mask",
        "prompt": "prompt"
      },
      "properties": {
        "image_url": {
          "type": "string",
          "title": "Image URL",
          "description": "The URL of the image to upscale.",
          "fileType": "image",
          "format": "uri",
          "x-order": 0
        },
        "prompt": {
          "type": "string",
          "title": "Prompt",
          "description": "The prompt to use for generating the image. Be as descriptive as possible for best results.",
          "default": "masterpiece, best quality, highres",
          "x-order": 1
        },
        "upscale_factor": {
          "type": "number",
          "title": "Upscale Factor",
          "description": "The upscale factor",
          "default": 2,
          "minimum": 1,
          "maximum": 4,
          "step": 0.1,
          "x-order": 2
        },
        "negative_prompt": {
          "type": "string",
          "title": "Negative Prompt",
          "description": "The negative prompt to use. Use it to address details that you don't want in the image.",
          "default": "(worst quality, low quality, normal quality:2)",
          "x-order": 3
        },
        "creativity": {
          "type": "number",
          "title": "Creativity",
          "description": "The creativity of the model. The higher the creativity, the more the model will deviate from the prompt. Refers to the denoise strength of the sampling.",
          "default": 0.35,
          "minimum": 0,
          "maximum": 1,
          "step": 0.1,
          "x-order": 4
        },
        "resemblance": {
          "type": "number",
          "title": "Resemblance",
          "description": "The resemblance of the upscaled image to the original image. The higher the resemblance, the more the model will try to keep the original image. Refers to the strength of the ControlNet.",
          "default": 0.6,
          "minimum": 0.1,
          "maximum": 1,
          "step": 0.1,
          "x-order": 5
        },
        "guidance_scale": {
          "type": "number",
          "title": "Guidance Scale",
          "description": "The CFG (Classifier Free Guidance) scale is a measure of how close you want the model to stick to your prompt when looking for a related image to show you.",
          "default": 4,
          "display": "hidden",
          "x-order": 6
        },
        "num_inference_steps": {
          "type": "integer",
          "title": "Number of Inference Steps",
          "description": "The number of inference steps to perform.",
          "default": 18,
          "display": "hidden",
          "x-order": 7
        },
        "seed": {
          "type": "integer",
          "title": "Seed",
          "description": "The same seed and the same prompt given to the same version of Stable Diffusion will output the same image every time.",
          "x-order": 8
        }
      }
    }
  },
  "imgutils/ideogram_upscale": {
    "name": "imgutils/ideogram_upscale",
    "schema": {
      "type": "object",
      "title": "Input",
      "required": [
        "image_url"
      ],
      "linkto": {
        "*": "*"
      },
      "map": {
        "image_filter": "image_filter",
        "aspect_ratio": "aspect_ratio",
        "seed": "seed",
        "image_url": "image",
        "mask": "mask",
        "prompt": "prompt"
      },
      "properties": {
        "image_url": {
          "type": "string",
          "title": "Image URL",
          "description": "The image URL to upscale",
          "fileType": "image",
          "format": "uri",
          "x-order": 0
        },
        "prompt": {
          "type": "string",
          "title": "Prompt",
          "description": "The prompt to upscale the image with",
          "default": "",
          "x-order": 1
        },
        "resemblance": {
          "type": "integer",
          "title": "Resemblance",
          "description": "The resemblance of the upscaled image to the original image",
          "default": 50,
          "minimum": 0,
          "maximum": 100,
          "x-order": 2
        },
        "detail": {
          "type": "integer",
          "title": "Detail",
          "description": "The detail of the upscaled image",
          "default": 50,
          "minimum": 0,
          "maximum": 100,
          "x-order": 3
        },
        "expand_prompt": {
          "type": "boolean",
          "title": "Expand Prompt",
          "description": "Whether to expand the prompt with MagicPrompt functionality",
          "default": false,
          "x-order": 4
        },
        "seed": {
          "type": "integer",
          "title": "Seed",
          "description": "Seed for the random number generator",
          "x-order": 5
        }
      }
    }
  },
  "imgutils/ideogram_character": {
    "name": "imgutils/ideogram_character",
    "schema": {
      "type": "object",
      "title": "Input",
      "translatable": [
        "prompt"
      ],
      "speech_enabled": [
        "prompt"
      ],
      "linkto": {
        "*": "*"
      },
      "map": {
        "prompt": "prompt",
        "character_reference_image": "image"
      },
      "required": [
        "prompt",
        "character_reference_image"
      ],
      "properties": {
        "seed": {
          "type": "integer",
          "title": "Seed",
          "maximum": 2147483647,
          "x-order": 9,
          "description": "Random seed. Set for reproducible generation"
        },
        "prompt": {
          "type": "string",
          "title": "Prompt",
          "x-order": 0,
          "description": "Text prompt for image generation"
        },
        "resolution": {
          "enum": [
            "None",
            "512x1536",
            "576x1408",
            "576x1472",
            "576x1536",
            "640x1344",
            "640x1408",
            "640x1472",
            "640x1536",
            "704x1152",
            "704x1216",
            "704x1280",
            "704x1344",
            "704x1408",
            "704x1472",
            "736x1312",
            "768x1088",
            "768x1216",
            "768x1280",
            "768x1344",
            "800x1280",
            "832x960",
            "832x1024",
            "832x1088",
            "832x1152",
            "832x1216",
            "832x1248",
            "864x1152",
            "896x960",
            "896x1024",
            "896x1088",
            "896x1120",
            "896x1152",
            "960x832",
            "960x896",
            "960x1024",
            "960x1088",
            "1024x832",
            "1024x896",
            "1024x960",
            "1024x1024",
            "1088x768",
            "1088x832",
            "1088x896",
            "1088x960",
            "1120x896",
            "1152x704",
            "1152x832",
            "1152x864",
            "1152x896",
            "1216x704",
            "1216x768",
            "1216x832",
            "1248x832",
            "1280x704",
            "1280x768",
            "1280x800",
            "1312x736",
            "1344x640",
            "1344x704",
            "1344x768",
            "1408x576",
            "1408x640",
            "1408x704",
            "1472x576",
            "1472x640",
            "1472x704",
            "1536x512",
            "1536x576",
            "1536x640"
          ],
          "type": "string",
          "title": "resolution",
          "description": "Resolution. Overrides aspect ratio. Ignored if an inpainting image is given.",
          "default": "None",
          "x-order": 5
        },
        "style_type": {
          "enum": [
            "Auto",
            "Fiction",
            "Realistic"
          ],
          "type": "string",
          "title": "style_type",
          "description": "The character style type. Auto, Fiction, or Realistic.",
          "default": "Auto",
          "x-order": 3
        },
        "aspect_ratio": {
          "enum": [
            "1:3",
            "3:1",
            "1:2",
            "2:1",
            "9:16",
            "16:9",
            "10:16",
            "16:10",
            "2:3",
            "3:2",
            "3:4",
            "4:3",
            "4:5",
            "5:4",
            "1:1"
          ],
          "type": "string",
          "title": "aspect_ratio",
          "description": "Aspect ratio. Ignored if a resolution or inpainting image is given.",
          "default": "1:1",
          "x-order": 4
        },
        "rendering_speed": {
          "enum": [
            "Default",
            "Turbo",
            "Quality"
          ],
          "type": "string",
          "title": "rendering_speed",
          "description": "Rendering speed. Turbo for faster and cheaper generation, quality for higher quality and more expensive generation, default for balanced.",
          "default": "Default",
          "x-order": 1
        },
        "magic_prompt_option": {
          "enum": [
            "Auto",
            "On",
            "Off"
          ],
          "type": "string",
          "title": "magic_prompt_option",
          "description": "Magic Prompt will interpret your prompt and optimize it to maximize variety and quality of the images generated. You can also use it to write prompts in different languages.",
          "default": "Auto",
          "x-order": 6
        },
        "character_reference_image": {
          "type": "string",
          "title": "Character Reference Image",
          "format": "uri",
          "fileType": "image",
          "x-order": 2,
          "description": "An image to use as a character reference."
        }
      }
    }
  },
  "imgutils/flux_kontext_dev": {
    "name": "imgutils/flux_kontext_dev",
    "schema": {
      "type": "object",
      "title": "Input",
      "required": [
        "prompt"
      ],
      "translatable": [
        "prompt"
      ],
      "speech_enabled": [
        "prompt"
      ],
      "linkto": {
        "*": "*"
      },
      "map": {
        "prompt": "prompt",
        "img_cond_path": "image"
      },
      "properties": {
        "seed": {
          "type": "integer",
          "title": "Seed",
          "x-order": 5,
          "description": "Seed"
        },
        "prompt": {
          "type": "string",
          "title": "Prompt",
          "x-order": 0,
          "description": "Prompt"
        },
        "guidance": {
          "type": "number",
          "title": "Guidance",
          "default": 2.5,
          "x-order": 4,
          "description": "Guidance scale"
        },
        "speed_mode": {
          "enum": [
            "Base (default)",
            "Lightly Juiced 🍊 (more consistent)",
            "Juiced 🔥 (default)",
            "Extra Juiced 🔥 (more speed)",
            "Blink of an Eye 🤯 (fastest)",
            "Real Time"
          ],
          "type": "string",
          "title": "speed_mode",
          "description": "Speed optimization level",
          "default": "Juiced 🔥 (default)",
          "x-order": 2
        },
        "aspect_ratio": {
          "enum": [
            "match_input_image",
            "1:1",
            "16:9",
            "21:9",
            "3:2",
            "2:3",
            "4:5",
            "5:4",
            "3:4",
            "4:3",
            "9:16",
            "9:21"
          ],
          "type": "string",
          "title": "aspect_ratio",
          "description": "Aspect ratio of the output image",
          "default": "match_input_image",
          "x-order": 6
        },
        "img_cond_path": {
          "type": "string",
          "title": "Image",
          "format": "uri",
          "fileType": "image",
          "x-order": 1,
          "description": "Input image to edit."
        },
        "output_format": {
          "enum": [
            "png",
            "jpg",
            "webp"
          ],
          "type": "string",
          "title": "output_format",
          "description": "Output format",
          "default": "png",
          "x-order": 7
        },
        "output_quality": {
          "type": "integer",
          "title": "Output Quality",
          "default": 80,
          "maximum": 100,
          "minimum": 1,
          "display": "hidden",
          "x-order": 8,
          "description": "Output quality (for jpg and webp)"
        },
        "num_inference_steps": {
          "type": "integer",
          "title": "Num Inference Steps",
          "default": 30,
          "display": "hidden",
          "x-order": 3,
          "description": "Number of inference steps"
        }
      }
    }
  },
  "imgutils/flux_kontext_dev_finetuned": {
    "name": "imgutils/flux_kontext_dev_finetuned",
    "schema": {
      "type": "object",
      "title": "Input",
      "required": [
        "prompt"
      ],
      "translatable": [
        "prompt"
      ],
      "speech_enabled": [
        "prompt"
      ],
      "linkto": {
        "*": "*"
      },
      "map": {
        "prompt": "prompt"
      },
      "properties": {
        "prompt": {
          "type": "string",
          "title": "Prompt",
          "description": "The prompt to generate an image from.",
          "x-order": 0
        },
        "image_size": {
          "type": "string",
          "enum": [
            "square_hd",
            "square",
            "portrait_4_3",
            "portrait_16_9",
            "landscape_4_3",
            "landscape_16_9"
          ],
          "title": "Image Size",
          "description": "The size of the generated image. You can use predefined sizes or specify custom width and height.",
          "default": "landscape_4_3",
          "x-order": 1
        },
        "num_inference_steps": {
          "type": "integer",
          "title": "Number of Inference Steps",
          "description": "The number of inference steps to perform.",
          "default": 28,
          "minimum": 1,
          "maximum": 50,
          "step": 1,
          "x-order": 2
        },
        "seed": {
          "type": "integer",
          "title": "Seed",
          "description": "The same seed and the same prompt given to the same version of the model will output the same image every time.",
          "x-order": 3
        },
        "loras": {
          "type": "array",
          "title": "LoRAs",
          "description": "The LoRAs to use for the image generation. You can use any number of LoRAs and they will be merged together to generate the final image.",
          "items": {
            "type": "string",
            "format": "uri",
            "fileType": "image"
          },
          "display": "hidden",
          "default": [],
          "action": "pass",
          "x-order": 4
        },
        "guidance_scale": {
          "type": "number",
          "title": "Guidance Scale",
          "description": "The CFG (Classifier Free Guidance) scale is a measure of how close you want the model to stick to your prompt when looking for a related image to show you.",
          "default": 3.5,
          "minimum": 0,
          "maximum": 20,
          "step": 0.1,
          "x-order": 5
        },
        "lora_scale": {
          "type": "number",
          "title": "LoRA Scale",
          "description": "The scale of the LoRA to use for the image generation.",
          "default": 1,
          "minimum": 0,
          "maximum": 4,
          "step": 0.1,
          "x-order": 6
        },
        "sync_mode": {
          "type": "boolean",
          "title": "Sync Mode",
          "description": "If set to true, the function will wait for the image to be generated and uploaded before returning the response. This will increase the latency of the function but it allows you to get the image directly in the response without going through the CDN.",
          "default": false,
          "display": "hidden",
          "x-order": 6
        },
        "num_images": {
          "type": "integer",
          "title": "Number of Images",
          "description": "The number of images to generate. This is always set to 1 for streaming output.",
          "default": 1,
          "minimum": 1,
          "maximum": 4,
          "display": "hidden",
          "x-order": 7
        },
        "enable_safety_checker": {
          "type": "boolean",
          "title": "Enable Safety Checker",
          "description": "If set to true, the safety checker will be enabled.",
          "default": false,
          "display": "hidden",
          "x-order": 8
        },
        "output_format": {
          "type": "string",
          "title": "Output Format",
          "description": "The format of the generated image.",
          "enum": [
            "jpeg",
            "png"
          ],
          "default": "jpeg",
          "x-order": 9
        }
      }
    }
  },
  "imgutils/flux_kontext_pro": {
    "name": "imgutils/flux_kontext_pro",
    "schema": {
      "type": "object",
      "title": "Input",
      "required": [
        "prompt"
      ],
      "translatable": [
        "prompt"
      ],
      "speech_enabled": [
        "prompt"
      ],
      "linkto": {
        "*": "*"
      },
      "map": {
        "input_image": "image",
        "prompt": "prompt"
      },
      "properties": {
        "seed": {
          "type": "integer",
          "title": "Seed",
          "x-order": 3,
          "description": "Random seed. Set for reproducible generation"
        },
        "prompt": {
          "type": "string",
          "title": "Prompt",
          "x-order": 0,
          "description": "Text description of what you want to generate, or the instruction on how to edit the given image."
        },
        "input_image": {
          "type": "string",
          "title": "Input Image",
          "format": "uri",
          "fileType": "image",
          "x-order": 1,
          "description": "Image to use as reference. Must be jpeg, png, gif, or webp."
        },
        "aspect_ratio": {
          "enum": [
            "match_input_image",
            "1:1",
            "16:9",
            "9:16",
            "4:3",
            "3:4",
            "3:2",
            "2:3",
            "4:5",
            "5:4",
            "21:9",
            "9:21",
            "2:1",
            "1:2"
          ],
          "type": "string",
          "title": "aspect_ratio",
          "description": "Aspect ratio of the generated image. Use 'match_input_image' to match the aspect ratio of the input image.",
          "default": "match_input_image",
          "x-order": 2
        },
        "safety_tolerance": {
          "type": "integer",
          "title": "Safety Tolerance",
          "default": 6,
          "maximum": 6,
          "minimum": 0,
          "display": "hidden",
          "x-order": 6,
          "description": "Safety tolerance, 0 is most strict and 6 is most permissive. 2 is currently the maximum allowed when input images are used."
        }
      }
    }
  },
  "imgutils/flux_kontext_max": {
    "name": "imgutils/flux_kontext_max",
    "schema": {
      "type": "object",
      "title": "Input",
      "required": [
        "prompt"
      ],
      "translatable": [
        "prompt"
      ],
      "speech_enabled": [
        "prompt"
      ],
      "linkto": {
        "*": "*"
      },
      "map": {
        "input_image": "image",
        "prompt": "prompt"
      },
      "properties": {
        "seed": {
          "type": "integer",
          "title": "Seed",
          "x-order": 3,
          "nullable": true,
          "description": "Random seed. Set for reproducible generation"
        },
        "prompt": {
          "type": "string",
          "title": "Prompt",
          "x-order": 0,
          "description": "Text description of what you want to generate, or the instruction on how to edit the given image."
        },
        "input_image": {
          "type": "string",
          "title": "Input Image",
          "format": "uri",
          "fileType": "image",
          "x-order": 1,
          "nullable": true,
          "description": "Image to use as reference. Must be jpeg, png, gif, or webp."
        },
        "aspect_ratio": {
          "enum": [
            "match_input_image",
            "1:1",
            "16:9",
            "9:16",
            "4:3",
            "3:4",
            "3:2",
            "2:3",
            "4:5",
            "5:4",
            "21:9",
            "9:21",
            "2:1",
            "1:2"
          ],
          "type": "string",
          "title": "aspect_ratio",
          "description": "Aspect ratio of the generated image. Use 'match_input_image' to match the aspect ratio of the input image.",
          "default": "match_input_image",
          "x-order": 2
        }
      }
    }
  },
  "imgutils/flux_kontext_pro_multi": {
    "name": "imgutils/flux_kontext_pro_multi",
    "schema": {
      "type": "object",
      "title": "Input",
      "required": [
        "prompt",
        "input_image_1",
        "input_image_2"
      ],
      "translatable": [
        "prompt"
      ],
      "speech_enabled": [
        "prompt"
      ],
      "linkto": {
        "*": "*"
      },
      "map": {
        "input_image_1": "image",
        "prompt": "prompt"
      },
      "properties": {
        "seed": {
          "type": "integer",
          "title": "Seed",
          "x-order": 4,
          "nullable": true,
          "description": "Random seed. Set for reproducible generation"
        },
        "prompt": {
          "type": "string",
          "title": "Prompt",
          "x-order": 0,
          "description": "Text description of how to combine or transform the two input images"
        },
        "aspect_ratio": {
          "enum": [
            "match_input_image",
            "1:1",
            "16:9",
            "9:16",
            "4:3",
            "3:4",
            "3:2",
            "2:3",
            "4:5",
            "5:4",
            "21:9",
            "9:21",
            "2:1",
            "1:2"
          ],
          "type": "string",
          "title": "aspect_ratio",
          "description": "Aspect ratio of the generated image. Use 'match_input_image' to match the aspect ratio of the input image.",
          "default": "match_input_image",
          "x-order": 3
        },
        "input_image_1": {
          "type": "string",
          "title": "Input Image 1",
          "format": "uri",
          "fileType": "image",
          "x-order": 1,
          "description": "First input image. Must be jpeg, png, gif, or webp."
        },
        "input_image_2": {
          "type": "string",
          "title": "Input Image 2",
          "format": "uri",
          "fileType": "image",
          "x-order": 2,
          "description": "Second input image. Must be jpeg, png, gif, or webp."
        },
        "output_format": {
          "enum": [
            "jpg",
            "png"
          ],
          "type": "string",
          "title": "output_format",
          "description": "Output format for the generated image",
          "default": "png",
          "x-order": 5
        },
        "safety_tolerance": {
          "type": "integer",
          "title": "Safety Tolerance",
          "default": 2,
          "maximum": 2,
          "minimum": 0,
          "x-order": 6,
          "description": "Safety tolerance, 0 is most strict and 2 is most permissive. 2 is currently the maximum allowed."
        }
      }
    }
  },
  "imgutils/gpt_image1_edit": {
    "name": "imgutils/gpt_image1_edit",
    "schema": {
      "type": "object",
      "title": "Input",
      "required": [
        "prompt"
      ],
      "translatable": [
        "prompt"
      ],
      "speech_enabled": [
        "prompt"
      ],
      "linkto": {
        "*": "*"
      },
      "map": {
        "prompt": "prompt"
      },
      "properties": {
        "prompt": {
          "type": "string",
          "title": "Prompt",
          "description": "The prompt to generate the image from.",
          "x-order": 1
        },
        "image_size": {
          "type": "string",
          "title": "Image Size",
          "description": "The size of the image to generate.",
          "enum": [
            "auto",
            "1024x1024",
            "1536x1024",
            "1024x1536"
          ],
          "default": "auto",
          "x-order": 2
        },
        "num_images": {
          "type": "integer",
          "title": "Number of Images",
          "description": "The number of images to generate.",
          "minimum": 1,
          "maximum": 4,
          "display": "hidden",
          "default": 1,
          "x-order": 3
        },
        "quality": {
          "type": "string",
          "title": "Quality",
          "description": "The quality of the image to generate.",
          "enum": [
            "auto",
            "low",
            "medium",
            "high"
          ],
          "default": "auto",
          "x-order": 4
        },
        "background": {
          "type": "string",
          "title": "Background",
          "description": "The background of the image to generate.",
          "enum": [
            "auto",
            "transparent",
            "opaque"
          ],
          "default": "auto",
          "x-order": 5
        },
        "openai_api_key": {
          "type": "string",
          "title": "OpenAI API Key",
          "description": "The OpenAI API key to use for the image generation. This endpoint is currently powered by bring-your-own-key system.",
          "x-order": 6,
          "display": "hidden"
        },
        "image_urls": {
          "type": "array",
          "title": "Images",
          "description": "The images to edit.",
          "x-order": 7,
          "maxItems": 4,
          "items": {
            "type": "string",
            "format": "uri",
            "fileType": "image"
          }
        }
      }
    }
  },
  "imgutils/bytedance_bagel": {
    "name": "imgutils/bytedance_bagel",
    "schema": {
      "type": "object",
      "title": "Input",
      "required": [
        "prompt",
        "image_url"
      ],
      "translatable": [
        "prompt"
      ],
      "speech_enabled": [
        "prompt"
      ],
      "linkto": {
        "*": "*"
      },
      "map": {
        "image_url": "image",
        "prompt": "prompt"
      },
      "properties": {
        "prompt": {
          "type": "string",
          "title": "Prompt",
          "description": "The prompt to edit the image with.",
          "x-order": 1
        },
        "image_url": {
          "type": "string",
          "format": "uri",
          "fileType": "image",
          "title": "Image URL",
          "description": "The image to edit.",
          "x-order": 2
        },
        "seed": {
          "type": "integer",
          "title": "Seed",
          "description": "The seed to use for the generation.",
          "x-order": 3
        },
        "use_thought": {
          "type": "boolean",
          "title": "Use Thought",
          "description": "Whether to use thought tokens for generation. If set to true, the model will \"think\" to potentially improve generation quality. Increases generation time and increases the cost by 20%.",
          "default": false,
          "x-order": 4
        },
        "enable_safety_checker": {
          "type": "boolean",
          "title": "Enable Safety Checker",
          "description": "If set to true, the safety checker will be enabled.",
          "default": true,
          "x-order": 5
        }
      }
    }
  },
  "imgutils/luma_reframe_image": {
    "name": "imgutils/luma_reframe_image",
    "schema": {
      "type": "object",
      "title": "Input",
      "required": [
        "image"
      ],
      "linkto": {
        "*": "*"
      },
      "map": {
        "image": "image",
        "prompt": "prompt"
      },
      "properties": {
        "image": {
          "type": "string",
          "title": "Image",
          "format": "uri",
          "fileType": "image",
          "x-order": 0,
          "description": "URL of the image to reframe."
        },
        "prompt": {
          "type": "string",
          "title": "Prompt",
          "x-order": 2,
          "description": "Prompt for the reframe"
        },
        "aspect_ratio": {
          "enum": [
            "1:1",
            "3:4",
            "4:3",
            "9:16",
            "16:9",
            "9:21",
            "21:9"
          ],
          "type": "string",
          "title": "aspect_ratio",
          "description": "Aspect ratio of the reframed image",
          "default": "16:9",
          "x-order": 1
        }
      }
    }
  },
  "imgutils/frame_extractor": {
    "name": "imgutils/frame_extractor",
    "schema": {
      "type": "object",
      "title": "Input",
      "required": [
        "video"
      ],
      "properties": {
        "video": {
          "type": "string",
          "title": "Video",
          "format": "uri",
          "x-order": 0,
          "description": "Input video file"
        },
        "return_first_frame": {
          "type": "boolean",
          "title": "Return First Frame",
          "default": true,
          "x-order": 1,
          "description": "Toggle to return the first frame instead of the last frame"
        }
      }
    }
  },
  "imgutils/easel_avatars": {
    "name": "imgutils/easel_avatars",
    "schema": {
      "type": "object",
      "title": "Input",
      "required": [
        "face_image"
      ],
      "linkto": {
        "*": "*"
      },
      "map": {
        "face_image": "image",
        "prompt": "prompt"
      },
      "properties": {
        "prompt": {
          "type": "string",
          "title": "Prompt",
          "default": "standing in a modern office space",
          "x-order": 4,
          "description": "A prompt describing the scene to put the user(s) in"
        },
        "face_image": {
          "type": "string",
          "title": "Face Image",
          "format": "uri",
          "fileType": "image",
          "x-order": 0,
          "description": "The face image to generate avatar from. A front facing selfie works best."
        },
        "user_gender": {
          "enum": [
            "male",
            "female",
            "non_binary"
          ],
          "type": "string",
          "title": "user_gender",
          "description": "Gender of the first user",
          "default": "female",
          "x-order": 1
        },
        "face_image_b": {
          "type": "string",
          "title": "Face Image B",
          "format": "uri",
          "fileType": "image",
          "x-order": 2,
          "description": "Optional second face image for multi-person avatars"
        },
        "user_b_gender": {
          "enum": [
            "male",
            "female",
            "non_binary"
          ],
          "type": "string",
          "title": "user_b_gender",
          "description": "Gender of the second user (if using face_image_b)",
          "default": "female",
          "x-order": 3
        },
        "workflow_type": {
          "enum": [
            "Realistic",
            "Stylistic"
          ],
          "type": "string",
          "title": "workflow_type",
          "description": "The output style to use",
          "default": "Realistic",
          "x-order": 5
        }
      }
    }
  },
  "imgutils/tencent_instant_character": {
    "name": "imgutils/tencent_instant_character",
    "schema": {
      "type": "object",
      "title": "Input",
      "required": [
        "subject_image",
        "prompt"
      ],
      "linkto": {
        "*": "*"
      },
      "map": {
        "subject_image": "image",
        "prompt": "prompt"
      },
      "properties": {
        "lora": {
          "enum": [
            "none",
            "ghibli_style",
            "makoto_shinkai"
          ],
          "type": "string",
          "title": "lora",
          "description": "Lora to use",
          "default": "none",
          "x-order": 7
        },
        "seed": {
          "type": "integer",
          "title": "Seed",
          "default": -1,
          "x-order": 4,
          "description": "Seed for the random number generator, -1 for random"
        },
        "width": {
          "type": "integer",
          "title": "Width",
          "default": 512,
          "maximum": 2048,
          "minimum": 512,
          "x-order": 2,
          "description": "Width of the output image"
        },
        "height": {
          "type": "integer",
          "title": "Height",
          "default": 512,
          "maximum": 2048,
          "minimum": 512,
          "x-order": 3,
          "description": "Height of the output image"
        },
        "prompt": {
          "type": "string",
          "title": "Prompt",
          "x-order": 1,
          "description": "Prompt for the image generation"
        },
        "subject_image": {
          "type": "string",
          "title": "Subject Image",
          "format": "uri",
          "fileType": "image",
          "x-order": 0,
          "description": "Grayscale input image"
        },
        "guidance_scale": {
          "type": "number",
          "title": "Guidance Scale",
          "default": 3.5,
          "x-order": 5,
          "description": "Guidance scale for the diffusion process"
        },
        "num_inference_steps": {
          "type": "integer",
          "title": "Num Inference Steps",
          "default": 28,
          "x-order": 6,
          "description": "Number of diffusion steps"
        }
      }
    }
  },
  "imgutils/bytedance_seededit3": {
    "name": "imgutils/bytedance_seededit3",
    "schema": {
      "type": "object",
      "title": "Input",
      "required": [
        "prompt"
      ],
      "translatable": [
        "prompt"
      ],
      "speech_enabled": [
        "prompt"
      ],
      "linkto": {
        "*": "*"
      },
      "map": {
        "prompt": "prompt"
      },
      "properties": {
        "seed": {
          "type": "integer",
          "title": "Seed",
          "x-order": 2,
          "nullable": true,
          "description": "Random seed. Set for reproducible generation"
        },
        "image": {
          "type": "string",
          "title": "Image",
          "format": "uri",
          "fileType": "image",
          "x-order": 1,
          "description": "Input image to edit"
        },
        "prompt": {
          "type": "string",
          "title": "Prompt",
          "x-order": 0,
          "description": "Text prompt for image generation"
        },
        "guidance_scale": {
          "type": "number",
          "title": "Guidance Scale",
          "default": 5.5,
          "maximum": 10,
          "minimum": 1,
          "display": "hidden",
          "x-order": 3,
          "description": "Prompt adherence. Higher = more literal."
        }
      }
    }
  },
  "imgutils/bytedance_seededit4": {
    "name": "imgutils/bytedance_seededit4",
    "schema": {
      "type": "object",
      "title": "Input",
      "required": [
        "prompt"
      ],
      "translatable": [
        "prompt"
      ],
      "speech_enabled": [
        "prompt"
      ],
      "linkto": {
        "*": "*"
      },
      "map": {
        "prompt": "prompt"
      },
      "properties": {
        "prompt": {
          "type": "string",
          "title": "Prompt",
          "description": "The text prompt used to generate the image.",
          "x-order": 0
        },
        "image_urls": {
          "type": "array",
          "title": "Image Inputs",
          "description": "List of URLs of input images for editing.",
          "items": {
            "type": "string",
            "format": "uri",
            "fileType": "image"
          },
          "maxItems": 4,
          "x-order": 1
        },
        "image_size": {
          "type": "string",
          "title": "Image Size",
          "description": "The size of the generated image. Width and height must be between 512 and 4096.",
          "enum": [
            "square_hd",
            "square",
            "portrait_4_3",
            "portrait_16_9",
            "landscape_4_3",
            "landscape_16_9"
          ],
          "x-order": 2
        },
        "num_images": {
          "type": "integer",
          "title": "Number of Images",
          "description": "Number of times to retry generation with the prompt.",
          "default": 1,
          "minimum": 1,
          "display": "hidden",
          "x-order": 3
        },
        "seed": {
          "type": "integer",
          "title": "Seed",
          "description": "Random seed to control the stochasticity of image generation.",
          "x-order": 4
        }
      }
    }
  },
  "imgutils/qwen_image_edit": {
    "name": "imgutils/qwen_image_edit",
    "schema": {
      "type": "object",
      "title": "Input",
      "required": [
        "prompt",
        "image"
      ],
      "translatable": [
        "prompt"
      ],
      "speech_enabled": [
        "prompt"
      ],
      "linkto": {
        "*": "*"
      },
      "map": {
        "prompt": "prompt",
        "image": "image"
      },
      "properties": {
        "seed": {
          "type": "integer",
          "title": "Seed",
          "x-order": 4,
          "nullable": true,
          "description": "Random seed. Set for reproducible generation"
        },
        "image": {
          "type": "array",
          "items": {
            "type": "string",
            "format": "uri",
            "fileType": "image"
          },
          "title": "Image",
          "x-order": 1,
          "description": "Images to use as reference. Must be jpeg, png, gif, or webp."
        },
        "prompt": {
          "type": "string",
          "title": "Prompt",
          "x-order": 0,
          "description": "Text instruction on how to edit the given image."
        },
        "go_fast": {
          "type": "boolean",
          "title": "Go Fast",
          "default": true,
          "x-order": 3,
          "description": "Run faster predictions with additional optimizations."
        },
        "aspect_ratio": {
          "enum": [
            "1:1",
            "16:9",
            "9:16",
            "4:3",
            "3:4",
            "match_input_image"
          ],
          "type": "string",
          "title": "aspect_ratio",
          "description": "Aspect ratio for the generated image",
          "default": "match_input_image",
          "x-order": 2
        },
        "output_format": {
          "enum": [
            "webp",
            "jpg",
            "png"
          ],
          "type": "string",
          "title": "output_format",
          "description": "Format of the output images",
          "default": "webp",
          "x-order": 5
        },
        "output_quality": {
          "type": "integer",
          "title": "Output Quality",
          "default": 95,
          "maximum": 100,
          "minimum": 0,
          "step": 1,
          "x-order": 6,
          "description": "Quality when saving the output images, from 0 to 100. 100 is best quality, 0 is lowest quality. Not relevant for .png outputs"
        },
        "disable_safety_checker": {
          "type": "boolean",
          "title": "Disable Safety Checker",
          "default": true,
          "display": "hidden",
          "x-order": 7,
          "description": "Disable safety checker for generated images."
        }
      }
    }
  },
  "imgutils/google_nano_banana": {
    "name": "imgutils/google_nano_banana",
    "schema": {
      "type": "object",
      "title": "Input",
      "required": [
        "prompt",
        "image_input"
      ],
      "translatable": [
        "prompt"
      ],
      "speech_enabled": [
        "prompt"
      ],
      "linkto": {
        "*": "*"
      },
      "map": {
        "prompt": "prompt"
      },
      "properties": {
        "prompt": {
          "type": "string",
          "title": "Prompt",
          "description": "The prompt for image editing.",
          "x-order": 0
        },
        "image_input": {
          "type": "array",
          "title": "Image Inputs",
          "description": "List of URLs of input images for editing.",
          "items": {
            "type": "string",
            "format": "uri",
            "fileType": "image"
          },
          "maxItems": 4,
          "x-order": 1
        },
        "aspect_ratio": {
          "enum": [
            "match_input_image",
            "1:1",
            "2:3",
            "3:2",
            "3:4",
            "4:3",
            "4:5",
            "5:4",
            "9:16",
            "16:9",
            "21:9"
          ],
          "type": "string",
          "title": "aspect_ratio",
          "description": "Aspect ratio of the generated image",
          "default": "match_input_image",
          "x-order": 2
        }
      }
    }
  },
  "imgutils/flux_spro_dev": {
    "name": "imgutils/flux_spro_dev",
    "schema": {
      "type": "object",
      "title": "Input",
      "required": [
        "image_url",
        "prompt"
      ],
      "translatable": [
        "prompt"
      ],
      "speech_enabled": [
        "prompt"
      ],
      "linkto": {
        "*": "*"
      },
      "map": {
        "image_url": "image",
        "prompt": "prompt"
      },
      "properties": {
        "image_url": {
          "type": "string",
          "title": "Image",
          "description": "The URL of the image to generate an image from",
          "format": "uri",
          "fileType": "image",
          "x-order": 0
        },
        "strength": {
          "type": "number",
          "title": "Strength",
          "description": "The strength of the initial image. Higher strength values are better for this model",
          "default": 0.95,
          "minimum": 0,
          "maximum": 1,
          "step": 0.01,
          "x-order": 1
        },
        "num_inference_steps": {
          "type": "integer",
          "title": "Number of Inference Steps",
          "description": "The number of inference steps to perform",
          "default": 40,
          "minimum": 1,
          "maximum": 50,
          "step": 1,
          "display": "hidden",
          "x-order": 2
        },
        "prompt": {
          "type": "string",
          "title": "Prompt",
          "description": "The prompt to generate an image from",
          "x-order": 3
        },
        "seed": {
          "type": "integer",
          "title": "Seed",
          "description": "The same seed and the same prompt given to the same version of the model will output the same image every time",
          "x-order": 4
        },
        "guidance_scale": {
          "type": "number",
          "title": "Guidance Scale",
          "description": "The CFG (Classifier Free Guidance) scale is a measure of how close you want the model to stick to your prompt when looking for a related image to show you",
          "default": 4.5,
          "minimum": 1,
          "maximum": 20,
          "step": 0.1,
          "display": "hidden",
          "x-order": 5
        },
        "sync_mode": {
          "type": "boolean",
          "title": "Sync Mode",
          "description": "If set to true, the function will wait for the image to be generated and uploaded before returning the response. This will increase the latency of the function but it allows you to get the image directly in the response without going through the CDN",
          "default": false,
          "display": "hidden",
          "x-order": 6
        },
        "num_images": {
          "type": "integer",
          "title": "Number of Images",
          "description": "The number of images to generate",
          "default": 1,
          "minimum": 1,
          "maximum": 4,
          "step": 1,
          "display": "hidden",
          "x-order": 7
        },
        "enable_safety_checker": {
          "type": "boolean",
          "title": "Enable Safety Checker",
          "description": "If set to true, the safety checker will be enabled",
          "default": false,
          "display": "hidden",
          "x-order": 8
        },
        "output_format": {
          "type": "string",
          "title": "Output Format",
          "description": "The format of the generated image",
          "enum": [
            "jpeg",
            "png"
          ],
          "default": "jpeg",
          "x-order": 9
        },
        "acceleration": {
          "type": "string",
          "title": "Acceleration",
          "description": "The speed of the generation. The higher the speed, the faster the generation",
          "enum": [
            "none",
            "regular",
            "high"
          ],
          "default": "regular",
          "display": "hidden",
          "x-order": 10
        }
      }
    }
  },
  "vidutils/lipsync_video": {
    "name": "vidutils/lipsync_video",
    "schema": {
      "type": "object",
      "title": "Input",
      "required": [
        "video_url",
        "audio_url"
      ],
      "get_metadata": true,
      "linkto": {
        "*": "*"
      },
      "map": {
        "video_url": "video",
        "audio_url": "audio"
      },
      "properties": {
        "seed": {
          "type": "integer",
          "title": "Seed",
          "default": 0,
          "x-order": 3,
          "description": "Set to 0 for Random seed"
        },
        "audio_url": {
          "type": "string",
          "title": "Audio",
          "format": "uri",
          "fileType": "audio",
          "x-order": 1,
          "description": "Input audio to "
        },
        "video_url": {
          "type": "string",
          "title": "Video",
          "format": "uri",
          "fileType": "video",
          "x-order": 0,
          "description": "Input video"
        },
        "guidance_scale": {
          "type": "number",
          "title": "Guidance Scale",
          "default": 1,
          "maximum": 2,
          "minimum": 0,
          "x-order": 2,
          "description": "Guidance scale"
        },
        "loop_mode": {
          "type": "string",
          "title": "Loop Mode",
          "enum": [
            "",
            "pingpong",
            "loop"
          ],
          "x-order": 4,
          "description": "Video loop mode when audio is bigger than video"
        }
      }
    }
  },
  "vidutils/videobgremove": {
    "name": "vidutils/videobgremove",
    "schema": {
      "type": "object",
      "title": "Input",
      "required": [
        "input_video"
      ],
      "linkto": {
        "*": "*"
      },
      "map": {
        "input_video": "video"
      },
      "properties": {
        "input_video": {
          "type": "string",
          "title": "Input Video",
          "format": "uri",
          "fileType": "video",
          "x-order": 0,
          "description": "Video to segment."
        },
        "output_type": {
          "enum": [
            "green-screen",
            "alpha-mask",
            "foreground-mask"
          ],
          "type": "string",
          "title": "output_type",
          "description": "An enumeration.",
          "default": "green-screen",
          "x-order": 1
        }
      }
    }
  },
  "vidutils/videoupscale": {
    "name": "vidutils/videoupscale",
    "schema": {
      "type": "object",
      "title": "Input",
      "required": [
        "video_path"
      ],
      "linkto": {
        "*": "*"
      },
      "map": {
        "video_path": "video"
      },
      "properties": {
        "model": {
          "enum": [
            "RealESRGAN_x4plus",
            "RealESRGAN_x4plus_anime_6B",
            "realesr-animevideov3"
          ],
          "type": "string",
          "title": "model",
          "description": "Upscaling model",
          "default": "RealESRGAN_x4plus",
          "x-order": 2
        },
        "resolution": {
          "enum": [
            "FHD",
            "2k",
            "4k"
          ],
          "type": "string",
          "title": "resolution",
          "description": "Output resolution",
          "default": "FHD",
          "x-order": 1
        },
        "video_path": {
          "type": "string",
          "title": "Video Path",
          "format": "uri",
          "fileType": "video",
          "x-order": 0,
          "description": "Input Video"
        }
      }
    }
  },
  "vidutils/sonic": {
    "name": "vidutils/sonic",
    "schema": {
      "type": "object",
      "title": "Input",
      "required": [
        "image",
        "audio"
      ],
      "linkto": {
        "*": "*"
      },
      "map": {
        "image": "image",
        "audio": "audio"
      },
      "properties": {
        "seed": {
          "type": "integer",
          "title": "Seed",
          "x-order": 6,
          "description": "Random seed for reproducible results. Leave blank for a random seed."
        },
        "audio": {
          "type": "string",
          "title": "Audio",
          "format": "uri",
          "fileType": "audio",
          "x-order": 1,
          "description": "Input audio file (WAV, MP3, etc.) for the voice."
        },
        "image": {
          "type": "string",
          "title": "Image",
          "format": "uri",
          "fileType": "image",
          "x-order": 0,
          "description": "Input portrait image (will be cropped if face is detected)."
        },
        "dynamic_scale": {
          "type": "number",
          "title": "Dynamic Scale",
          "default": 1,
          "maximum": 2,
          "minimum": 0.5,
          "x-order": 2,
          "description": "Controls movement intensity. Increase/decrease for more/less movement."
        },
        "min_resolution": {
          "type": "integer",
          "title": "Min Resolution",
          "default": 512,
          "maximum": 1024,
          "minimum": 256,
          "x-order": 3,
          "description": "Minimum image resolution for processing. Lower values use less memory but may reduce quality."
        },
        "inference_steps": {
          "type": "integer",
          "title": "Inference Steps",
          "default": 25,
          "maximum": 50,
          "minimum": 5,
          "x-order": 4,
          "description": "Number of diffusion steps. Higher values may improve quality but take longer."
        },
        "keep_resolution": {
          "type": "boolean",
          "title": "Keep Resolution",
          "default": false,
          "x-order": 5,
          "description": "If true, output video matches the original image resolution. Otherwise uses the min_resolution after cropping."
        }
      }
    }
  },
  "vidutils/hummingbird_lipsync": {
    "name": "vidutils/hummingbird_lipsync",
    "schema": {
      "type": "object",
      "title": "Input",
      "required": [
        "video_url",
        "audio_url"
      ],
      "linkto": {
        "*": "*"
      },
      "map": {
        "video_url": "video",
        "audio_url": "audio"
      },
      "get_metadata": true,
      "properties": {
        "video_url": {
          "type": "string",
          "format": "uri",
          "title": "Video URL",
          "fileType": "video",
          "description": "The URL of the video to be processed",
          "x-order": 1
        },
        "audio_url": {
          "type": "string",
          "format": "uri",
          "title": "Audio URL",
          "fileType": "audio",
          "description": "The URL of the audio to be processed",
          "x-order": 2
        }
      }
    }
  },
  "vidutils/kling_lip_sync": {
    "name": "vidutils/kling_lip_sync",
    "schema": {
      "type": "object",
      "title": "Input",
      "required": [
        "video_url"
      ],
      "translatable": [
        "text"
      ],
      "speech_enabled": [
        "text"
      ],
      "get_metadata": true,
      "linkto": {
        "*": "*"
      },
      "map": {
        "video_url": "video",
        "audio_file": "audio"
      },
      "properties": {
        "text": {
          "type": "string",
          "title": "Text",
          "x-order": 2,
          "description": "Text content for lip sync (if not using audio)"
        },
        "voice_id": {
          "enum": [
            "en_AOT",
            "en_oversea_male1",
            "en_girlfriend_4_speech02",
            "en_chat_0407_5-1",
            "en_uk_boy1",
            "en_PeppaPig_platform",
            "en_ai_huangzhong_712",
            "en_calm_story1",
            "en_uk_man2",
            "en_reader_en_m-v1",
            "en_commercial_lady_en_f-v1",
            "zh_genshin_vindi2",
            "zh_zhinen_xuesheng",
            "zh_tiyuxi_xuedi",
            "zh_ai_shatang",
            "zh_genshin_klee2",
            "zh_genshin_kirara",
            "zh_ai_kaiya",
            "zh_tiexin_nanyou",
            "zh_ai_chenjiahao_712",
            "zh_girlfriend_1_speech02",
            "zh_chat1_female_new-3",
            "zh_girlfriend_2_speech02",
            "zh_cartoon-boy-07",
            "zh_cartoon-girl-01",
            "zh_ai_huangyaoshi_712",
            "zh_you_pingjing",
            "zh_ai_laoguowang_712",
            "zh_chengshu_jiejie",
            "zh_zhuxi_speech02",
            "zh_uk_oldman3",
            "zh_laopopo_speech02",
            "zh_heainainai_speech02",
            "zh_dongbeilaotie_speech02",
            "zh_chongqingxiaohuo_speech02",
            "zh_chuanmeizi_speech02",
            "zh_chaoshandashu_speech02",
            "zh_ai_taiwan_man2_speech02",
            "zh_xianzhanggui_speech02",
            "zh_tianjinjiejie_speech02",
            "zh_diyinnansang_DB_CN_M_04-v2",
            "zh_yizhipiannan-v1",
            "zh_guanxiaofang-v2",
            "zh_tianmeixuemei-v1",
            "zh_daopianyansang-v1",
            "zh_mengwa-v1"
          ],
          "type": "string",
          "title": "voice_id",
          "description": "Voice ID for speech synthesis (if using text and not audio)",
          "default": "en_AOT",
          "x-order": 3
        },
        "video_url": {
          "type": "string",
          "title": "Video Url",
          "format": "uri",
          "fileType": "video",
          "x-order": 0,
          "description": "URL of a video for lip syncing. It can be an .mp4 or .mov file, should be less than 100MB, with a duration of 2-10 seconds, and a resolution of 720p-1080p (720-1920px dimensions)."
        },
        "audio_file": {
          "type": "string",
          "title": "Audio File",
          "format": "uri",
          "fileType": "audio",
          "x-order": 1,
          "description": "Audio file for lip sync. Must be .mp3, .wav, .m4a, or .aac and less than 5MB."
        },
        "voice_speed": {
          "type": "number",
          "title": "Voice Speed",
          "default": 1,
          "maximum": 2,
          "minimum": 0.8,
          "x-order": 4,
          "description": "Speech rate (only used if using text and not audio)"
        }
      }
    }
  },
  "vidutils/multitalk_lipsync_single": {
    "name": "vidutils/multitalk_lipsync_single",
    "schema": {
      "type": "object",
      "title": "Input",
      "required": [
        "image_url",
        "audio_url",
        "prompt"
      ],
      "translatable": [
        "prompt"
      ],
      "speech_enabled": [
        "prompt"
      ],
      "linkto": {
        "*": "*"
      },
      "map": {
        "prompt": "prompt",
        "image_url": "image",
        "audio_url": "audio"
      },
      "properties": {
        "image_url": {
          "type": "string",
          "title": "Image",
          "description": "The input image. If the input image does not match the chosen aspect ratio, it is resized and center cropped.",
          "format": "uri",
          "fileType": "image",
          "x-order": 0
        },
        "audio_url": {
          "type": "string",
          "title": "Audio",
          "description": "The audio file for lipsync.",
          "format": "uri",
          "fileType": "audio",
          "x-order": 1
        },
        "prompt": {
          "type": "string",
          "title": "Prompt",
          "description": "The text prompt to guide video generation.",
          "x-order": 2
        },
        "num_frames": {
          "type": "integer",
          "title": "Number of Frames",
          "description": "Number of frames to generate.",
          "default": 145,
          "minimum": 41,
          "maximum": 251,
          "x-order": 3
        },
        "seed": {
          "type": "integer",
          "title": "Seed",
          "description": "Random seed for reproducibility. If None, a random seed is chosen.",
          "x-order": 4
        },
        "turbo": {
          "type": "boolean",
          "title": "Turbo",
          "description": "Whether to use turbo mode.",
          "default": true,
          "display": "hidden",
          "x-order": 5
        }
      }
    }
  },
  "vidutils/multitalk_lipsync_multi": {
    "name": "vidutils/multitalk_lipsync_multi",
    "schema": {
      "type": "object",
      "title": "Input",
      "required": [
        "image_url",
        "audio_url",
        "prompt"
      ],
      "translatable": [
        "prompt"
      ],
      "speech_enabled": [
        "prompt"
      ],
      "linkto": {
        "*": "*"
      },
      "map": {
        "prompt": "prompt",
        "image_url": "image",
        "first_audio_url": "audio"
      },
      "properties": {
        "image_url": {
          "type": "string",
          "title": "Image",
          "description": "The input image. If the input image does not match the chosen aspect ratio, it is resized and center cropped.",
          "format": "uri",
          "fileType": "image",
          "x-order": 0
        },
        "first_audio_url": {
          "type": "string",
          "title": "First Audio",
          "description": "The audio file for lipsync.",
          "format": "uri",
          "fileType": "audio",
          "x-order": 1
        },
        "second_audio_url": {
          "type": "string",
          "title": "Second Audio",
          "description": "The audio file for lipsync.",
          "format": "uri",
          "fileType": "audio",
          "x-order": 2
        },
        "prompt": {
          "type": "string",
          "title": "Prompt",
          "description": "The text prompt to guide video generation.",
          "x-order": 2
        },
        "num_frames": {
          "type": "integer",
          "title": "Number of Frames",
          "description": "Number of frames to generate.",
          "default": 145,
          "minimum": 41,
          "maximum": 251,
          "x-order": 3
        },
        "seed": {
          "type": "integer",
          "title": "Seed",
          "description": "Random seed for reproducibility. If None, a random seed is chosen.",
          "x-order": 4
        },
        "turbo": {
          "type": "boolean",
          "title": "Turbo",
          "description": "Whether to use turbo mode.",
          "default": true,
          "display": "hidden",
          "x-order": 5
        }
      }
    }
  },
  "vidutils/mmaudio": {
    "name": "vidutils/mmaudio",
    "schema": {
      "type": "object",
      "title": "Input",
      "translatable": [
        "prompt",
        "negative_prompt"
      ],
      "speech_enabled": [
        "prompt",
        "negative_prompt"
      ],
      "linkto": {
        "*": "*"
      },
      "map": {
        "image": "image",
        "video": "video"
      },
      "properties": {
        "seed": {
          "type": "integer",
          "title": "Seed",
          "minimum": -1,
          "x-order": 6,
          "description": "Random seed. Use -1 or leave blank to randomize the seed"
        },
        "image": {
          "type": "string",
          "title": "Image",
          "format": "uri",
          "fileType": "image",
          "x-order": 7,
          "description": "Optional image file for image-to-audio generation (experimental)"
        },
        "video": {
          "type": "string",
          "title": "Video",
          "format": "uri",
          "fileType": "video",
          "x-order": 2,
          "description": "Optional video file for video-to-audio generation"
        },
        "prompt": {
          "type": "string",
          "title": "Prompt",
          "default": "",
          "x-order": 0,
          "description": "Text prompt for generated audio"
        },
        "duration": {
          "type": "number",
          "title": "Duration",
          "default": 8,
          "minimum": 1,
          "x-order": 3,
          "description": "Duration of output in seconds"
        },
        "num_steps": {
          "type": "integer",
          "title": "Num Steps",
          "default": 25,
          "x-order": 4,
          "description": "Number of inference steps"
        },
        "cfg_strength": {
          "type": "number",
          "title": "Cfg Strength",
          "default": 4.5,
          "minimum": 1,
          "x-order": 5,
          "description": "Guidance strength (CFG)"
        },
        "negative_prompt": {
          "type": "string",
          "title": "Negative Prompt",
          "default": "music",
          "x-order": 1,
          "description": "Negative prompt to avoid certain sounds"
        }
      }
    }
  },
  "vidutils/videofacerestore": {
    "name": "vidutils/videofacerestore",
    "schema": {
      "type": "object",
      "title": "Input",
      "required": [
        "video"
      ],
      "linkto": {
        "*": "*"
      },
      "map": {
        "video": "video"
      },
      "properties": {
        "mask": {
          "type": "string",
          "title": "Mask",
          "format": "uri",
          "x-order": 2,
          "description": "An inpainting mask image (white areas will be restored). Only required when tasks includes inpainting."
        },
        "seed": {
          "type": "integer",
          "title": "Seed",
          "x-order": 10,
          "description": "Random seed. Leave blank to randomize."
        },
        "tasks": {
          "enum": [
            "face-restoration",
            "face-restoration-and-colorization",
            "face-restoration-and-colorization-and-inpainting"
          ],
          "type": "string",
          "title": "tasks",
          "description": "Which restoration tasks to apply.",
          "default": "face-restoration",
          "x-order": 1
        },
        "video": {
          "type": "string",
          "title": "Video",
          "format": "uri",
          "fileType": "video",
          "x-order": 0,
          "description": "Input video file (e.g. MP4)."
        },
        "overlap": {
          "type": "integer",
          "title": "Overlap",
          "default": 3,
          "x-order": 5,
          "description": "Number of overlapping frames between segments."
        },
        "decode_chunk_size": {
          "type": "integer",
          "title": "Decode Chunk Size",
          "default": 16,
          "x-order": 4,
          "description": "Chunk size for decoding long videos."
        },
        "i2i_noise_strength": {
          "type": "number",
          "title": "I2I Noise Strength",
          "default": 1,
          "x-order": 9,
          "description": "Image-to-image noise strength."
        },
        "noise_aug_strength": {
          "type": "number",
          "title": "Noise Aug Strength",
          "default": 0,
          "x-order": 6,
          "description": "Noise augmentation strength."
        },
        "num_inference_steps": {
          "type": "integer",
          "title": "Num Inference Steps",
          "default": 30,
          "x-order": 3,
          "description": "Number of diffusion steps."
        },
        "max_appearance_guidance_scale": {
          "type": "number",
          "title": "Max Appearance Guidance Scale",
          "default": 2,
          "x-order": 8,
          "description": "Maximum guidance scale for restoration."
        },
        "min_appearance_guidance_scale": {
          "type": "number",
          "title": "Min Appearance Guidance Scale",
          "default": 2,
          "x-order": 7,
          "description": "Minimum guidance scale for restoration."
        }
      }
    }
  },
  "vidutils/sa2va_26b_video": {
    "name": "vidutils/sa2va_26b_video",
    "schema": {
      "type": "object",
      "title": "Input",
      "required": [
        "video",
        "instruction"
      ],
      "translatable": [
        "instruction"
      ],
      "speech_enabled": [
        "instruction"
      ],
      "linkto": {
        "*": "*"
      },
      "map": {
        "video": "video"
      },
      "properties": {
        "video": {
          "type": "string",
          "title": "Video",
          "format": "uri",
          "fileType": "video",
          "x-order": 0,
          "description": "Input video for segmentation"
        },
        "instruction": {
          "type": "string",
          "title": "Instruction",
          "x-order": 1,
          "description": "Text instruction for the model. Write 'Segment the' to create a mask."
        },
        "frame_interval": {
          "type": "integer",
          "title": "Frame Interval",
          "default": 6,
          "maximum": 30,
          "minimum": 1,
          "x-order": 2,
          "description": "Frame interval for processing"
        }
      }
    }
  },
  "vidutils/topaz_upscale": {
    "name": "vidutils/topaz_upscale",
    "schema": {
      "type": "object",
      "title": "Input",
      "required": [
        "video_url"
      ],
      "map": {
        "video_url": "video"
      },
      "linkto": {
        "*": "*"
      },
      "get_metadata": true,
      "properties": {
        "video_url": {
          "type": "string",
          "title": "Video",
          "format": "uri",
          "fileType": "video",
          "x-order": 0,
          "description": "URL of the video to upscale"
        },
        "upscale_factor": {
          "type": "number",
          "title": "Upscale Factor",
          "default": 2,
          "minimum": 1,
          "maximum": 4,
          "step": 0.1,
          "x-order": 1,
          "description": "Factor to upscale the video by (e.g. 2.0 doubles width and height)"
        },
        "target_fps": {
          "type": "integer",
          "title": "Target FPS",
          "x-order": 2,
          "minimum": 16,
          "default": 24,
          "maximum": 60,
          "step": 1,
          "description": "Target FPS for frame interpolation. If set, frame interpolation will be enabled."
        }
      }
    }
  },
  "vidutils/luma_reframe_video": {
    "name": "vidutils/luma_reframe_video",
    "schema": {
      "type": "object",
      "title": "Input",
      "required": [
        "video_url"
      ],
      "get_metadata": true,
      "linkto": {
        "*": "*"
      },
      "map": {
        "video_url": "video"
      },
      "properties": {
        "x_end": {
          "type": "integer",
          "title": "X End",
          "display": "hidden",
          "x-order": 6,
          "description": "The x end of the crop bounds, in pixels. Defines the right boundary where your source video will be placed in the output frame. The distance between x_start and x_end determines the resized width of your content."
        },
        "y_end": {
          "type": "integer",
          "title": "Y End",
          "display": "hidden",
          "x-order": 8,
          "description": "The y end of the crop bounds, in pixels. Defines the bottom boundary where your source video will be placed in the output frame. The distance between y_start and y_end determines the resized height of your content."
        },
        "prompt": {
          "type": "string",
          "title": "Prompt",
          "x-order": 2,
          "description": "A prompt to guide the reframing generation."
        },
        "x_start": {
          "type": "integer",
          "title": "X Start",
          "display": "hidden",
          "x-order": 5,
          "description": "The x start of the crop bounds, in pixels. Defines the left boundary where your source video will be placed in the output frame. The distance between x_start and x_end determines the resized width of your content."
        },
        "y_start": {
          "type": "integer",
          "title": "Y Start",
          "display": "hidden",
          "x-order": 7,
          "description": "The y start of the crop bounds, in pixels. Defines the top boundary where your source video will be placed in the output frame. The distance between y_start and y_end determines the resized height of your content."
        },
        "video_url": {
          "type": "string",
          "title": "Video Url",
          "format": "uri",
          "fileType": "video",
          "x-order": 0,
          "description": "URL of the video to reframe. Maximum video size is 100mb. Maximum video duration is 30 seconds."
        },
        "aspect_ratio": {
          "enum": [
            "1:1",
            "3:4",
            "4:3",
            "9:16",
            "16:9",
            "9:21",
            "21:9"
          ],
          "type": "string",
          "title": "aspect_ratio",
          "description": "Aspect ratio of the reframed video",
          "default": "16:9",
          "x-order": 1
        },
        "grid_position_x": {
          "type": "integer",
          "title": "Grid Position X",
          "display": "hidden",
          "x-order": 3,
          "description": "The x position of the video in the grid, in pixels. Controls horizontal positioning of the source video within the target output dimensions."
        },
        "grid_position_y": {
          "type": "integer",
          "title": "Grid Position Y",
          "display": "hidden",
          "x-order": 4,
          "description": "The y position of the video in the grid, in pixels. Controls vertical positioning of the source video within the target output dimensions."
        }
      }
    }
  },
  "vidutils/minimax_remover": {
    "name": "vidutils/minimax_remover",
    "schema": {
      "type": "object",
      "title": "Input",
      "required": [
        "video",
        "mask"
      ],
      "linkto": {
        "*": "*"
      },
      "map": {
        "video": "video"
      },
      "properties": {
        "fps": {
          "type": "integer",
          "title": "Fps",
          "default": -1,
          "minimum": -1,
          "x-order": 5,
          "description": "Output video FPS (-1 = same as original video)"
        },
        "mask": {
          "type": "string",
          "title": "Mask",
          "format": "uri",
          "x-order": 1,
          "description": "Mask video file where white areas indicate objects to remove. Use this to generate a mask: /vidutils/sa2va_26b_video"
        },
        "seed": {
          "type": "integer",
          "title": "Seed",
          "x-order": 8,
          "description": "Random seed for reproducible results (leave blank for random)"
        },
        "video": {
          "type": "string",
          "title": "Video",
          "format": "uri",
          "fileType": "video",
          "x-order": 0,
          "description": "Input video file with objects to be removed"
        },
        "width": {
          "type": "integer",
          "title": "Width",
          "default": -1,
          "minimum": -1,
          "x-order": 4,
          "description": "Output video width (-1 = same as original video, auto-scaled to max 1920px if needed)"
        },
        "height": {
          "type": "integer",
          "title": "Height",
          "default": -1,
          "minimum": -1,
          "x-order": 3,
          "description": "Output video height (-1 = same as original video, auto-scaled to max 1920px if needed)"
        },
        "num_frames": {
          "type": "integer",
          "title": "Num Frames",
          "default": -1,
          "minimum": -1,
          "x-order": 2,
          "description": "Number of frames to process (-1 = same as original video)"
        },
        "num_inference_steps": {
          "type": "integer",
          "title": "Num Inference Steps",
          "default": 6,
          "maximum": 50,
          "minimum": 1,
          "x-order": 6,
          "description": "Number of denoising steps (higher = better quality, slower. 6=fast, 8=balanced, 12=high quality)"
        },
        "mask_dilation_iterations": {
          "type": "integer",
          "title": "Mask Dilation Iterations",
          "default": 8,
          "maximum": 20,
          "minimum": 1,
          "x-order": 7,
          "description": "Mask expansion iterations for robust removal (higher = more thorough removal)"
        }
      }
    }
  },
  "vidutils/masked_video_generator": {
    "name": "vidutils/masked_video_generator",
    "schema": {
      "type": "object",
      "title": "Input",
      "required": [
        "video",
        "mask"
      ],
      "linkto": {
        "*": "*"
      },
      "map": {
        "video": "video"
      },
      "properties": {
        "mask": {
          "type": "string",
          "title": "Mask",
          "format": "uri",
          "x-order": 1,
          "description": "Segmentation mask for the first frame of the video, of the object(s) we want to segment."
        },
        "video": {
          "type": "string",
          "title": "Video",
          "format": "uri",
          "fileType": "video",
          "x-order": 0,
          "description": "Source video for object segmentation"
        }
      }
    }
  },
  "vidutils/videobgremove_bria": {
    "name": "vidutils/videobgremove_bria",
    "schema": {
      "type": "object",
      "title": "Input",
      "required": [
        "video_url"
      ],
      "get_metadata": true,
      "linkto": {
        "*": "*"
      },
      "map": {
        "video_url": "video"
      },
      "properties": {
        "video_url": {
          "type": "string",
          "format": "uri",
          "fileType": "video",
          "title": "Video",
          "description": "The URL of the video to remove the background from.",
          "x-order": 0
        },
        "background_color": {
          "type": "string",
          "enum": [
            "Transparent",
            "Black",
            "White",
            "Gray",
            "Red",
            "Green",
            "Blue",
            "Yellow",
            "Cyan",
            "Magenta",
            "Orange"
          ],
          "default": "Black",
          "title": "Background Color",
          "description": "The color of the new background.",
          "x-order": 1
        }
      }
    }
  },
  "vidutils/creatify_lipsync": {
    "name": "vidutils/creatify_lipsync",
    "schema": {
      "type": "object",
      "title": "Input",
      "required": [
        "video_url",
        "audio_url"
      ],
      "linkto": {
        "*": "*"
      },
      "map": {
        "video_url": "video",
        "audio_url": "audio"
      },
      "get_metadata": true,
      "properties": {
        "video_url": {
          "type": "string",
          "format": "uri",
          "title": "Video URL",
          "fileType": "video",
          "description": "The URL of the video to be processed",
          "x-order": 1
        },
        "audio_url": {
          "type": "string",
          "format": "uri",
          "title": "Audio URL",
          "fileType": "audio",
          "description": "The URL of the audio to be processed",
          "x-order": 2
        },
        "loop": {
          "type": "boolean",
          "title": "Loop",
          "description": "Whether to loop the video",
          "default": false,
          "x-order": 3
        }
      }
    }
  },
  "vidutils/runway_upscale": {
    "name": "vidutils/runway_upscale",
    "schema": {
      "type": "object",
      "title": "Input",
      "required": [
        "video"
      ],
      "linkto": {
        "*": "*"
      },
      "map": {
        "video": "video"
      },
      "get_metadata": true,
      "properties": {
        "video": {
          "type": "string",
          "title": "Video",
          "format": "uri",
          "fileType": "video",
          "x-order": 0,
          "description": "Video to upscale. Videos must be shorter than 40s and less than 4096px per side."
        }
      }
    }
  },
  "vidutils/luma_ray2_flash_modify_video": {
    "name": "vidutils/luma_ray2_flash_modify_video",
    "schema": {
      "type": "object",
      "title": "Input",
      "required": [
        "video_url"
      ],
      "linkto": {
        "*": "*"
      },
      "map": {
        "video_url": "video",
        "image_url": "image",
        "prompt": "prompt"
      },
      "get_metadata": true,
      "properties": {
        "mode": {
          "enum": [
            "adhere_1",
            "adhere_2",
            "adhere_3",
            "flex_1",
            "flex_2",
            "flex_3",
            "reimagine_1",
            "reimagine_2",
            "reimagine_3"
          ],
          "type": "string",
          "title": "mode",
          "description": "How closely the output should follow the source video. Adhere: very close, for subtle enhancements. Flex: allows more stylistic change while keeping recognizable elements. Reimagine: loosely follows the source, for dramatic or transformative changes.",
          "default": "flex_1",
          "x-order": 3
        },
        "prompt": {
          "type": "string",
          "title": "Prompt",
          "x-order": 2,
          "description": "A prompt to guide the video modification"
        },
        "video_url": {
          "type": "string",
          "title": "Video Url",
          "format": "uri",
          "x-order": 0,
          "fileType": "video",
          "description": "URL of the video to modify. Maximum video size is 100mb. Maximum video duration is 30 seconds."
        },
        "image_url": {
          "type": "string",
          "title": "First Frame Url",
          "format": "uri",
          "fileType": "image",
          "x-order": 1,
          "description": "An optional URL of the first frame of the video. This should be a modified version of the original first frame, it will be used to guide the video modification."
        }
      }
    }
  },
  "vidutils/sync_lipsync2": {
    "name": "vidutils/sync_lipsync2",
    "schema": {
      "type": "object",
      "title": "Input",
      "required": [
        "video_url",
        "audio_url"
      ],
      "linkto": {
        "*": "*"
      },
      "map": {
        "video_url": "video",
        "audio_url": "audio"
      },
      "get_metadata": true,
      "properties": {
        "video_url": {
          "type": "string",
          "format": "uri",
          "title": "Video URL",
          "fileType": "video",
          "description": "The URL of the video to be processed",
          "x-order": 1
        },
        "audio_url": {
          "type": "string",
          "format": "uri",
          "title": "Audio URL",
          "fileType": "audio",
          "description": "The URL of the audio to be processed",
          "x-order": 2
        },
        "sync_mode": {
          "enum": [
            "cut_off",
            "loop",
            "bounce",
            "silence",
            "remap"
          ],
          "type": "string",
          "title": "Sync Mode",
          "description": "The mode of the sync",
          "x-order": 3,
          "default": "cut_off"
        }
      }
    }
  },
  "vidutils/sync_lipsync2_pro": {
    "name": "vidutils/sync_lipsync2_pro",
    "schema": {
      "type": "object",
      "title": "Input",
      "required": [
        "video_url",
        "audio_url"
      ],
      "linkto": {
        "*": "*"
      },
      "map": {
        "video_url": "video",
        "audio_url": "audio"
      },
      "get_metadata": true,
      "properties": {
        "video_url": {
          "type": "string",
          "format": "uri",
          "title": "Video URL",
          "fileType": "video",
          "description": "The URL of the video to be processed",
          "x-order": 1
        },
        "audio_url": {
          "type": "string",
          "format": "uri",
          "title": "Audio URL",
          "fileType": "audio",
          "description": "The URL of the audio to be processed",
          "x-order": 2
        },
        "sync_mode": {
          "enum": [
            "cut_off",
            "loop",
            "bounce",
            "silence",
            "remap"
          ],
          "type": "string",
          "title": "Sync Mode",
          "description": "The mode of the sync",
          "x-order": 3,
          "default": "cut_off"
        }
      }
    }
  },
  "vidutils/luma_ray2_modify_video": {
    "name": "vidutils/luma_ray2_modify_video",
    "schema": {
      "type": "object",
      "title": "Input",
      "required": [
        "video_url"
      ],
      "linkto": {
        "*": "*"
      },
      "map": {
        "video_url": "video",
        "first_frame_url": "image",
        "prompt": "prompt"
      },
      "get_metadata": true,
      "properties": {
        "mode": {
          "enum": [
            "adhere_1",
            "adhere_2",
            "adhere_3",
            "flex_1",
            "flex_2",
            "flex_3",
            "reimagine_1",
            "reimagine_2",
            "reimagine_3"
          ],
          "type": "string",
          "title": "mode",
          "description": "How closely the output should follow the source video. Adhere: very close, for subtle enhancements. Flex: allows more stylistic change while keeping recognizable elements. Reimagine: loosely follows the source, for dramatic or transformative changes.",
          "default": "adhere_1",
          "x-order": 3
        },
        "prompt": {
          "type": "string",
          "title": "Prompt",
          "x-order": 2,
          "description": "A prompt to guide the video modification"
        },
        "video_url": {
          "type": "string",
          "title": "Video Url",
          "format": "uri",
          "x-order": 0,
          "fileType": "video",
          "description": "URL of the video to modify. Maximum video size is 100mb. Maximum video duration is 30 seconds."
        },
        "first_frame_url": {
          "type": "string",
          "title": "First Frame Url",
          "format": "uri",
          "fileType": "image",
          "x-order": 1,
          "description": "An optional URL of the first frame of the video. This should be a modified version of the original first frame, it will be used to guide the video modification."
        }
      }
    }
  },
  "vidutils/runway_act2": {
    "name": "vidutils/runway_act2",
    "schema": {
      "type": "object",
      "title": "Input",
      "required": [
        "character",
        "reference"
      ],
      "get_metadata": true,
      "linkto": {
        "*": "*"
      },
      "map": {
        "character_image": "image",
        "reference_video": "video"
      },
      "properties": {
        "character_image": {
          "type": "string",
          "title": "Character Image",
          "description": "URL of the image to use as the first frame",
          "format": "uri",
          "fileType": "image",
          "action": "upload_to_azure_data",
          "x-order": 0
        },
        "character_video": {
          "type": "string",
          "title": "Character Video",
          "description": "URL of the video to use as the first frame",
          "format": "uri",
          "fileType": "video",
          "action": "upload_to_azure_data",
          "x-order": 1
        },
        "reference_video": {
          "type": "string",
          "title": "Reference Video",
          "description": "A video of a person performing in the manner that you would like your character to perform.",
          "format": "uri",
          "action": "upload_to_azure_data",
          "fileType": "video",
          "x-order": 2
        },
        "model": {
          "type": "string",
          "title": "Model",
          "enum": [
            "act_two"
          ],
          "description": "The model variant to use.",
          "default": "act_two",
          "display": "hidden",
          "x-order": 3
        },
        "ratio": {
          "type": "string",
          "title": "Ratio",
          "enum": [
            "1280:720",
            "720:1280",
            "960:960",
            "1104:832",
            "832:1104",
            "1584:672"
          ],
          "description": "The resolution of the output video.",
          "default": "1280:720",
          "x-order": 4
        },
        "bodyControl": {
          "type": "boolean",
          "title": "Body Control",
          "description": "A boolean indicating whether to enable body control. When enabled, non-facial movements and gestures will be applied to the character in addition to facial expressions.",
          "default": true,
          "x-order": 5
        },
        "expressionIntensity": {
          "type": "integer",
          "title": "Expression Intensity",
          "minimum": 1,
          "maximum": 5,
          "step": 1,
          "default": 3,
          "description": "An integer between 1 and 5 (inclusive). A larger value increases the intensity of the character's expression.",
          "x-order": 6
        },
        "seed": {
          "type": "integer",
          "title": "Seed",
          "description": "If unspecified, a random number is chosen. Varying the seed integer is a way to get different results for the same other request parameters. Using the same seed integer for an identical request will produce similar results.",
          "x-order": 7
        }
      }
    }
  },
  "vidutils/thinksound": {
    "name": "vidutils/thinksound",
    "schema": {
      "type": "object",
      "title": "Input",
      "required": [
        "video_url"
      ],
      "translatable": [
        "prompt"
      ],
      "speech_enabled": [
        "prompt"
      ],
      "linkto": {
        "*": "*"
      },
      "map": {
        "prompt": "prompt",
        "video_url": "video"
      },
      "properties": {
        "video_url": {
          "type": "string",
          "title": "Video URL",
          "fileType": "video",
          "description": "The URL of the video to generate the audio for.",
          "format": "uri",
          "x-order": 0
        },
        "prompt": {
          "type": "string",
          "title": "Prompt",
          "description": "A prompt to guide the audio generation. If not provided, it will be extracted from the video.",
          "default": "",
          "x-order": 1
        },
        "seed": {
          "type": "integer",
          "title": "Seed",
          "description": "The seed for the random number generator",
          "x-order": 2
        },
        "num_inference_steps": {
          "type": "integer",
          "title": "Number of Inference Steps",
          "description": "The number of inference steps for audio generation.",
          "default": 24,
          "minimum": 2,
          "maximum": 100,
          "step": 1,
          "display": "hidden",
          "x-order": 3
        },
        "cfg_scale": {
          "type": "number",
          "title": "CFG Scale",
          "description": "The classifier-free guidance scale for audio generation.",
          "default": 5,
          "minimum": 1,
          "maximum": 20,
          "step": 1,
          "display": "hidden",
          "x-order": 4
        }
      }
    }
  },
  "vidutils/runway_aleph": {
    "name": "vidutils/runway_aleph",
    "schema": {
      "type": "object",
      "title": "Input",
      "required": [
        "prompt",
        "video"
      ],
      "translatable": [
        "prompt"
      ],
      "speech_enabled": [
        "prompt"
      ],
      "linkto": {
        "*": "*"
      },
      "get_metadata": true,
      "map": {
        "prompt": "prompt",
        "video": "video"
      },
      "properties": {
        "seed": {
          "type": "integer",
          "title": "Seed",
          "x-order": 3,
          "description": "Random seed. Set for reproducible generation"
        },
        "video": {
          "type": "string",
          "title": "Video",
          "format": "uri",
          "fileType": "video",
          "x-order": 1,
          "description": "Input video to generate from. Videos must be less than 16MB. Only 5s of the input video will be used."
        },
        "prompt": {
          "type": "string",
          "title": "Prompt",
          "x-order": 0,
          "description": "Text prompt for video generation"
        },
        "aspect_ratio": {
          "enum": [
            "16:9",
            "9:16",
            "4:3",
            "3:4",
            "1:1",
            "21:9"
          ],
          "type": "string",
          "title": "aspect_ratio",
          "description": "Video aspect ratio",
          "default": "16:9",
          "x-order": 2
        },
        "reference_images": {
          "type": "array",
          "items": {
            "type": "string",
            "format": "uri",
            "fileType": "image"
          },
          "title": "Reference Images",
          "x-order": 5,
          "maxItems": 4,
          "description": "Up to 3 reference images to influence the style or content of the output."
        }
      }
    }
  },
  "vidutils/bytedance_omnihuman": {
    "name": "vidutils/bytedance_omnihuman",
    "schema": {
      "type": "object",
      "title": "Input",
      "required": [
        "image",
        "audio"
      ],
      "get_metadata": true,
      "linkto": {
        "*": "*"
      },
      "map": {
        "image": "image",
        "audio": "audio"
      },
      "properties": {
        "audio": {
          "type": "string",
          "title": "Audio",
          "format": "uri",
          "fileType": "audio",
          "x-order": 1,
          "description": "Input audio file (MP3, WAV, etc.). For the best quality outputs audio should be no longer than 15 seconds. After 15 seconds the video quality will begin to degrade. If you have a lot of audio you want to process, we recommend splitting it into 15 second chunks."
        },
        "image": {
          "type": "string",
          "title": "Image",
          "format": "uri",
          "fileType": "image",
          "x-order": 0,
          "description": "Input image containing a human subject, face or character."
        }
      }
    }
  },
  "vidutils/stable_avatar": {
    "name": "vidutils/stable_avatar",
    "schema": {
      "type": "object",
      "title": "Input",
      "required": [
        "image",
        "audio"
      ],
      "linkto": {
        "*": "*"
      },
      "map": {
        "prompt": "prompt",
        "negative_prompt": "negative_prompt",
        "image": "image",
        "audio": "audio"
      },
      "get_metadata": true,
      "translatable": [
        "prompt",
        "negative_prompt"
      ],
      "speech_enabled": [
        "prompt",
        "negative_prompt"
      ],
      "properties": {
        "fps": {
          "type": "integer",
          "title": "Fps",
          "default": 24,
          "maximum": 60,
          "minimum": 1,
          "step": 1,
          "x-order": 11,
          "description": "Frames per second for output video"
        },
        "seed": {
          "type": "integer",
          "title": "Seed",
          "x-order": 14,
          "nullable": true,
          "description": "Random seed for reproducibility"
        },
        "audio": {
          "type": "string",
          "title": "Audio",
          "format": "uri",
          "fileType": "audio",
          "x-order": 1,
          "description": "Audio file to drive the avatar animation"
        },
        "image": {
          "type": "string",
          "title": "Image",
          "format": "uri",
          "fileType": "image",
          "x-order": 0,
          "description": "Reference image for avatar generation"
        },
        "prompt": {
          "type": "string",
          "title": "Prompt",
          "default": "",
          "x-order": 2,
          "description": "Text prompt describing the scene"
        },
        "go_fast": {
          "type": "boolean",
          "title": "Go Fast",
          "default": false,
          "display": "hidden",
          "x-order": 13,
          "description": "Enable fast mode with optimizations (TeaCache acceleration)"
        },
        "aspect_ratio": {
          "enum": [
            "auto",
            "square",
            "portrait",
            "landscape"
          ],
          "type": "string",
          "title": "aspect_ratio",
          "description": "Output video aspect ratio",
          "default": "auto",
          "x-order": 4
        },
        "motion_frame": {
          "type": "integer",
          "title": "Motion Frame",
          "default": 24,
          "maximum": 50,
          "minimum": 1,
          "display": "hidden",
          "x-order": 10,
          "description": "Motion frame parameter"
        },
        "guidance_scale": {
          "type": "number",
          "title": "Guidance Scale",
          "default": 6,
          "maximum": 10,
          "minimum": 1,
          "step": 1,
          "display": "hidden",
          "x-order": 6,
          "description": "Guidance scale for generation"
        },
        "gpu_memory_mode": {
          "enum": [
            "model_full_load",
            "model_cpu_offload",
            "model_cpu_offload_and_qfloat8",
            "sequential_cpu_offload"
          ],
          "type": "string",
          "title": "gpu_memory_mode",
          "description": "GPU memory optimization mode",
          "default": "model_cpu_offload",
          "x-order": 5,
          "display": "hidden"
        },
        "negative_prompt": {
          "type": "string",
          "title": "Negative Prompt",
          "default": "Vibrant colors, overexposure, static, blurred details, subtitles, style, artwork, painting, still image,Overall gray, worst quality, low quality, JPEG compression residue, ugly, mutilated, extra fingers,Poorly drawn hands, poorly drawn faces, deformed, disfigured, malformed limbs, fused fingers,Still image, cluttered background, three legs, crowded background, walking backwards",
          "x-order": 3,
          "description": "Negative prompt to avoid unwanted elements"
        },
        "text_guide_scale": {
          "type": "number",
          "title": "Text Guide Scale",
          "default": 3,
          "maximum": 10,
          "minimum": 1,
          "step": 1,
          "x-order": 8,
          "description": "Text guidance scale"
        },
        "audio_guide_scale": {
          "type": "number",
          "title": "Audio Guide Scale",
          "default": 5,
          "maximum": 10,
          "minimum": 1,
          "step": 1,
          "display": "hidden",
          "x-order": 9,
          "description": "Audio guidance scale"
        },
        "num_inference_steps": {
          "type": "integer",
          "title": "Num Inference Steps",
          "default": 50,
          "maximum": 100,
          "minimum": 1,
          "step": 1,
          "display": "hidden",
          "x-order": 7,
          "description": "Number of inference steps"
        },
        "overlap_window_length": {
          "type": "integer",
          "title": "Overlap Window Length",
          "default": 5,
          "maximum": 20,
          "minimum": 1,
          "step": 1,
          "display": "hidden",
          "x-order": 12,
          "description": "Overlap window length for long video generation"
        }
      }
    }
  },
  "vidutils/echomimic_v3": {
    "name": "vidutils/echomimic_v3",
    "schema": {
      "type": "object",
      "title": "Input",
      "translatable": [
        "prompt",
        "negative_prompt"
      ],
      "speech_enabled": [
        "prompt",
        "negative_prompt"
      ],
      "linkto": {
        "*": "*"
      },
      "get_metadata": true,
      "map": {
        "prompt": "prompt",
        "negative_prompt": "negative_prompt",
        "image_url": "image",
        "audio_url": "audio"
      },
      "required": [
        "image_url",
        "audio_url",
        "prompt"
      ],
      "properties": {
        "image_url": {
          "type": "string",
          "title": "Image",
          "description": "The URL of the image to use as a reference for the video generation.",
          "format": "uri",
          "fileType": "image",
          "x-order": 0
        },
        "audio_url": {
          "type": "string",
          "title": "Audio",
          "description": "The URL of the audio to use as a reference for the video generation.",
          "format": "uri",
          "fileType": "audio",
          "x-order": 1
        },
        "prompt": {
          "type": "string",
          "title": "Prompt",
          "description": "The prompt to use for the video generation.",
          "x-order": 2
        },
        "negative_prompt": {
          "type": "string",
          "title": "Negative Prompt",
          "description": "The negative prompt to use for the video generation.",
          "default": "",
          "x-order": 3
        },
        "num_frames_per_generation": {
          "type": "integer",
          "title": "Number of Frames per Generation",
          "description": "The number of frames to generate at once.",
          "default": 121,
          "minimum": 49,
          "maximum": 161,
          "step": 1,
          "x-order": 4
        },
        "guidance_scale": {
          "type": "number",
          "title": "Guidance Scale",
          "description": "The guidance scale to use for the video generation.",
          "default": 4.5,
          "minimum": 1,
          "maximum": 10,
          "step": 0.1,
          "display": "hidden",
          "x-order": 5
        },
        "audio_guidance_scale": {
          "type": "number",
          "title": "Audio Guidance Scale",
          "description": "The audio guidance scale to use for the video generation.",
          "default": 2.5,
          "minimum": 1,
          "maximum": 10,
          "step": 0.1,
          "display": "hidden",
          "x-order": 6
        },
        "seed": {
          "type": "integer",
          "title": "Seed",
          "description": "The seed to use for the video generation.",
          "x-order": 7
        }
      }
    }
  },
  "vidutils/infinitalk": {
    "name": "vidutils/infinitalk",
    "schema": {
      "type": "object",
      "title": "Input",
      "required": [
        "image_url",
        "audio_url",
        "prompt"
      ],
      "linkto": {
        "*": "*"
      },
      "map": {
        "image_url": "image",
        "audio_url": "audio",
        "prompt": "prompt"
      },
      "translatable": [
        "prompt"
      ],
      "speech_enabled": [
        "prompt"
      ],
      "properties": {
        "image_url": {
          "type": "string",
          "title": "Image URL",
          "format": "uri",
          "fileType": "image",
          "description": "URL of the input image. If the input image does not match the chosen aspect ratio, it is resized and center cropped.",
          "x-order": 0
        },
        "audio_url": {
          "type": "string",
          "title": "Audio URL",
          "format": "uri",
          "fileType": "audio",
          "description": "The URL of the audio file.",
          "x-order": 1
        },
        "prompt": {
          "type": "string",
          "title": "Prompt",
          "description": "The text prompt to guide video generation.",
          "x-order": 2
        },
        "num_frames": {
          "type": "integer",
          "title": "Number of Frames",
          "description": "Number of frames to generate. Must be between 41 to 721.",
          "default": 145,
          "minimum": 41,
          "maximum": 721,
          "x-order": 3
        },
        "resolution": {
          "type": "string",
          "title": "Resolution",
          "description": "Resolution of the video to generate. Must be either 480p or 720p.",
          "enum": [
            "480p",
            "720p"
          ],
          "default": "480p",
          "x-order": 4
        },
        "seed": {
          "type": "integer",
          "title": "Seed",
          "description": "Random seed for reproducibility. If None, a random seed is chosen.",
          "default": 42,
          "x-order": 5
        },
        "acceleration": {
          "type": "string",
          "title": "Acceleration",
          "description": "The acceleration level to use for generation.",
          "enum": [
            "none",
            "regular",
            "high"
          ],
          "default": "regular",
          "x-order": 6
        }
      }
    }
  },
  "vidutils/argil_avatar_t2v": {
    "name": "vidutils/argil_avatar_t2v",
    "schema": {
      "type": "object",
      "title": "Input",
      "required": [
        "text"
      ],
      "translatable": [
        "text"
      ],
      "speech_enabled": [
        "text"
      ],
      "linkto": {
        "*": "*"
      },
      "map": {
        "text": "prompt"
      },
      "properties": {
        "avatar": {
          "type": "string",
          "title": "Avatar",
          "description": "Select an avatar for the video generation",
          "enum": [
            "Mia outdoor (UGC)",
            "Lara (Masterclass)",
            "Ines (UGC)",
            "Maria (Masterclass)",
            "Emma (UGC)",
            "Sienna (Masterclass)",
            "Elena (UGC)",
            "Jasmine (Masterclass)",
            "Amara (Masterclass)",
            "Ryan podcast (UGC)",
            "Tyler (Masterclass)",
            "Jayse (Masterclass)",
            "Paul (Masterclass)",
            "Matteo (UGC)",
            "Daniel car (UGC)",
            "Dario (Masterclass)",
            "Viva (Masterclass)",
            "Chen (Masterclass)",
            "Alex (Masterclass)",
            "Vanessa (UGC)",
            "Laurent (UGC)",
            "Noemie car (UGC)",
            "Brandon (UGC)",
            "Byron (Masterclass)",
            "Calista (Masterclass)",
            "Milo (Masterclass)",
            "Fabien (Masterclass)",
            "Rose (UGC)"
          ],
          "default": "Mia outdoor (UGC)",
          "x-order": 1
        },
        "text": {
          "type": "string",
          "title": "Text",
          "description": "The text content for the avatar to speak",
          "x-order": 2
        },
        "voice": {
          "type": "string",
          "title": "Voice",
          "description": "Select a voice for the avatar",
          "enum": [
            "Rachel",
            "Clyde",
            "Roger",
            "Sarah",
            "Laura",
            "Thomas",
            "Charlie",
            "George",
            "Callum",
            "River",
            "Harry",
            "Liam",
            "Alice",
            "Matilda",
            "Will",
            "Jessica",
            "Lilly",
            "Bill",
            "Oxley",
            "Luna"
          ],
          "default": "Rachel",
          "x-order": 3
        },
        "remove_background": {
          "type": "boolean",
          "title": "Remove Background",
          "description": "Enabling the remove background feature will result in a 50% increase in the price.",
          "default": false,
          "x-order": 4
        }
      }
    }
  },
  "vidutils/argil_avatar_a2v": {
    "name": "vidutils/argil_avatar_a2v",
    "schema": {
      "type": "object",
      "title": "Input",
      "required": [
        "avatar",
        "audio_url"
      ],
      "linkto": {
        "*": "*"
      },
      "map": {
        "audio_url": "audio"
      },
      "get_metadata": true,
      "properties": {
        "avatar": {
          "type": "string",
          "title": "Avatar",
          "description": "Select an avatar for the video generation",
          "enum": [
            "Mia outdoor (UGC)",
            "Lara (Masterclass)",
            "Ines (UGC)",
            "Maria (Masterclass)",
            "Emma (UGC)",
            "Sienna (Masterclass)",
            "Elena (UGC)",
            "Jasmine (Masterclass)",
            "Amara (Masterclass)",
            "Ryan podcast (UGC)",
            "Tyler (Masterclass)",
            "Jayse (Masterclass)",
            "Paul (Masterclass)",
            "Matteo (UGC)",
            "Daniel car (UGC)",
            "Dario (Masterclass)",
            "Viva (Masterclass)",
            "Chen (Masterclass)",
            "Alex (Masterclass)",
            "Vanessa (UGC)",
            "Laurent (UGC)",
            "Noemie car (UGC)",
            "Brandon (UGC)",
            "Byron (Masterclass)",
            "Calista (Masterclass)",
            "Milo (Masterclass)",
            "Fabien (Masterclass)",
            "Rose (UGC)"
          ],
          "default": "Mia outdoor (UGC)",
          "x-order": 1
        },
        "audio_url": {
          "type": "string",
          "format": "uri",
          "title": "Audio URL",
          "fileType": "audio",
          "description": "The URL of the audio to be processed",
          "x-order": 2
        },
        "remove_background": {
          "type": "boolean",
          "title": "Remove Background",
          "description": "Enabling the remove background feature will result in a 50% increase in the price.",
          "default": false,
          "x-order": 3
        }
      }
    }
  },
  "vidutils/mirelo_add_audio": {
    "name": "vidutils/mirelo_add_audio",
    "schema": {
      "type": "object",
      "title": "Input",
      "required": [
        "video_url"
      ],
      "translatable": [
        "text_prompt"
      ],
      "speech_enabled": [
        "text_prompt"
      ],
      "linkto": {
        "*": "*"
      },
      "map": {
        "text_prompt": "prompt",
        "video_url": "video"
      },
      "properties": {
        "video_url": {
          "type": "string",
          "title": "Video",
          "description": "A video url that can accessed from the API to process and add sound effects",
          "format": "uri",
          "fileType": "video",
          "x-order": 0
        },
        "text_prompt": {
          "type": "string",
          "title": "Text Prompt",
          "description": "Additional description to guide the model",
          "x-order": 1
        },
        "num_samples": {
          "type": "integer",
          "title": "Number of Samples",
          "description": "The number of samples to generate from the model",
          "default": 2,
          "minimum": 1,
          "display": "hidden",
          "x-order": 2
        },
        "seed": {
          "type": "integer",
          "title": "Seed",
          "description": "The seed to use for the generation. If not provided, a random seed will be used",
          "default": 2105,
          "x-order": 3
        },
        "duration": {
          "type": "number",
          "title": "Duration",
          "description": "The duration of the generated audio in seconds",
          "default": 10,
          "minimum": 1,
          "maximum": 10,
          "step": 0.1,
          "x-order": 4
        }
      }
    }
  },
  "vidutils/kling_avatar": {
    "name": "vidutils/kling_avatar",
    "schema": {
      "type": "object",
      "title": "Input",
      "required": [
        "image_url",
        "audio_url"
      ],
      "translatable": [
        "prompt"
      ],
      "speech_enabled": [
        "prompt"
      ],
      "get_metadata": true,
      "linkto": {
        "*": "*"
      },
      "map": {
        "image_url": "image",
        "audio_url": "audio",
        "prompt": "prompt"
      },
      "properties": {
        "image_url": {
          "type": "string",
          "title": "Image",
          "description": "The URL of the image to use as your avatar",
          "format": "uri",
          "fileType": "image",
          "x-order": 0
        },
        "audio_url": {
          "type": "string",
          "title": "Audio",
          "description": "The URL of the audio file",
          "format": "uri",
          "fileType": "audio",
          "x-order": 1
        },
        "prompt": {
          "type": "string",
          "title": "Prompt",
          "description": "The prompt to use for the video generation",
          "default": "",
          "x-order": 2
        }
      }
    }
  },
  "vidutils/kling_avatar_pro": {
    "name": "vidutils/kling_avatar_pro",
    "schema": {
      "type": "object",
      "title": "Input",
      "required": [
        "image_url",
        "audio_url"
      ],
      "translatable": [
        "prompt"
      ],
      "speech_enabled": [
        "prompt"
      ],
      "get_metadata": true,
      "linkto": {
        "*": "*"
      },
      "map": {
        "image_url": "image",
        "audio_url": "audio",
        "prompt": "prompt"
      },
      "properties": {
        "image_url": {
          "type": "string",
          "title": "Image",
          "description": "The URL of the image to use as your avatar",
          "format": "uri",
          "fileType": "image",
          "x-order": 0
        },
        "audio_url": {
          "type": "string",
          "title": "Audio",
          "description": "The URL of the audio file",
          "format": "uri",
          "fileType": "audio",
          "x-order": 1
        },
        "prompt": {
          "type": "string",
          "title": "Prompt",
          "description": "The prompt to use for the video generation",
          "default": "",
          "x-order": 2
        }
      }
    }
  },
  "vidutils/bria_upscale": {
    "name": "vidutils/bria_upscale",
    "schema": {
      "type": "object",
      "title": "Input",
      "required": [
        "video_url"
      ],
      "translatable": [],
      "speech_enabled": [],
      "get_metadata": true,
      "linkto": {
        "*": "*"
      },
      "map": {
        "video_url": "video"
      },
      "properties": {
        "video_url": {
          "type": "string",
          "title": "Video",
          "description": "Input video to increase resolution. Size should be less than 14142x14142 and duration less than 30s",
          "format": "uri",
          "fileType": "video",
          "x-order": 0
        },
        "desired_increase": {
          "type": "string",
          "title": "Desired Increase",
          "description": "desired_increase factor",
          "enum": [
            "2",
            "4"
          ],
          "default": "2",
          "x-order": 1
        }
      }
    }
  },
  "vidutils/hunyuan_foley_add_audio": {
    "name": "vidutils/hunyuan_foley_add_audio",
    "schema": {
      "type": "object",
      "title": "Input",
      "required": [
        "video_url",
        "text_prompt"
      ],
      "translatable": [
        "text_prompt",
        "negative_prompt"
      ],
      "speech_enabled": [
        "text_prompt",
        "negative_prompt"
      ],
      "get_metadata": true,
      "linkto": {
        "*": "*"
      },
      "map": {
        "video_url": "video",
        "text_prompt": "prompt"
      },
      "properties": {
        "video_url": {
          "type": "string",
          "title": "Video",
          "description": "The URL of the video to generate audio for",
          "format": "uri",
          "fileType": "video",
          "x-order": 0
        },
        "text_prompt": {
          "type": "string",
          "title": "Text Prompt",
          "description": "Text description of the desired audio (optional)",
          "x-order": 1
        },
        "negative_prompt": {
          "type": "string",
          "title": "Negative Prompt",
          "description": "Negative prompt to avoid certain audio characteristics",
          "default": "noisy, harsh",
          "x-order": 2
        },
        "guidance_scale": {
          "type": "number",
          "title": "Guidance Scale",
          "description": "Guidance scale for audio generation",
          "default": 4.5,
          "minimum": 1,
          "maximum": 10,
          "step": 0.1,
          "display": "hidden",
          "x-order": 3
        },
        "num_inference_steps": {
          "type": "integer",
          "title": "Number of Inference Steps",
          "description": "Number of inference steps for generation",
          "default": 50,
          "minimum": 10,
          "maximum": 100,
          "step": 1,
          "display": "hidden",
          "x-order": 4
        },
        "seed": {
          "type": "integer",
          "title": "Seed",
          "description": "Random seed for reproducible generation",
          "x-order": 5
        }
      }
    }
  },
  "vidutils/heygen_video_translate": {
    "name": "vidutils/heygen_video_translate",
    "schema": {
      "type": "object",
      "title": "Input",
      "required": [
        "video"
      ],
      "translatable": [],
      "speech_enabled": [],
      "get_metadata": true,
      "linkto": {
        "*": "*"
      },
      "map": {
        "video": "video"
      },
      "properties": {
        "video": {
          "type": "string",
          "title": "Video",
          "format": "uri",
          "x-order": 0,
          "description": "Input video file (.mp4)"
        },
        "output_language": {
          "enum": [
            "English",
            "Spanish",
            "French",
            "Hindi",
            "Italian",
            "German",
            "Polish",
            "Portuguese",
            "Chinese",
            "Japanese",
            "Dutch",
            "Turkish",
            "Korean",
            "Danish",
            "Arabic",
            "Romanian",
            "Mandarin",
            "Filipino",
            "Swedish",
            "Indonesian",
            "Ukrainian",
            "Greek",
            "Czech",
            "Bulgarian",
            "Malay",
            "Slovak",
            "Croatian",
            "Tamil",
            "Finnish",
            "Russian",
            "Afrikaans (South Africa)",
            "Albanian (Albania)",
            "Amharic (Ethiopia)",
            "Arabic (Algeria)",
            "Arabic (Bahrain)",
            "Arabic (Egypt)",
            "Arabic (Iraq)",
            "Arabic (Jordan)",
            "Arabic (Kuwait)",
            "Arabic (Lebanon)",
            "Arabic (Libya)",
            "Arabic (Morocco)",
            "Arabic (Oman)",
            "Arabic (Qatar)",
            "Arabic (Saudi Arabia)",
            "Arabic (Syria)",
            "Arabic (Tunisia)",
            "Arabic (United Arab Emirates)",
            "Arabic (Yemen)",
            "Armenian (Armenia)",
            "Azerbaijani (Latin, Azerbaijan)",
            "Bangla (Bangladesh)",
            "Basque",
            "Bengali (India)",
            "Bosnian (Bosnia and Herzegovina)",
            "Bulgarian (Bulgaria)",
            "Burmese (Myanmar)",
            "Catalan",
            "Chinese (Cantonese, Traditional)",
            "Chinese (Jilu Mandarin, Simplified)",
            "Chinese (Mandarin, Simplified)",
            "Chinese (Northeastern Mandarin, Simplified)",
            "Chinese (Southwestern Mandarin, Simplified)",
            "Chinese (Taiwanese Mandarin, Traditional)",
            "Chinese (Wu, Simplified)",
            "Chinese (Zhongyuan Mandarin Henan, Simplified)",
            "Chinese (Zhongyuan Mandarin Shaanxi, Simplified)",
            "Croatian (Croatia)",
            "Czech (Czechia)",
            "Danish (Denmark)",
            "Dutch (Belgium)",
            "Dutch (Netherlands)",
            "English (Australia)",
            "English (Canada)",
            "English (Hong Kong SAR)",
            "English (India)",
            "English (Ireland)",
            "English (Kenya)",
            "English (New Zealand)",
            "English (Nigeria)",
            "English (Philippines)",
            "English (Singapore)",
            "English (South Africa)",
            "English (Tanzania)",
            "English (UK)",
            "English (United States)",
            "Estonian (Estonia)",
            "Filipino (Philippines)",
            "Finnish (Finland)",
            "French (Belgium)",
            "French (Canada)",
            "French (France)",
            "French (Switzerland)",
            "Galician",
            "Georgian (Georgia)",
            "German (Austria)",
            "German (Germany)",
            "German (Switzerland)",
            "Greek (Greece)",
            "Gujarati (India)",
            "Hebrew (Israel)",
            "Hindi (India)",
            "Hungarian (Hungary)",
            "Icelandic (Iceland)",
            "Indonesian (Indonesia)",
            "Irish (Ireland)",
            "Italian (Italy)",
            "Japanese (Japan)",
            "Javanese (Latin, Indonesia)",
            "Kannada (India)",
            "Kazakh (Kazakhstan)",
            "Khmer (Cambodia)",
            "Korean (Korea)",
            "Lao (Laos)",
            "Latvian (Latvia)",
            "Lithuanian (Lithuania)",
            "Macedonian (North Macedonia)",
            "Malay (Malaysia)",
            "Malayalam (India)",
            "Maltese (Malta)",
            "Marathi (India)",
            "Mongolian (Mongolia)",
            "Nepali (Nepal)",
            "Norwegian Bokmål (Norway)",
            "Pashto (Afghanistan)",
            "Persian (Iran)",
            "Polish (Poland)",
            "Portuguese (Brazil)",
            "Portuguese (Portugal)",
            "Romanian (Romania)",
            "Russian (Russia)",
            "Serbian (Latin, Serbia)",
            "Sinhala (Sri Lanka)",
            "Slovak (Slovakia)",
            "Slovenian (Slovenia)",
            "Somali (Somalia)",
            "Spanish (Argentina)",
            "Spanish (Bolivia)",
            "Spanish (Chile)",
            "Spanish (Colombia)",
            "Spanish (Costa Rica)",
            "Spanish (Cuba)",
            "Spanish (Dominican Republic)",
            "Spanish (Ecuador)",
            "Spanish (El Salvador)",
            "Spanish (Equatorial Guinea)",
            "Spanish (Guatemala)",
            "Spanish (Honduras)",
            "Spanish (Mexico)",
            "Spanish (Nicaragua)",
            "Spanish (Panama)",
            "Spanish (Paraguay)",
            "Spanish (Peru)",
            "Spanish (Puerto Rico)",
            "Spanish (Spain)",
            "Spanish (United States)",
            "Spanish (Uruguay)",
            "Spanish (Venezuela)",
            "Sundanese (Indonesia)",
            "Swahili (Kenya)",
            "Swahili (Tanzania)",
            "Swedish (Sweden)",
            "Tamil (India)",
            "Tamil (Malaysia)",
            "Tamil (Singapore)",
            "Tamil (Sri Lanka)",
            "Telugu (India)",
            "Thai (Thailand)",
            "Turkish (Türkiye)",
            "Ukrainian (Ukraine)",
            "Urdu (India)",
            "Urdu (Pakistan)",
            "Uzbek (Latin, Uzbekistan)",
            "Vietnamese (Vietnam)",
            "Welsh (United Kingdom)",
            "Zulu (South Africa)",
            "English - Your Accent",
            "English - American Accent"
          ],
          "type": "string",
          "title": "output_language",
          "description": "The target language in which the video will be translated",
          "default": "English",
          "x-order": 1
        }
      }
    }
  },
  "vidutils/veed_fabric1": {
    "name": "vidutils/veed_fabric1",
    "schema": {
      "type": "object",
      "title": "Input",
      "required": [
        "image_url",
        "audio_url"
      ],
      "linkto": {
        "*": "*"
      },
      "map": {
        "image_url": "image",
        "audio_url": "audio"
      },
      "get_metadata": true,
      "properties": {
        "image_url": {
          "type": "string",
          "format": "uri",
          "title": "Image",
          "fileType": "image",
          "description": "The URL of the image to be processed",
          "x-order": 1
        },
        "audio_url": {
          "type": "string",
          "format": "uri",
          "title": "Audio",
          "fileType": "audio",
          "description": "The URL of the audio to be processed",
          "x-order": 2
        },
        "resolution": {
          "enum": [
            "480p",
            "720p"
          ],
          "type": "string",
          "title": "Resolution",
          "default": "480p",
          "description": "The resolution for the output",
          "x-order": 3
        },
        "fast_mode": {
          "type": "boolean",
          "title": "Fast Mode",
          "default": false,
          "description": "If set to true, the function will use the fast mode to generate the video",
          "x-order": 4
        }
      }
    }
  },
  "vidutils/wan2_2_animate_move": {
    "name": "vidutils/wan2_2_animate_move",
    "schema": {
      "type": "object",
      "title": "Input",
      "required": [
        "video_url",
        "image_url"
      ],
      "linkto": {
        "*": "*"
      },
      "map": {
        "video_url": "video",
        "image_url": "image"
      },
      "get_metadata": true,
      "properties": {
        "video_url": {
          "type": "string",
          "format": "uri",
          "title": "Video",
          "fileType": "video",
          "description": "URL of the input video.",
          "x-order": 1
        },
        "image_url": {
          "type": "string",
          "format": "uri",
          "title": "Image",
          "fileType": "image",
          "description": "URL of the input image. If the input image does not match the chosen aspect ratio, it is resized and center cropped.",
          "x-order": 2
        },
        "guidance_scale": {
          "type": "number",
          "title": "Guidance Scale",
          "description": "Classifier-free guidance scale. Higher values give better adherence to the prompt but may decrease quality.",
          "default": 1,
          "minimum": 1,
          "maximum": 10,
          "step": 0.1,
          "display": "hidden",
          "x-order": 3
        },
        "resolution": {
          "enum": [
            "480p",
            "580p",
            "720p"
          ],
          "type": "string",
          "title": "Resolution",
          "description": "Resolution of the generated video (480p, 580p, or 720p).",
          "default": "480p",
          "x-order": 4
        },
        "seed": {
          "type": "integer",
          "title": "Seed",
          "description": "Random seed for reproducibility. If None, a random seed is chosen.",
          "x-order": 5
        },
        "num_inference_steps": {
          "type": "integer",
          "title": "Inference Steps",
          "description": "Number of inference steps for sampling. Higher values give better quality but take longer.",
          "default": 20,
          "minimum": 2,
          "maximum": 40,
          "step": 1,
          "display": "hidden",
          "x-order": 6
        },
        "enable_safety_checker": {
          "type": "boolean",
          "title": "Enable Safety Checker",
          "description": "If set to true, input data will be checked for safety before processing.",
          "default": false,
          "display": "hidden",
          "x-order": 7
        },
        "shift": {
          "type": "number",
          "title": "Shift",
          "description": "Shift value for the video. Must be between 1.0 and 10.0.",
          "default": 5,
          "minimum": 1,
          "maximum": 10,
          "step": 0.1,
          "display": "hidden",
          "x-order": 8
        },
        "video_quality": {
          "enum": [
            "low",
            "medium",
            "high",
            "maximum"
          ],
          "type": "string",
          "title": "Video Quality",
          "description": "The quality of the output video. Higher quality means better visual quality but larger file size.",
          "default": "high",
          "display": "hidden",
          "x-order": 9
        },
        "video_write_mode": {
          "enum": [
            "fast",
            "balanced",
            "small"
          ],
          "type": "string",
          "title": "Video Write Mode",
          "description": "The write mode of the output video. Faster write mode means faster results but larger file size, balanced write mode is a good compromise between speed and quality, and small write mode is the slowest but produces the smallest file size.",
          "default": "balanced",
          "display": "hidden",
          "x-order": 10
        }
      }
    }
  },
  "vidutils/wan2_2_animate_replace": {
    "name": "vidutils/wan2_2_animate_replace",
    "schema": {
      "type": "object",
      "title": "Input",
      "required": [
        "video_url",
        "image_url"
      ],
      "linkto": {
        "*": "*"
      },
      "map": {
        "video_url": "video",
        "image_url": "image"
      },
      "get_metadata": true,
      "properties": {
        "video_url": {
          "type": "string",
          "format": "uri",
          "title": "Video",
          "fileType": "video",
          "description": "URL of the input video.",
          "x-order": 1
        },
        "image_url": {
          "type": "string",
          "format": "uri",
          "title": "Image",
          "fileType": "image",
          "description": "URL of the input image. If the input image does not match the chosen aspect ratio, it is resized and center cropped.",
          "x-order": 2
        },
        "guidance_scale": {
          "type": "number",
          "title": "Guidance Scale",
          "description": "Classifier-free guidance scale. Higher values give better adherence to the prompt but may decrease quality.",
          "default": 1,
          "minimum": 1,
          "maximum": 10,
          "step": 0.1,
          "display": "hidden",
          "x-order": 3
        },
        "resolution": {
          "enum": [
            "480p",
            "580p",
            "720p"
          ],
          "type": "string",
          "title": "Resolution",
          "description": "Resolution of the generated video (480p, 580p, or 720p).",
          "default": "480p",
          "x-order": 4
        },
        "seed": {
          "type": "integer",
          "title": "Seed",
          "description": "Random seed for reproducibility. If None, a random seed is chosen.",
          "x-order": 5
        },
        "num_inference_steps": {
          "type": "integer",
          "title": "Inference Steps",
          "description": "Number of inference steps for sampling. Higher values give better quality but take longer.",
          "default": 20,
          "minimum": 2,
          "maximum": 40,
          "step": 1,
          "display": "hidden",
          "x-order": 6
        },
        "enable_safety_checker": {
          "type": "boolean",
          "title": "Enable Safety Checker",
          "description": "If set to true, input data will be checked for safety before processing.",
          "default": false,
          "display": "hidden",
          "x-order": 7
        },
        "shift": {
          "type": "number",
          "title": "Shift",
          "description": "Shift value for the video. Must be between 1.0 and 10.0.",
          "default": 5,
          "minimum": 1,
          "maximum": 10,
          "step": 0.1,
          "display": "hidden",
          "x-order": 8
        },
        "video_quality": {
          "enum": [
            "low",
            "medium",
            "high",
            "maximum"
          ],
          "type": "string",
          "title": "Video Quality",
          "description": "The quality of the output video. Higher quality means better visual quality but larger file size.",
          "default": "high",
          "display": "hidden",
          "x-order": 9
        },
        "video_write_mode": {
          "enum": [
            "fast",
            "balanced",
            "small"
          ],
          "type": "string",
          "title": "Video Write Mode",
          "description": "The write mode of the output video. Faster write mode means faster results but larger file size, balanced write mode is a good compromise between speed and quality, and small write mode is the slowest but produces the smallest file size.",
          "default": "balanced",
          "display": "hidden",
          "x-order": 10
        }
      }
    }
  },
  "vidutils/lucy_edit_dev": {
    "name": "vidutils/lucy_edit_dev",
    "schema": {
      "type": "object",
      "title": "Input",
      "required": [
        "prompt",
        "video_url"
      ],
      "linkto": {
        "*": "*"
      },
      "map": {
        "video_url": "video"
      },
      "get_metadata": true,
      "properties": {
        "prompt": {
          "type": "string",
          "title": "Prompt",
          "description": "Text description of the desired video content",
          "x-order": 1
        },
        "video_url": {
          "type": "string",
          "format": "uri",
          "title": "Video",
          "fileType": "video",
          "description": "URL of the video to edit",
          "x-order": 2
        },
        "sync_mode": {
          "type": "boolean",
          "title": "Sync Mode",
          "description": "If set to true, the function will wait for the video to be generated and uploaded before returning the response. This will increase the latency of the function but it allows you to get the video directly in the response without going through the CDN.",
          "default": false,
          "display": "hidden",
          "x-order": 3
        },
        "enhance_prompt": {
          "type": "boolean",
          "title": "Enhance Prompt",
          "description": "Whether to enhance the prompt for better results.",
          "default": true,
          "x-order": 4
        }
      }
    }
  },
  "videogen_templates/french_kiss": {
    "name": "videogen_templates/french_kiss",
    "schema": {
      "type": "object",
      "title": "Input",
      "required": [
        "template",
        "images",
        "prompt"
      ],
      "linkto": {
        "*": "*"
      },
      "map": {
        "images": "images"
      },
      "translatable": [
        "prompt"
      ],
      "speech_enabled": [
        "prompt"
      ],
      "properties": {
        "images": {
          "type": "array",
          "title": "Images",
          "x-order": 1,
          "items": {
            "type": "string",
            "fileType": "image",
            "format": "uri"
          },
          "maxItems": 1,
          "minItems": 1,
          "description": "Image URL or Base64 encoded image (PNG, JPEG, JPG, WebP). Must be at least 128x128px, aspect ratio between 1:4 and 4:1, and under 10MB"
        },
        "prompt": {
          "type": "string",
          "title": "Prompt",
          "x-order": 2,
          "default": "The two figures in the painting move closer and then passionately kiss, alternating with deep and firm intensity.",
          "maxLength": 1500,
          "description": "Text prompt for video generation"
        },
        "seed": {
          "type": "integer",
          "title": "Random Seed",
          "x-order": 3,
          "description": "Optional random seed for generation"
        }
      }
    }
  },
  "videogen_templates/slice_therapy": {
    "name": "videogen_templates/slice_therapy",
    "schema": {
      "type": "object",
      "title": "Input",
      "required": [
        "template",
        "images",
        "prompt"
      ],
      "linkto": {
        "*": "*"
      },
      "map": {
        "images": "images"
      },
      "translatable": [
        "prompt"
      ],
      "speech_enabled": [
        "prompt"
      ],
      "properties": {
        "images": {
          "type": "array",
          "title": "Images",
          "x-order": 1,
          "items": {
            "type": "string",
            "fileType": "image",
            "format": "uri"
          },
          "maxItems": 1,
          "minItems": 1,
          "description": "Image URL or Base64 encoded image (PNG, JPEG, JPG, WebP). Must be at least 128x128px, aspect ratio between 1:4 and 4:1, and under 10MB"
        },
        "prompt": {
          "type": "string",
          "title": "Prompt",
          "x-order": 2,
          "default": "Video content\\n At the beginning of the video, one hand holds the subject in the image, while another hand reaches out from off-screen, using a tool to cut the surface of the subject. As the process continues, the interior or layers of the subject gradually become visible, showcasing rich colors, patterns, and textures. Throughout the process, the hand remains steady, carefully operating the tool, gradually revealing the complex design inside.",
          "maxLength": 1500,
          "description": "Text prompt for video generation"
        },
        "seed": {
          "type": "integer",
          "title": "Random Seed",
          "x-order": 3,
          "description": "Optional random seed for generation"
        }
      }
    }
  },
  "videogen_templates/beast_companion": {
    "name": "videogen_templates/beast_companion",
    "schema": {
      "type": "object",
      "title": "Input",
      "required": [
        "template",
        "images",
        "prompt"
      ],
      "linkto": {
        "*": "*"
      },
      "map": {
        "images": "images"
      },
      "translatable": [
        "prompt"
      ],
      "speech_enabled": [
        "prompt"
      ],
      "properties": {
        "images": {
          "type": "array",
          "title": "Images",
          "x-order": 1,
          "items": {
            "type": "string",
            "fileType": "image",
            "format": "uri"
          },
          "maxItems": 1,
          "minItems": 1,
          "description": "Image URL or Base64 encoded image (PNG, JPEG, JPG, WebP). Must be at least 128x128px, aspect ratio between 1:4 and 4:1, and under 10MB"
        },
        "prompt": {
          "type": "string",
          "title": "Prompt",
          "x-order": 2,
          "default": "Video content\\n The characters in Image 1 and Image 2 walk confidently side by side, slowly approaching the camera.\\n# Requirements\\n The setting is a modern fashion runway with a glossy white surface, surrounded by an audience seated in a dimly lit room.  The atmosphere is sophisticated and focused,  with the spotlight on the two characters as they make their way down the runway.\\n# Requirements\\n1.Please strictly follow my instructions;  the image only supplements the character's appearance details.\\n2.Camera Movement: Zoom out.\\n3.Emphasize standing confidently，arrogant and look straight ahead.\\n4.Do not include descriptions like holding hands.\\n5.shot_size:Wide Shot.\\n6.Emphasize that male roles are slightly higher than female roles.\\n7.Emphasize starting with two characters side by side.\\n8.Emphasize the character facing the camera.",
          "maxLength": 1500,
          "description": "Text prompt for video generation"
        },
        "seed": {
          "type": "integer",
          "title": "Random Seed",
          "x-order": 3,
          "description": "Optional random seed for generation"
        },
        "aspect_ratio": {
          "type": "string",
          "title": "Aspect Ratio",
          "x-order": 4,
          "enum": [
            "16:9",
            "9:16",
            "1:1"
          ],
          "default": "16:9",
          "description": "Video aspect ratio (availability varies by template)"
        },
        "beast": {
          "type": "string",
          "title": "Beast",
          "x-order": 6,
          "enum": [
            "auto",
            "bear",
            "tiger",
            "elk",
            "snake",
            "lion",
            "wolf"
          ],
          "default": "auto",
          "description": "Style control field for beast_companion template only"
        }
      }
    }
  },
  "videogen_templates/bloom_magic": {
    "name": "videogen_templates/bloom_magic",
    "schema": {
      "type": "object",
      "title": "Input",
      "required": [
        "template",
        "images",
        "prompt"
      ],
      "linkto": {
        "*": "*"
      },
      "map": {
        "images": "images"
      },
      "translatable": [
        "prompt"
      ],
      "speech_enabled": [
        "prompt"
      ],
      "properties": {
        "images": {
          "type": "array",
          "title": "Images",
          "x-order": 1,
          "items": {
            "type": "string",
            "fileType": "image",
            "format": "uri"
          },
          "maxItems": 1,
          "minItems": 1,
          "description": "Image URL or Base64 encoded image (PNG, JPEG, JPG, WebP). Must be at least 128x128px, aspect ratio between 1:4 and 4:1, and under 10MB"
        },
        "prompt": {
          "type": "string",
          "title": "Prompt",
          "x-order": 2,
          "default": "Many flowers elegantly and rapidly grow from various surfaces of the main subject in image 1, swaying in the wind, full of vitality.",
          "maxLength": 1500,
          "description": "Text prompt for video generation"
        },
        "seed": {
          "type": "integer",
          "title": "Random Seed",
          "x-order": 3,
          "description": "Optional random seed for generation"
        }
      }
    }
  },
  "videogen_templates/golden_epoch": {
    "name": "videogen_templates/golden_epoch",
    "schema": {
      "type": "object",
      "title": "Input",
      "required": [
        "template",
        "images",
        "prompt"
      ],
      "linkto": {
        "*": "*"
      },
      "map": {
        "images": "images"
      },
      "translatable": [
        "prompt"
      ],
      "speech_enabled": [
        "prompt"
      ],
      "properties": {
        "images": {
          "type": "array",
          "title": "Images",
          "x-order": 1,
          "items": {
            "type": "string",
            "fileType": "image",
            "format": "uri"
          },
          "maxItems": 1,
          "minItems": 1,
          "description": "Image URL or Base64 encoded image (PNG, JPEG, JPG, WebP). Must be at least 128x128px, aspect ratio between 1:4 and 4:1, and under 10MB"
        },
        "prompt": {
          "type": "string",
          "title": "Prompt",
          "x-order": 2,
          "default": "Video content\\n The character displays a unique charm of elegance and intelligence, confidently looking at the camera, and giving a slight smile. Vintage film style, Wong Kar-wai aesthetic style.\\n# Requirements\\n1.There is only one character. Accurately describe the character's appearance based on Figure 1, and accurately describe the character's clothing and background features based on Figure 2\\n2.Motion_level:Middle.",
          "maxLength": 1500,
          "description": "Text prompt for video generation"
        },
        "seed": {
          "type": "integer",
          "title": "Random Seed",
          "x-order": 3,
          "description": "Optional random seed for generation"
        }
      }
    }
  },
  "videogen_templates/oscar_gala": {
    "name": "videogen_templates/oscar_gala",
    "schema": {
      "type": "object",
      "title": "Input",
      "required": [
        "template",
        "images",
        "prompt"
      ],
      "linkto": {
        "*": "*"
      },
      "map": {
        "images": "images"
      },
      "translatable": [
        "prompt"
      ],
      "speech_enabled": [
        "prompt"
      ],
      "properties": {
        "images": {
          "type": "array",
          "title": "Images",
          "x-order": 1,
          "items": {
            "type": "string",
            "fileType": "image",
            "format": "uri"
          },
          "maxItems": 1,
          "minItems": 1,
          "description": "Image URL or Base64 encoded image (PNG, JPEG, JPG, WebP). Must be at least 128x128px, aspect ratio between 1:4 and 4:1, and under 10MB"
        },
        "prompt": {
          "type": "string",
          "title": "Prompt",
          "x-order": 2,
          "default": "Video content\\n The person in Figure One is dressed in the outfit from Figure Two, holding an Oscar statuette, standing at the center of the Oscar awards stage, smiling at the camera while delivering an acceptance speech.\\n# Requirements\\n1. A precise description of the person in Figure One, including their facial features, expression, hairstyle, and gender.\\n2. Determine the type of attire based on the gender of the character in Image 1. If the character is female, she wears the gown from Image 2. If the character is male, he wears a stylish suit.\\n3. Set Additional Information as 'None’.",
          "maxLength": 1500,
          "description": "Text prompt for video generation"
        },
        "seed": {
          "type": "integer",
          "title": "Random Seed",
          "x-order": 3,
          "description": "Optional random seed for generation"
        }
      }
    }
  },
  "videogen_templates/fashion_stride": {
    "name": "videogen_templates/fashion_stride",
    "schema": {
      "type": "object",
      "title": "Input",
      "required": [
        "template",
        "images",
        "prompt"
      ],
      "linkto": {
        "*": "*"
      },
      "map": {
        "images": "images"
      },
      "translatable": [
        "prompt"
      ],
      "speech_enabled": [
        "prompt"
      ],
      "properties": {
        "images": {
          "type": "array",
          "title": "Images",
          "x-order": 1,
          "items": {
            "type": "string",
            "fileType": "image",
            "format": "uri"
          },
          "maxItems": 1,
          "minItems": 1,
          "description": "Image URL or Base64 encoded image (PNG, JPEG, JPG, WebP). Must be at least 128x128px, aspect ratio between 1:4 and 4:1, and under 10MB"
        },
        "prompt": {
          "type": "string",
          "title": "Prompt",
          "x-order": 2,
          "default": "Video content\\n The character in Image 1 walks confidently in the scene of Image 2, slowly approaching the camera, with slow motion capturing the character's confident expression.\\n# Requirements\\n1.Emphasize the slow-motion effect of ultra-high-speed photography.\\n2.Please strictly follow my instructions;  the image only supplements the character's appearance details.\\n3.Motion_Level:small.\\n4.Camera Movement: Zoom out.",
          "maxLength": 1500,
          "description": "Text prompt for video generation"
        },
        "seed": {
          "type": "integer",
          "title": "Random Seed",
          "x-order": 3,
          "description": "Optional random seed for generation"
        }
      }
    }
  },
  "videogen_templates/star_carpet": {
    "name": "videogen_templates/star_carpet",
    "schema": {
      "type": "object",
      "title": "Input",
      "required": [
        "template",
        "images",
        "prompt"
      ],
      "linkto": {
        "*": "*"
      },
      "map": {
        "images": "images"
      },
      "translatable": [
        "prompt"
      ],
      "speech_enabled": [
        "prompt"
      ],
      "properties": {
        "images": {
          "type": "array",
          "title": "Images",
          "x-order": 1,
          "items": {
            "type": "string",
            "fileType": "image",
            "format": "uri"
          },
          "maxItems": 1,
          "minItems": 1,
          "description": "Image URL or Base64 encoded image (PNG, JPEG, JPG, WebP). Must be at least 128x128px, aspect ratio between 1:4 and 4:1, and under 10MB"
        },
        "prompt": {
          "type": "string",
          "title": "Prompt",
          "x-order": 2,
          "default": "Video content\\n The character in Image 1 walks confidently in the scene of Image 2, slowly approaching the camera, with slow motion capturing the character's confident expression.\\n# Requirements\\n1.Emphasize the slow-motion effect of ultra-high-speed photography.\\n2.Please strictly follow my instructions;  the image only supplements the character's appearance details.\\n3.Motion_Level:small.\\n4.Camera Movement: Zoom out.",
          "maxLength": 1500,
          "description": "Text prompt for video generation"
        },
        "seed": {
          "type": "integer",
          "title": "Random Seed",
          "x-order": 3,
          "description": "Optional random seed for generation"
        }
      }
    }
  },
  "videogen_templates/flame_carpet": {
    "name": "videogen_templates/flame_carpet",
    "schema": {
      "type": "object",
      "title": "Input",
      "required": [
        "template",
        "images",
        "prompt"
      ],
      "linkto": {
        "*": "*"
      },
      "map": {
        "images": "images"
      },
      "translatable": [
        "prompt"
      ],
      "speech_enabled": [
        "prompt"
      ],
      "properties": {
        "images": {
          "type": "array",
          "title": "Images",
          "x-order": 1,
          "items": {
            "type": "string",
            "fileType": "image",
            "format": "uri"
          },
          "maxItems": 1,
          "minItems": 1,
          "description": "Image URL or Base64 encoded image (PNG, JPEG, JPG, WebP). Must be at least 128x128px, aspect ratio between 1:4 and 4:1, and under 10MB"
        },
        "prompt": {
          "type": "string",
          "title": "Prompt",
          "x-order": 2,
          "default": "Video content\\n The character in Image 1 walks confidently in the scene of Image 2, slowly approaching the camera, with slow motion capturing the character's confident expression.\\n# Requirements\\n1.Emphasize the slow-motion effect of ultra-high-speed photography.\\n2.Please strictly follow my instructions;  the image only supplements the character's appearance details.\\n3.Motion_Level:small.\\n4.Camera Movement: Zoom out.",
          "maxLength": 1500,
          "description": "Text prompt for video generation"
        },
        "seed": {
          "type": "integer",
          "title": "Random Seed",
          "x-order": 3,
          "description": "Optional random seed for generation"
        }
      }
    }
  },
  "videogen_templates/frost_carpet": {
    "name": "videogen_templates/frost_carpet",
    "schema": {
      "type": "object",
      "title": "Input",
      "required": [
        "template",
        "images",
        "prompt"
      ],
      "linkto": {
        "*": "*"
      },
      "map": {
        "images": "images"
      },
      "translatable": [
        "prompt"
      ],
      "speech_enabled": [
        "prompt"
      ],
      "properties": {
        "images": {
          "type": "array",
          "title": "Images",
          "x-order": 1,
          "items": {
            "type": "string",
            "fileType": "image",
            "format": "uri"
          },
          "maxItems": 1,
          "minItems": 1,
          "description": "Image URL or Base64 encoded image (PNG, JPEG, JPG, WebP). Must be at least 128x128px, aspect ratio between 1:4 and 4:1, and under 10MB"
        },
        "prompt": {
          "type": "string",
          "title": "Prompt",
          "x-order": 2,
          "default": "Video content\\n It is snowing heavily in the sky, and the character in image 1 confidently walks down the red carpet, slowly approaching the camera, with slow motion capturing the character 's confident expression. Environment:The setting is a stunning winter landscape, where heavy snowflakes cascade from the sky, blanketing the ground in a soft white layer.  The red carpet stretches out on a smooth, icy surface, contrasting sharply with the surrounding snow, creating a striking visual that draws attention to the confident figure walking towards the camera. \\n# Requirements\\n1.Emphasize the slow-motion effect of ultra-high-speed photography.\\n2.Please strictly follow my instructions;  the image only supplements the character's appearance details.\\n3.Motion_Level:small.\\n4.Camera Movement: Zoom out.",
          "maxLength": 1500,
          "description": "Text prompt for video generation"
        },
        "seed": {
          "type": "integer",
          "title": "Random Seed",
          "x-order": 3,
          "description": "Optional random seed for generation"
        }
      }
    }
  },
  "videogen_templates/exotic_princess": {
    "name": "videogen_templates/exotic_princess",
    "schema": {
      "type": "object",
      "title": "Input",
      "required": [
        "template",
        "images",
        "prompt"
      ],
      "linkto": {
        "*": "*"
      },
      "map": {
        "images": "images"
      },
      "translatable": [
        "prompt"
      ],
      "speech_enabled": [
        "prompt"
      ],
      "properties": {
        "images": {
          "type": "array",
          "title": "Images",
          "x-order": 1,
          "items": {
            "type": "string",
            "fileType": "image",
            "format": "uri"
          },
          "maxItems": 1,
          "minItems": 1,
          "description": "Image URL or Base64 encoded image (PNG, JPEG, JPG, WebP). Must be at least 128x128px, aspect ratio between 1:4 and 4:1, and under 10MB"
        },
        "prompt": {
          "type": "string",
          "title": "Prompt",
          "x-order": 2,
          "default": "Video content\\n Character [Detailed description of gender, facial features, and skin color in Figure 1] wearing [Description of hairstyle, headwear, clothing, and props in Figure 2], smiling in front of the camera, showing an elegant and noble state.",
          "maxLength": 1500,
          "description": "Text prompt for video generation"
        },
        "seed": {
          "type": "integer",
          "title": "Random Seed",
          "x-order": 3,
          "description": "Optional random seed for generation"
        },
        "area": {
          "type": "string",
          "title": "Area",
          "x-order": 5,
          "enum": [
            "auto",
            "denmark",
            "uk",
            "africa",
            "china",
            "mexico",
            "switzerland",
            "russia",
            "italy",
            "korea",
            "thailand",
            "india",
            "japan"
          ],
          "default": "auto",
          "description": "Style control field for exotic_princess template only"
        }
      }
    }
  },
  "videogen_templates/hugging": {
    "name": "videogen_templates/hugging",
    "schema": {
      "type": "object",
      "title": "Input",
      "required": [
        "template",
        "images",
        "prompt"
      ],
      "linkto": {
        "*": "*"
      },
      "map": {
        "images": "images"
      },
      "translatable": [
        "prompt"
      ],
      "speech_enabled": [
        "prompt"
      ],
      "properties": {
        "images": {
          "type": "array",
          "title": "Images",
          "x-order": 1,
          "items": {
            "type": "string",
            "fileType": "image",
            "format": "uri"
          },
          "maxItems": 1,
          "minItems": 1,
          "description": "Image URL or Base64 encoded image (PNG, JPEG, JPG, WebP). Must be at least 128x128px, aspect ratio between 1:4 and 4:1, and under 10MB"
        },
        "prompt": {
          "type": "string",
          "title": "Prompt",
          "x-order": 2,
          "default": "# Video content\\nThe two subjects in the frame turn towards each other and begin to embrace.  \\n# Requirements\\n Set the Motion Level to 'Large'.",
          "maxLength": 1500,
          "description": "Text prompt for video generation"
        },
        "seed": {
          "type": "integer",
          "title": "Random Seed",
          "x-order": 3,
          "description": "Optional random seed for generation"
        }
      }
    }
  },
  "videogen_templates/kissing": {
    "name": "videogen_templates/kissing",
    "schema": {
      "type": "object",
      "title": "Input",
      "required": [
        "template",
        "images",
        "prompt"
      ],
      "linkto": {
        "*": "*"
      },
      "map": {
        "images": "images"
      },
      "translatable": [
        "prompt"
      ],
      "speech_enabled": [
        "prompt"
      ],
      "properties": {
        "images": {
          "type": "array",
          "title": "Images",
          "x-order": 1,
          "items": {
            "type": "string",
            "fileType": "image",
            "format": "uri"
          },
          "maxItems": 1,
          "minItems": 1,
          "description": "Image URL or Base64 encoded image (PNG, JPEG, JPG, WebP). Must be at least 128x128px, aspect ratio between 1:4 and 4:1, and under 10MB"
        },
        "prompt": {
          "type": "string",
          "title": "Prompt",
          "x-order": 2,
          "default": "# Video content\\nThe two subjects in the frame begin to turn towards each other and start to kiss, creating an atmosphere filled with love. \\n# Requirements\\n1. When kissing, the movement of the lips should align with each other. \\n2. Set the value of Motion Level to 'Large'.",
          "maxLength": 1500,
          "description": "Text prompt for video generation"
        },
        "seed": {
          "type": "integer",
          "title": "Random Seed",
          "x-order": 3,
          "description": "Optional random seed for generation"
        }
      }
    }
  },
  "videogen_templates/hulk": {
    "name": "videogen_templates/hulk",
    "schema": {
      "type": "object",
      "title": "Input",
      "required": [
        "template",
        "images",
        "prompt"
      ],
      "linkto": {
        "*": "*"
      },
      "map": {
        "images": "images"
      },
      "translatable": [
        "prompt"
      ],
      "speech_enabled": [
        "prompt"
      ],
      "properties": {
        "images": {
          "type": "array",
          "title": "Images",
          "x-order": 1,
          "items": {
            "type": "string",
            "fileType": "image",
            "format": "uri"
          },
          "maxItems": 1,
          "minItems": 1,
          "description": "Image URL or Base64 encoded image (PNG, JPEG, JPG, WebP). Must be at least 128x128px, aspect ratio between 1:4 and 4:1, and under 10MB"
        },
        "prompt": {
          "type": "string",
          "title": "Prompt",
          "x-order": 2,
          "default": "Video content\\nThe character experiences a radical transformation where their body shatters into numerous fragments. From the dispersing pieces, a strong force emerges, remolding them into a much larger and more powerful form. The muscles enlarge and reshape, creating a huge, towering Red Giant. The remnants of the shredded body vanish into chaos, leaving only this powerful being with bulging muscles and a fierce look, wearing only tattered shorts. Its thunderous roar shakes the ground and debris swirls around, signifying the intense and violent appearance of this new, unstoppable form.",
          "maxLength": 1500,
          "description": "Text prompt for video generation"
        },
        "seed": {
          "type": "integer",
          "title": "Random Seed",
          "x-order": 3,
          "description": "Optional random seed for generation"
        }
      }
    }
  },
  "videogen_templates/cap_walk": {
    "name": "videogen_templates/cap_walk",
    "schema": {
      "type": "object",
      "title": "Input",
      "required": [
        "template",
        "images",
        "prompt"
      ],
      "linkto": {
        "*": "*"
      },
      "map": {
        "images": "images"
      },
      "translatable": [
        "prompt"
      ],
      "speech_enabled": [
        "prompt"
      ],
      "properties": {
        "images": {
          "type": "array",
          "title": "Images",
          "x-order": 1,
          "items": {
            "type": "string",
            "fileType": "image",
            "format": "uri"
          },
          "maxItems": 1,
          "minItems": 1,
          "description": "Image URL or Base64 encoded image (PNG, JPEG, JPG, WebP). Must be at least 128x128px, aspect ratio between 1:4 and 4:1, and under 10MB"
        },
        "prompt": {
          "type": "string",
          "title": "Prompt",
          "x-order": 2,
          "default": "Video content\\nTwo characters holding round shields side by side  walk towards the camera，One of the characters flaps his wings behind him.The background is a war-torn ruin.\\n# Requirements\\n1.Emphasize that everyone has a shield in their hands.\\n2.Accurately describe the appearance of the person based on the picture.",
          "maxLength": 1500,
          "description": "Text prompt for video generation"
        },
        "seed": {
          "type": "integer",
          "title": "Random Seed",
          "x-order": 3,
          "description": "Optional random seed for generation"
        }
      }
    }
  },
  "videogen_templates/hulk_dive": {
    "name": "videogen_templates/hulk_dive",
    "schema": {
      "type": "object",
      "title": "Input",
      "required": [
        "template",
        "images",
        "prompt"
      ],
      "linkto": {
        "*": "*"
      },
      "map": {
        "images": "images"
      },
      "translatable": [
        "prompt"
      ],
      "speech_enabled": [
        "prompt"
      ],
      "properties": {
        "images": {
          "type": "array",
          "title": "Images",
          "x-order": 1,
          "items": {
            "type": "string",
            "fileType": "image",
            "format": "uri"
          },
          "maxItems": 1,
          "minItems": 1,
          "description": "Image URL or Base64 encoded image (PNG, JPEG, JPG, WebP). Must be at least 128x128px, aspect ratio between 1:4 and 4:1, and under 10MB"
        },
        "prompt": {
          "type": "string",
          "title": "Prompt",
          "x-order": 2,
          "default": "Video content\\nThe red Hulk flies through the sky, with the character from Image 1 positioned firmly on his back. Hulk then leaps to the ground. Then cracks appeared in the ground.The character from Image 1 remains steadfastly perched on Hulk's shoulder, maintaining a secure grip around the red Hulk's neck.\\n# Requirements\\n1.Do not use uncertain words, such as 'seem', 'like', 'prepare', etc.\\n2. Emphasize that the character in picture 1 has been firmly seated on the Hulk's back.",
          "maxLength": 1500,
          "description": "Text prompt for video generation"
        },
        "seed": {
          "type": "integer",
          "title": "Random Seed",
          "x-order": 3,
          "description": "Optional random seed for generation"
        }
      }
    }
  },
  "videogen_templates/captain_america": {
    "name": "videogen_templates/captain_america",
    "schema": {
      "type": "object",
      "title": "Input",
      "required": [
        "template",
        "images",
        "prompt"
      ],
      "linkto": {
        "*": "*"
      },
      "map": {
        "images": "images"
      },
      "translatable": [
        "prompt"
      ],
      "speech_enabled": [
        "prompt"
      ],
      "properties": {
        "images": {
          "type": "array",
          "title": "Images",
          "x-order": 1,
          "items": {
            "type": "string",
            "fileType": "image",
            "format": "uri"
          },
          "maxItems": 1,
          "minItems": 1,
          "description": "Image URL or Base64 encoded image (PNG, JPEG, JPG, WebP). Must be at least 128x128px, aspect ratio between 1:4 and 4:1, and under 10MB"
        },
        "prompt": {
          "type": "string",
          "title": "Prompt",
          "x-order": 2,
          "default": "Video content\\nThe figure in picture 1 flies in the sky, then slowly begins to transform his clothes to what he looks like in picture 2, spreads his wings, and then picks up a shield. \\n# Requirements\\n1.Accurately describe the clothing characteristics of the person in the first picture. \\n2. Emphasize the changing process of clothing.\\ n3.No superhero descriptions, just a precise description of the costume. \\n4.The facial features are consistent with Figure 1, and the final clothing features are consistent with Figure 2.",
          "maxLength": 1500,
          "description": "Text prompt for video generation"
        },
        "seed": {
          "type": "integer",
          "title": "Random Seed",
          "x-order": 3,
          "description": "Optional random seed for generation"
        }
      }
    }
  },
  "videogen_templates/dreamy_wedding": {
    "name": "videogen_templates/dreamy_wedding",
    "schema": {
      "type": "object",
      "title": "Input",
      "required": [
        "template",
        "images",
        "prompt"
      ],
      "linkto": {
        "*": "*"
      },
      "map": {
        "images": "images"
      },
      "translatable": [
        "prompt"
      ],
      "speech_enabled": [
        "prompt"
      ],
      "properties": {
        "images": {
          "type": "array",
          "title": "Images",
          "x-order": 1,
          "items": {
            "type": "string",
            "fileType": "image",
            "format": "uri"
          },
          "maxItems": 1,
          "minItems": 1,
          "description": "Image URL or Base64 encoded image (PNG, JPEG, JPG, WebP). Must be at least 128x128px, aspect ratio between 1:4 and 4:1, and under 10MB"
        },
        "prompt": {
          "type": "string",
          "title": "Prompt",
          "x-order": 2,
          "default": "Video content\\n The two characters in the picture are wearing wedding dresses and formal attire, taking photos on the grass.\\ n #Requirements 1. Rigorously judge the number and gender of the subject based on the picture, and accurately describe the facial characteristics of the subject.",
          "maxLength": 1500,
          "description": "Text prompt for video generation"
        },
        "seed": {
          "type": "integer",
          "title": "Random Seed",
          "x-order": 3,
          "description": "Optional random seed for generation"
        }
      }
    }
  },
  "videogen_templates/romantic_lift": {
    "name": "videogen_templates/romantic_lift",
    "schema": {
      "type": "object",
      "title": "Input",
      "required": [
        "template",
        "images",
        "prompt"
      ],
      "linkto": {
        "*": "*"
      },
      "map": {
        "images": "images"
      },
      "translatable": [
        "prompt"
      ],
      "speech_enabled": [
        "prompt"
      ],
      "properties": {
        "images": {
          "type": "array",
          "title": "Images",
          "x-order": 1,
          "items": {
            "type": "string",
            "fileType": "image",
            "format": "uri"
          },
          "maxItems": 1,
          "minItems": 1,
          "description": "Image URL or Base64 encoded image (PNG, JPEG, JPG, WebP). Must be at least 128x128px, aspect ratio between 1:4 and 4:1, and under 10MB"
        },
        "prompt": {
          "type": "string",
          "title": "Prompt",
          "x-order": 2,
          "default": "Video content\\n There are two characters in the picture, and one character uses the action of Princess carry to pick up the character next to it.\\ n #Requirements 1.  Describe the appearance and gender of the character accurately according to the picture. 2. If both characters are male or female, describe the character on the right picking up the character on the left. 3. If both characters are male and female, describe the male character picking up the female character.",
          "enum": {
            "Double (full body)": "Video content\\n There are two characters in the picture, and one character uses the action of Princess carry to pick up the character next to it.\\ n #Requirements 1.  Describe the appearance and gender of the character accurately according to the picture. 2. If both characters are male or female, describe the character on the right picking up the character on the left. 3. If both characters are male and female, describe the male character picking up the female character.",
            "Double (above thigs)": "Video content\\n There are two characters in the picture, one of whom uses the action of Princess carry to pick up the character next to him. Requirements: 1. Accurately describe the appearance and gender of the characters based on the picture. 2. If both characters are male or female, describe the character on the right picking up the character on the left. 3. If both characters are male and female, describe the male character picking up the female character"
          },
          "enum_control": [
            "Double (full body)",
            "Double (above thigs)"
          ],
          "maxLength": 1500,
          "description": "Text prompt for video generation"
        },
        "seed": {
          "type": "integer",
          "title": "Random Seed",
          "x-order": 3,
          "description": "Optional random seed for generation"
        }
      }
    }
  },
  "videogen_templates/sweet_proposal": {
    "name": "videogen_templates/sweet_proposal",
    "schema": {
      "type": "object",
      "title": "Input",
      "required": [
        "template",
        "images",
        "prompt"
      ],
      "linkto": {
        "*": "*"
      },
      "map": {
        "images": "images"
      },
      "translatable": [
        "prompt"
      ],
      "speech_enabled": [
        "prompt"
      ],
      "properties": {
        "images": {
          "type": "array",
          "title": "Images",
          "x-order": 1,
          "items": {
            "type": "string",
            "fileType": "image",
            "format": "uri"
          },
          "maxItems": 1,
          "minItems": 1,
          "description": "Image URL or Base64 encoded image (PNG, JPEG, JPG, WebP). Must be at least 128x128px, aspect ratio between 1:4 and 4:1, and under 10MB"
        },
        "prompt": {
          "type": "string",
          "title": "Prompt",
          "x-order": 2,
          "default": "Video content\\n There are two characters in the picture, and one character uses the action of Princess carry to pick up the character next to it.\\ n #Requirements 1.  Describe the appearance and gender of the character accurately according to the picture. 2. If both characters are male or female, describe the character on the right picking up the character on the left. 3. If both characters are male and female, describe the male character picking up the female character.",
          "enum": {
            "Double (full body)": "Video content\\n There are two characters in the picture. One of them, Character 1, [Precisely describe the appearance and gender, such as: is a young man with short, neatly trimmed brown hair. His eyes are bright and clear, full of tenderness. He has a straight nose and a pair of firm lips. He is dressed in a light-colored suit, looking gentle and elegant. He is male], suddenly takes out a red ring box. With a sincere expression, he kneels down on one knee and proposes to Character 2 beside him. Character 2, [Precisely describe the appearance and gender, such as: is a young woman with long, wavy blonde hair that falls over her shoulders. Her big, bright eyes are filled with surprise and joy. She has a delicate oval face and a sweet smile. She is wearing a beautiful white dress, looking charming and lovely. She is female], shows great happiness. [Describe the surprised expressions and actions, such as: Her eyes widen suddenly, and then a bright smile spreads across her face. Her hands instinctively cover her mouth, and she lets out a soft cry of surprise. Her eyes are brimming with tears of joy, and she sways slightly on the spot, as if she can't believe what is happening].\\ n #Requirements - Strictly determine the number of characters and their genders based on the picture. - If there is a male character in the picture, designate that male character as Character 1. If there are only female characters in the picture, randomly select one of the females and designate her as Character 1.",
            "Double (above thigs)": "Video content\\n There are two characters in the picture. One of them, Character 1, [Precisely describe the appearance and gender, such as: is a young man with short, neatly trimmed brown hair. His eyes are bright and clear, full of tenderness. He has a straight nose and a pair of firm lips. He is dressed in a light-colored suit, looking gentle and elegant. He is male], suddenly takes out a red ring box. With a sincere expression, he kneels down on one knee and proposes to Character 2 beside him. Character 2, [Precisely describe the appearance and gender, such as: is a young woman with long, wavy blonde hair that falls over her shoulders. Her big, bright eyes are filled with surprise and joy. She has a delicate oval face and a sweet smile. She is wearing a beautiful white dress, looking charming and lovely. She is female], shows great happiness. [Describe the surprised expressions and actions, such as: Her eyes widen suddenly, and then a bright smile spreads across her face. Her hands instinctively cover her mouth, and she lets out a soft cry of surprise. Her eyes are brimming with tears of joy, and she sways slightly on the spot, as if she can't believe what is happening].\\ n #Requirements - Strictly determine the number of characters and their genders based on the picture. - If there is a male character in the picture, designate that male character as Character 1. If there are only female characters in the picture, randomly select one of the females and designate her as Character 1."
          },
          "enum_control": [
            "Double (full body)",
            "Double (above thigs)"
          ],
          "maxLength": 1500,
          "description": "Text prompt for video generation"
        },
        "seed": {
          "type": "integer",
          "title": "Random Seed",
          "x-order": 3,
          "description": "Optional random seed for generation"
        }
      }
    }
  },
  "videogen_templates/pet_lovers": {
    "name": "videogen_templates/pet_lovers",
    "schema": {
      "type": "object",
      "title": "Input",
      "required": [
        "template",
        "images",
        "prompt"
      ],
      "linkto": {
        "*": "*"
      },
      "map": {
        "images": "images"
      },
      "translatable": [
        "prompt"
      ],
      "speech_enabled": [
        "prompt"
      ],
      "properties": {
        "images": {
          "type": "array",
          "title": "Images",
          "x-order": 1,
          "items": {
            "type": "string",
            "fileType": "image",
            "format": "uri"
          },
          "maxItems": 1,
          "minItems": 1,
          "description": "Image URL or Base64 encoded image (PNG, JPEG, JPG, WebP). Must be at least 128x128px, aspect ratio between 1:4 and 4:1, and under 10MB"
        },
        "prompt": {
          "type": "string",
          "title": "Prompt",
          "x-order": 2,
          "default": "Video content\\n Two adorable pets stand on their hind legs, assuming a form similar to human legs. Their front limbs have a structure resembling human arms, and they are dressed in matching couple outfits. Facing the camera, they interact closely with each other. For example, their front limbs gently embrace or lean against each other, creating an overall anthropomorphic and intimate atmosphere.",
          "maxLength": 1500,
          "description": "Text prompt for video generation"
        },
        "seed": {
          "type": "integer",
          "title": "Random Seed",
          "x-order": 3,
          "description": "Optional random seed for generation"
        }
      }
    }
  },
  "videogen_templates/hug": {
    "name": "videogen_templates/hug",
    "schema": {
      "type": "object",
      "title": "Input",
      "required": [
        "template",
        "images",
        "prompt"
      ],
      "linkto": {
        "*": "*"
      },
      "map": {
        "images": "images"
      },
      "translatable": [
        "prompt"
      ],
      "speech_enabled": [
        "prompt"
      ],
      "properties": {
        "images": {
          "type": "array",
          "title": "Images",
          "x-order": 1,
          "items": {
            "type": "string",
            "fileType": "image",
            "format": "uri"
          },
          "maxItems": 1,
          "minItems": 1,
          "description": "Image URL or Base64 encoded image (PNG, JPEG, JPG, WebP). Must be at least 128x128px, aspect ratio between 1:4 and 4:1, and under 10MB"
        },
        "prompt": {
          "type": "string",
          "title": "Prompt",
          "x-order": 2,
          "default": "Hug.",
          "enum": {
            "Couple photo": "Hug.",
            "Single girl photo": "This person hugged a (handsome man)",
            "Single boy photo": "This person hugged a (handsome man)"
          },
          "enum_control": [
            "Couple photo",
            "Single girl photo",
            "Single boy photo"
          ],
          "maxLength": 1500,
          "description": "Text prompt for video generation. For single photo of man or woman, use the second or third prompt."
        },
        "seed": {
          "type": "integer",
          "title": "Random Seed",
          "x-order": 3,
          "description": "Optional random seed for generation"
        }
      }
    }
  },
  "videogen_templates/kiss": {
    "name": "videogen_templates/kiss",
    "schema": {
      "type": "object",
      "title": "Input",
      "required": [
        "template",
        "images",
        "prompt"
      ],
      "linkto": {
        "*": "*"
      },
      "map": {
        "images": "images"
      },
      "translatable": [
        "prompt"
      ],
      "speech_enabled": [
        "prompt"
      ],
      "properties": {
        "images": {
          "type": "array",
          "title": "Images",
          "x-order": 1,
          "items": {
            "type": "string",
            "fileType": "image",
            "format": "uri"
          },
          "maxItems": 1,
          "minItems": 1,
          "description": "Image URL or Base64 encoded image (PNG, JPEG, JPG, WebP). Must be at least 128x128px, aspect ratio between 1:4 and 4:1, and under 10MB"
        },
        "prompt": {
          "type": "string",
          "title": "Prompt",
          "x-order": 2,
          "default": "Kiss.",
          "enum": {
            "Couple photo": "Kiss.",
            "Single girl photo": "This person kissed a (handsome man)",
            "Single boy photo": "This person kissed a (beautiful woman)"
          },
          "enum_control": [
            "Couple photo",
            "Single girl photo",
            "Single boy photo"
          ],
          "maxLength": 1500,
          "description": "Text prompt for video generation. For single photo of man or woman, use the second or third prompt."
        },
        "seed": {
          "type": "integer",
          "title": "Random Seed",
          "x-order": 3,
          "description": "Optional random seed for generation"
        }
      }
    }
  },
  "videogen_templates/cheek_kiss": {
    "name": "videogen_templates/cheek_kiss",
    "schema": {
      "type": "object",
      "title": "Input",
      "required": [
        "template",
        "images",
        "prompt"
      ],
      "linkto": {
        "*": "*"
      },
      "map": {
        "images": "images"
      },
      "translatable": [
        "prompt"
      ],
      "speech_enabled": [
        "prompt"
      ],
      "properties": {
        "images": {
          "type": "array",
          "title": "Images",
          "x-order": 1,
          "items": {
            "type": "string",
            "fileType": "image",
            "format": "uri"
          },
          "maxItems": 1,
          "minItems": 1,
          "description": "Image URL or Base64 encoded image (PNG, JPEG, JPG, WebP). Must be at least 128x128px, aspect ratio between 1:4 and 4:1, and under 10MB"
        },
        "prompt": {
          "type": "string",
          "title": "Prompt",
          "x-order": 2,
          "default": "In [scene/background], [character 1], [character 2] (and [character 3], if present) are [standing/sitting] together, with a [warm/relaxed/shy] mood. \\n- Two characters: Left kisses right on the cheek; right faces the camera, blushing with a shy smile. \\n- Three characters: Left and right kiss the middle on both cheeks; middle faces forward, blushing, nervously smiling. \\nRequirements:\\1.Replace all [ ] with actual details based on the image.\\n2. Motion Level：Large",
          "maxLength": 1500,
          "description": "Text prompt for video generation"
        },
        "seed": {
          "type": "integer",
          "title": "Random Seed",
          "x-order": 3,
          "description": "Optional random seed for generation"
        }
      }
    }
  },
  "videogen_templates/punch_hit": {
    "name": "videogen_templates/punch_hit",
    "schema": {
      "type": "object",
      "title": "Input",
      "required": [
        "template",
        "images",
        "prompt"
      ],
      "linkto": {
        "*": "*"
      },
      "map": {
        "images": "images"
      },
      "translatable": [
        "prompt"
      ],
      "speech_enabled": [
        "prompt"
      ],
      "properties": {
        "images": {
          "type": "array",
          "title": "Images",
          "x-order": 1,
          "items": {
            "type": "string",
            "fileType": "image",
            "format": "uri"
          },
          "maxItems": 1,
          "minItems": 1,
          "description": "Image URL or Base64 encoded image (PNG, JPEG, JPG, WebP). Must be at least 128x128px, aspect ratio between 1:4 and 4:1, and under 10MB"
        },
        "prompt": {
          "type": "string",
          "title": "Prompt",
          "x-order": 2,
          "default": "A clenched fist suddenly swings in from off-screen on the left and slams into [person/pet]’s face, distorting their features — lips pushed aside and skin visibly rippling from the impact.\\nRequirements: \\n1. Replace [person/pet] with the actual subject shown in the image. \\n2. If there are two or more people or pets in the image, all of them must be struck by the fist, and the reaction of each one must be described individually.",
          "maxLength": 1500,
          "description": "Text prompt for video generation"
        },
        "seed": {
          "type": "integer",
          "title": "Random Seed",
          "x-order": 3,
          "description": "Optional random seed for generation"
        }
      }
    }
  },
  "videogen_templates/dynasty_dress": {
    "name": "videogen_templates/dynasty_dress",
    "schema": {
      "type": "object",
      "title": "Input",
      "required": [
        "template",
        "images",
        "prompt"
      ],
      "linkto": {
        "*": "*"
      },
      "map": {
        "images": "images"
      },
      "translatable": [
        "prompt"
      ],
      "speech_enabled": [
        "prompt"
      ],
      "properties": {
        "images": {
          "type": "array",
          "title": "Images",
          "x-order": 1,
          "items": {
            "type": "string",
            "fileType": "image",
            "format": "uri"
          },
          "maxItems": 1,
          "minItems": 1,
          "description": "Image URL or Base64 encoded image (PNG, JPEG, JPG, WebP). Must be at least 128x128px, aspect ratio between 1:4 and 4:1, and under 10MB"
        },
        "prompt": {
          "type": "string",
          "title": "Prompt",
          "x-order": 2,
          "default": "Video content\\n A character, wearing a costume and shoes, faces the camera and strikes a pose. Then, the character blinks their eyes and gives a sweet smile. \\ n #Requirements\\ 1.Describe the facial details of the character in detail, and try to describe all kinds of details of the clothing and accessories as accurately and comprehensively as possible. 2. If the picture shows [clothing, handbag, accessories, hat, shoes], they need to be included in the description of the character's clothing. 3. If the picture shows a background image, set it as the background and describe it in detail. 4. There is only one character! Do not use any plural pronouns. 5. The Shot Size is: Wide Shot. 6. The character should not have any hand or waist movements. Emphasize a natural smile.",
          "maxLength": 1500,
          "description": "Text prompt for video generation"
        },
        "seed": {
          "type": "integer",
          "title": "Random Seed",
          "x-order": 3,
          "description": "Optional random seed for generation"
        }
      }
    }
  },
  "videogen_templates/love_pose": {
    "name": "videogen_templates/love_pose",
    "schema": {
      "type": "object",
      "title": "Input",
      "required": [
        "template",
        "images",
        "prompt"
      ],
      "linkto": {
        "*": "*"
      },
      "map": {
        "images": "images"
      },
      "translatable": [
        "prompt"
      ],
      "speech_enabled": [
        "prompt"
      ],
      "properties": {
        "images": {
          "type": "array",
          "title": "Images",
          "x-order": 1,
          "items": {
            "type": "string",
            "fileType": "image",
            "format": "uri"
          },
          "maxItems": 1,
          "minItems": 1,
          "description": "Image URL or Base64 encoded image (PNG, JPEG, JPG, WebP). Must be at least 128x128px, aspect ratio between 1:4 and 4:1, and under 10MB"
        },
        "prompt": {
          "type": "string",
          "title": "Prompt",
          "x-order": 2,
          "default": "Video content\\n  The character in the painting faces the camera, raises both hands in front of the chest, and makes a heart gesture.  \\ n #Requirements\\  If there are multiple characters in the picture, each character will face the camera, raise both hands in front of their chests, and make a heart gesture.",
          "maxLength": 1500,
          "description": "Text prompt for video generation"
        },
        "seed": {
          "type": "integer",
          "title": "Random Seed",
          "x-order": 3,
          "description": "Optional random seed for generation"
        }
      }
    }
  },
  "videogen_templates/morphlab": {
    "name": "videogen_templates/morphlab",
    "schema": {
      "type": "object",
      "title": "Input",
      "required": [
        "template",
        "images",
        "prompt"
      ],
      "linkto": {
        "*": "*"
      },
      "map": {
        "images": "images"
      },
      "translatable": [
        "prompt"
      ],
      "speech_enabled": [
        "prompt"
      ],
      "properties": {
        "images": {
          "type": "array",
          "title": "Images",
          "x-order": 1,
          "items": {
            "type": "string",
            "fileType": "image",
            "format": "uri"
          },
          "maxItems": 1,
          "minItems": 1,
          "description": "Image URL or Base64 encoded image (PNG, JPEG, JPG, WebP). Must be at least 128x128px, aspect ratio between 1:4 and 4:1, and under 10MB"
        },
        "prompt": {
          "type": "string",
          "title": "Prompt",
          "x-order": 2,
          "default": "Video content\\nThe subject in the picture begins to expand and deform, becoming larger and rounder, like a balloon, slowly floating up\\n# Requirements\\n1. Determine the number of subjects based on the pictures uploaded by the user, and each subject must expand\\n2. Set Motion Level to: Middle\\n3. Take my video content as the first factor, and describe the background in a unified and reasonable way, and do not describe it twice.",
          "enum": {
            "Expansion": "Video content\\nThe subject in the picture begins to expand and deform, becoming larger and rounder, like a balloon, slowly floating up\\n# Requirements\\n1. Determine the number of subjects based on the pictures uploaded by the user, and each subject must expand\\n2. Set Motion Level to: Middle\\n3. Take my video content as the first factor, and describe the background in a unified and reasonable way, and do not describe it twice.",
            "Pinch": "Video content\\nAt the beginning of the video, the subject is still. Then, a pair of big hands appear, grabbing and squeezing the subject like plasticine. \\nAs the subject gradually shrinks, it is clamped between fingers and becomes soft and deformed\\n# Requirements\\n1. Determine the number of subjects based on the pictures uploaded by the user, and each subject must be squashed\\n2. Set Motion Level to: Middle\\n3. Take the content of my video as the first factor, and describe the background in a unified and reasonable way, and do not describe it twice.",
            "Explosion": "Video content\\nAt the beginning of the screen, the subject suddenly explodes, and small particles explode\\n# Requirements\\n1. Determine the number of subjects based on the pictures uploaded by the user, and each subject must explode\\n2. Set the Motion Level to: Middle\\n3. Take my video content as the first factor, and the description of the background should be unified and reasonable, and do not describe it twice.",
            "Melt": "Video content\\nThe subject in the picture slowly begins to melt, and eventually forms a puddle with a smooth surface\\n# Requirements\\n1. Determine the number of subjects based on the pictures uploaded by the user, and each subject must melt\\n2. Set Motion Level to: Middle\\n3. Take my video content as the first factor, and the description of the background should be unified and reasonable, and do not describe it twice."
          },
          "enum_control": [
            "Expansion",
            "Pinch",
            "Explosion",
            "Melt"
          ],
          "maxLength": 1500,
          "description": "Text prompt for video generation"
        },
        "seed": {
          "type": "integer",
          "title": "Random Seed",
          "x-order": 3,
          "description": "Optional random seed for generation"
        }
      }
    }
  },
  "videogen_templates/live_memory": {
    "name": "videogen_templates/live_memory",
    "schema": {
      "type": "object",
      "title": "Input",
      "required": [
        "template",
        "images",
        "prompt"
      ],
      "linkto": {
        "*": "*"
      },
      "map": {
        "images": "images"
      },
      "translatable": [
        "prompt"
      ],
      "speech_enabled": [
        "prompt"
      ],
      "properties": {
        "images": {
          "type": "array",
          "title": "Images",
          "x-order": 1,
          "items": {
            "type": "string",
            "fileType": "image",
            "format": "uri"
          },
          "maxItems": 1,
          "minItems": 1,
          "description": "Image URL or Base64 encoded image (PNG, JPEG, JPG, WebP). Must be at least 128x128px, aspect ratio between 1:4 and 4:1, and under 10MB"
        },
        "prompt": {
          "type": "string",
          "title": "Prompt",
          "x-order": 2,
          "default": "Video content\\ nThe characters in the video interact briefly and smile at the screen\\ n #Requirements\\ n1. Strictly judge how many characters there are based on the pictures, and accurately and briefly describe their appearance\\ n2. Motion Level: Small.",
          "maxLength": 1500,
          "description": "Text prompt for video generation"
        },
        "seed": {
          "type": "integer",
          "title": "Random Seed",
          "x-order": 3,
          "description": "Optional random seed for generation"
        }
      }
    }
  },
  "videogen_templates/christmas": {
    "name": "videogen_templates/christmas",
    "schema": {
      "type": "object",
      "title": "Input",
      "required": [
        "template",
        "images",
        "prompt"
      ],
      "linkto": {
        "*": "*"
      },
      "map": {
        "images": "images"
      },
      "translatable": [
        "prompt"
      ],
      "speech_enabled": [
        "prompt"
      ],
      "properties": {
        "images": {
          "type": "array",
          "title": "Images",
          "x-order": 1,
          "items": {
            "type": "string",
            "fileType": "image",
            "format": "uri"
          },
          "maxItems": 1,
          "minItems": 1,
          "description": "Image URL or Base64 encoded image (PNG, JPEG, JPG, WebP). Must be at least 128x128px, aspect ratio between 1:4 and 4:1, and under 10MB"
        },
        "prompt": {
          "type": "string",
          "title": "Prompt",
          "x-order": 2,
          "default": "Video content\\nThe character in the picture gently lifts up a bright red cloth from the bottom front, and covers it from head to body in a neat and tidy motion. Then, as the character quickly pulls the red cloth down, the character becomes a festive Santa Claus. \\n# Requirements\\n1. Style is set to: Realistic, HD\\n2. Determine the number of characters based on the user's uploaded picture. Do not use pronouns such as [a group of people] or [them] but accurately indicate the number of characters\\n3. If there are multiple characters in the user's uploaded picture, they need to lift up the red cloth together and all of them will become Santa Claus. Do not include characters that are not in the picture.",
          "enum": {
            "Transform into Santa Claus": "Video content\\nThe character in the picture gently lifts up a bright red cloth from the bottom front, and covers it from head to body in a neat and tidy motion. Then, as the character quickly pulls the red cloth down, the character becomes a festive Santa Claus.",
            "Santa Claus delivering gifts": "Video content\\nThe person in the camera looks to the right, and then a Santa Claus walks into the picture from the right with a big smile on his face, holding an exquisite gift box in his hand. He gently hands the gift to the person in the picture, his movements are natural and full of warmth. The camera focuses on the person who receives the gift, and his expression is full of surprise and gratitude. The picture captures the micro-expressions and interactive details of the characters. \\n# Requirements\\n1. Style is set to: Realistic, HD\\n2. Determine the number of characters based on the pictures uploaded by the user. Do not use pronouns such as [a group of people] or [them], but accurately indicate the number of characters\\n3. If there are multiple characters in the picture uploaded by the user, they need to hold up the red cloth together, and everyone will turn into Santa Claus. Do not include characters that are not in the picture.",
            "Christmas toast celebration": "Video content\\nThe characters in the video hold champagne glasses and celebrate Christmas. As the camera zooms out, Christmas trees and other Christmas items appear in the picture\\n# Requirements\\n1.Take a step-by-step approach in your response\\n2.Use my video description as the first element. The description of the background should be unified and reasonable. Do not describe it twice.\\n3.Determine the number of characters based on the pictures uploaded by users. Do not use pronouns such as [a group of people] or [them] but accurately indicate the number of characters\\n4.Motion Level is set to: Middle\\n5.If there are multiple characters in the picture uploaded by the user, each person needs to hold a champagne glass. Do not include characters that are not in the picture.",
            "Santa Claus offering a hug": "Video content\nThe character in the camera looks out of the screen, and then a Santa Claus walks in from outside the screen with a big smile on his face, and then hugs the character. The action is natural and full of warmth. The camera focuses on a warm hug, and the picture captures the character's micro-expressions and interactive details\n# Requirements\n1. Design the action reasonably according to the position and state of the character, rather than abruptly hugging directly. First describe the character's transition to a suitable hugging posture\n2.Take a step-by-step approach in your response\n3. Determine the number of characters based on the pictures uploaded by the user. Do not use pronouns such as [a group of people] or [them], but accurately indicate the number of characters\n4. If there are multiple characters in the picture, they need to hug Santa Claus together. Do not include characters that are not in the picture\n5. Emphasize that there is only one Santa Claus."
          },
          "enum_control": [
            "Transform into Santa Claus",
            "Santa Claus delivering gifts",
            "Christmas toast celebration",
            "Santa Claus offering a hug"
          ],
          "maxLength": 1500,
          "description": "Text prompt for video generation. First prompt is for transforming into Santa Claus. Second prompt is for Santa Claus delivering gifts. Third prompt is for christmas toast celebration. Last is for Santa Claus offering a hug."
        },
        "seed": {
          "type": "integer",
          "title": "Random Seed",
          "x-order": 3,
          "description": "Optional random seed for generation"
        }
      }
    }
  },
  "videogen_templates/shake_it_dance": {
    "name": "videogen_templates/shake_it_dance",
    "schema": {
      "type": "object",
      "title": "Input",
      "required": [
        "template",
        "images",
        "prompt"
      ],
      "linkto": {
        "*": "*"
      },
      "map": {
        "images": "images"
      },
      "translatable": [
        "prompt"
      ],
      "speech_enabled": [
        "prompt"
      ],
      "properties": {
        "images": {
          "type": "array",
          "title": "Images",
          "x-order": 1,
          "items": {
            "type": "string",
            "fileType": "image",
            "format": "uri"
          },
          "maxItems": 1,
          "minItems": 1,
          "description": "Image URL or Base64 encoded image (PNG, JPEG, JPG, WebP). Must be at least 128x128px, aspect ratio between 1:4 and 4:1, and under 10MB"
        },
        "prompt": {
          "type": "string",
          "title": "Prompt",
          "x-order": 2,
          "default": "In 【scene/background】, the image shows 【number and types of subjects】 — 【subject 1 description】, 【subject 2 description】 (if present), … .They are 【current action, e.g., standing, sitting, looking upward】.Next, each subject begins to perform a twerking dance: both hands lift and rest behind the head, fingers interlaced or lightly touching the neck, while the hips sway powerfully and expressively from side to side to the rhythm.\\nRequirements\\n1.Replace every 【 】 placeholder with the specific content from the image.\\n2. If the image contains two or more subjects, all subjects must perform the twerking dance with the key points described above",
          "maxLength": 1500,
          "description": "Text prompt for video generation"
        },
        "seed": {
          "type": "integer",
          "title": "Random Seed",
          "x-order": 3,
          "description": "Optional random seed for generation"
        }
      }
    }
  },
  "videogen_templates/squid_game": {
    "name": "videogen_templates/squid_game",
    "schema": {
      "type": "object",
      "title": "Input",
      "required": [
        "image_url"
      ],
      "linkto": {
        "*": "*"
      },
      "map": {
        "image_url": "images"
      },
      "translatable": [
        "negative_prompt"
      ],
      "speech_enabled": [
        "negative_prompt"
      ],
      "properties": {
        "effect": {
          "type": "string",
          "title": "Effect",
          "x-order": 1,
          "enum": [
            "Kiss Me AI",
            "Kiss",
            "Muscle Surge",
            "Warmth of Jesus",
            "Anything",
            "Robot",
            "The Tiger Touch",
            "Hug",
            "Holy Wings",
            "Hulk",
            "Venom",
            "Microwave",
            "Zombie Mode",
            "Squid Game",
            "Baby Face",
            "Black Myth: Wukong",
            "Long Hair Magic",
            "Leggy Run",
            "Fin-tastic Mermaid",
            "Punch Face",
            "Creepy Devil Smile",
            "Thunder God",
            "Eye Zoom Challenge",
            "Who's Arrested?",
            "Baby Arrived",
            "Werewolf Rage",
            "Bald Swipe",
            "BOOM DROP",
            "Huge Cutie",
            "Liquid Metal",
            "Sharksnap!",
            "Dust Me Away"
          ],
          "default": "Squid Game",
          "value_action": "pass",
          "display": "hidden",
          "description": "The effect to apply to the video"
        },
        "image_url": {
          "type": "string",
          "title": "Image URL",
          "x-order": 2,
          "format": "uri",
          "fileType": "image",
          "description": "Optional URL of the image to use as the first frame. If not provided, generates from text"
        },
        "resolution": {
          "type": "string",
          "title": "Resolution",
          "x-order": 3,
          "enum": [
            "360p",
            "540p",
            "720p",
            "1080p"
          ],
          "default": "720p",
          "description": "The resolution of the generated video"
        },
        "duration": {
          "type": "string",
          "title": "Duration",
          "x-order": 4,
          "enum": [
            "5",
            "8"
          ],
          "default": "5",
          "display": "hidden",
          "description": "The duration of the generated video in seconds"
        },
        "negative_prompt": {
          "type": "string",
          "title": "Negative Prompt",
          "x-order": 5,
          "default": "",
          "maxLength": 1500,
          "description": "Negative prompt to be used for the generation"
        }
      }
    }
  },
  "videogen_templates/zombie_mode": {
    "name": "videogen_templates/zombie_mode",
    "schema": {
      "type": "object",
      "title": "Input",
      "required": [
        "image_url"
      ],
      "linkto": {
        "*": "*"
      },
      "map": {
        "image_url": "images"
      },
      "translatable": [
        "negative_prompt"
      ],
      "speech_enabled": [
        "negative_prompt"
      ],
      "properties": {
        "effect": {
          "type": "string",
          "title": "Effect",
          "x-order": 1,
          "enum": [
            "Kiss Me AI",
            "Kiss",
            "Muscle Surge",
            "Warmth of Jesus",
            "Anything",
            "Robot",
            "The Tiger Touch",
            "Hug",
            "Holy Wings",
            "Hulk",
            "Venom",
            "Microwave",
            "Zombie Mode",
            "Squid Game",
            "Baby Face",
            "Black Myth: Wukong",
            "Long Hair Magic",
            "Leggy Run",
            "Fin-tastic Mermaid",
            "Punch Face",
            "Creepy Devil Smile",
            "Thunder God",
            "Eye Zoom Challenge",
            "Who's Arrested?",
            "Baby Arrived",
            "Werewolf Rage",
            "Bald Swipe",
            "BOOM DROP",
            "Huge Cutie",
            "Liquid Metal",
            "Sharksnap!",
            "Dust Me Away"
          ],
          "default": "Zombie Mode",
          "value_action": "pass",
          "display": "hidden",
          "description": "The effect to apply to the video"
        },
        "image_url": {
          "type": "string",
          "title": "Image URL",
          "x-order": 2,
          "format": "uri",
          "fileType": "image",
          "description": "Optional URL of the image to use as the first frame. If not provided, generates from text"
        },
        "resolution": {
          "type": "string",
          "title": "Resolution",
          "x-order": 3,
          "enum": [
            "360p",
            "540p",
            "720p",
            "1080p"
          ],
          "default": "720p",
          "description": "The resolution of the generated video"
        },
        "duration": {
          "type": "string",
          "title": "Duration",
          "x-order": 4,
          "enum": [
            "5",
            "8"
          ],
          "default": "5",
          "display": "hidden",
          "description": "The duration of the generated video in seconds"
        },
        "negative_prompt": {
          "type": "string",
          "title": "Negative Prompt",
          "x-order": 5,
          "default": "",
          "maxLength": 1500,
          "description": "Negative prompt to be used for the generation"
        }
      }
    }
  },
  "videogen_templates/eye_zoom_challenge": {
    "name": "videogen_templates/eye_zoom_challenge",
    "schema": {
      "type": "object",
      "title": "Input",
      "required": [
        "image_url"
      ],
      "linkto": {
        "*": "*"
      },
      "map": {
        "image_url": "images"
      },
      "translatable": [
        "negative_prompt"
      ],
      "speech_enabled": [
        "negative_prompt"
      ],
      "properties": {
        "effect": {
          "type": "string",
          "title": "Effect",
          "x-order": 1,
          "enum": [
            "Kiss Me AI",
            "Kiss",
            "Muscle Surge",
            "Warmth of Jesus",
            "Anything",
            "Robot",
            "The Tiger Touch",
            "Hug",
            "Holy Wings",
            "Hulk",
            "Venom",
            "Microwave",
            "Zombie Mode",
            "Squid Game",
            "Baby Face",
            "Black Myth: Wukong",
            "Long Hair Magic",
            "Leggy Run",
            "Fin-tastic Mermaid",
            "Punch Face",
            "Creepy Devil Smile",
            "Thunder God",
            "Eye Zoom Challenge",
            "Who's Arrested?",
            "Baby Arrived",
            "Werewolf Rage",
            "Bald Swipe",
            "BOOM DROP",
            "Huge Cutie",
            "Liquid Metal",
            "Sharksnap!",
            "Dust Me Away"
          ],
          "default": "Eye Zoom Challenge",
          "value_action": "pass",
          "display": "hidden",
          "description": "The effect to apply to the video"
        },
        "image_url": {
          "type": "string",
          "title": "Image URL",
          "x-order": 2,
          "format": "uri",
          "fileType": "image",
          "description": "Optional URL of the image to use as the first frame. If not provided, generates from text"
        },
        "resolution": {
          "type": "string",
          "title": "Resolution",
          "x-order": 3,
          "enum": [
            "360p",
            "540p",
            "720p",
            "1080p"
          ],
          "default": "720p",
          "description": "The resolution of the generated video"
        },
        "duration": {
          "type": "string",
          "title": "Duration",
          "x-order": 4,
          "enum": [
            "5",
            "8"
          ],
          "default": "5",
          "display": "hidden",
          "description": "The duration of the generated video in seconds"
        },
        "negative_prompt": {
          "type": "string",
          "title": "Negative Prompt",
          "x-order": 5,
          "default": "",
          "maxLength": 1500,
          "description": "Negative prompt to be used for the generation"
        }
      }
    }
  },
  "videogen_templates/muscle_surge": {
    "name": "videogen_templates/muscle_surge",
    "schema": {
      "type": "object",
      "title": "Input",
      "required": [
        "image_url"
      ],
      "linkto": {
        "*": "*"
      },
      "map": {
        "image_url": "images"
      },
      "translatable": [
        "negative_prompt"
      ],
      "speech_enabled": [
        "negative_prompt"
      ],
      "properties": {
        "effect": {
          "type": "string",
          "title": "Effect",
          "x-order": 1,
          "enum": [
            "Kiss Me AI",
            "Kiss",
            "Muscle Surge",
            "Warmth of Jesus",
            "Anything",
            "Robot",
            "The Tiger Touch",
            "Hug",
            "Holy Wings",
            "Hulk",
            "Venom",
            "Microwave",
            "Zombie Mode",
            "Squid Game",
            "Baby Face",
            "Black Myth: Wukong",
            "Long Hair Magic",
            "Leggy Run",
            "Fin-tastic Mermaid",
            "Punch Face",
            "Creepy Devil Smile",
            "Thunder God",
            "Eye Zoom Challenge",
            "Who's Arrested?",
            "Baby Arrived",
            "Werewolf Rage",
            "Bald Swipe",
            "BOOM DROP",
            "Huge Cutie",
            "Liquid Metal",
            "Sharksnap!",
            "Dust Me Away"
          ],
          "default": "Muscle Surge",
          "value_action": "pass",
          "display": "hidden",
          "description": "The effect to apply to the video"
        },
        "image_url": {
          "type": "string",
          "title": "Image URL",
          "x-order": 2,
          "format": "uri",
          "fileType": "image",
          "description": "Optional URL of the image to use as the first frame. If not provided, generates from text"
        },
        "resolution": {
          "type": "string",
          "title": "Resolution",
          "x-order": 3,
          "enum": [
            "360p",
            "540p",
            "720p",
            "1080p"
          ],
          "default": "720p",
          "description": "The resolution of the generated video"
        },
        "duration": {
          "type": "string",
          "title": "Duration",
          "x-order": 4,
          "enum": [
            "5",
            "8"
          ],
          "default": "5",
          "display": "hidden",
          "description": "The duration of the generated video in seconds"
        },
        "negative_prompt": {
          "type": "string",
          "title": "Negative Prompt",
          "x-order": 5,
          "default": "",
          "maxLength": 1500,
          "description": "Negative prompt to be used for the generation"
        }
      }
    }
  },
  "videogen_templates/punch_face": {
    "name": "videogen_templates/punch_face",
    "schema": {
      "type": "object",
      "title": "Input",
      "required": [
        "image_url"
      ],
      "linkto": {
        "*": "*"
      },
      "map": {
        "image_url": "images"
      },
      "translatable": [
        "negative_prompt"
      ],
      "speech_enabled": [
        "negative_prompt"
      ],
      "properties": {
        "effect": {
          "type": "string",
          "title": "Effect",
          "x-order": 1,
          "enum": [
            "Kiss Me AI",
            "Kiss",
            "Muscle Surge",
            "Warmth of Jesus",
            "Anything",
            "Robot",
            "The Tiger Touch",
            "Hug",
            "Holy Wings",
            "Hulk",
            "Venom",
            "Microwave",
            "Zombie Mode",
            "Squid Game",
            "Baby Face",
            "Black Myth: Wukong",
            "Long Hair Magic",
            "Leggy Run",
            "Fin-tastic Mermaid",
            "Punch Face",
            "Creepy Devil Smile",
            "Thunder God",
            "Eye Zoom Challenge",
            "Who's Arrested?",
            "Baby Arrived",
            "Werewolf Rage",
            "Bald Swipe",
            "BOOM DROP",
            "Huge Cutie",
            "Liquid Metal",
            "Sharksnap!",
            "Dust Me Away"
          ],
          "default": "Punch Face",
          "value_action": "pass",
          "display": "hidden",
          "description": "The effect to apply to the video"
        },
        "image_url": {
          "type": "string",
          "title": "Image URL",
          "x-order": 2,
          "format": "uri",
          "fileType": "image",
          "description": "Optional URL of the image to use as the first frame. If not provided, generates from text"
        },
        "resolution": {
          "type": "string",
          "title": "Resolution",
          "x-order": 3,
          "enum": [
            "360p",
            "540p",
            "720p",
            "1080p"
          ],
          "default": "720p",
          "description": "The resolution of the generated video"
        },
        "duration": {
          "type": "string",
          "title": "Duration",
          "x-order": 4,
          "enum": [
            "5",
            "8"
          ],
          "default": "5",
          "display": "hidden",
          "description": "The duration of the generated video in seconds"
        },
        "negative_prompt": {
          "type": "string",
          "title": "Negative Prompt",
          "x-order": 5,
          "default": "",
          "maxLength": 1500,
          "description": "Negative prompt to be used for the generation"
        }
      }
    }
  },
  "videogen_templates/cakeify": {
    "name": "videogen_templates/cakeify",
    "schema": {
      "type": "object",
      "title": "Input",
      "required": [
        "subject",
        "image_url"
      ],
      "linkto": {
        "*": "*"
      },
      "map": {
        "image_url": "image"
      },
      "translatable": [
        "subject"
      ],
      "speech_enabled": [
        "subject"
      ],
      "properties": {
        "subject": {
          "type": "string",
          "title": "Subject",
          "x-order": 1,
          "description": "The subject to insert into the predefined prompt template for the selected effect."
        },
        "image_url": {
          "type": "string",
          "title": "Image URL",
          "x-order": 2,
          "format": "uri",
          "fileType": "image",
          "description": "URL of the input image."
        },
        "effect_type": {
          "type": "string",
          "title": "Effect Type",
          "x-order": 3,
          "enum": [
            "squish",
            "muscle",
            "inflate",
            "crush",
            "rotate",
            "gun-shooting",
            "deflate",
            "cakeify",
            "hulk",
            "baby",
            "bride",
            "classy",
            "puppy",
            "snow-white",
            "disney-princess",
            "mona-lisa",
            "painting",
            "pirate-captain",
            "princess",
            "jungle",
            "samurai",
            "vip",
            "warrior",
            "zen",
            "assassin",
            "timelapse",
            "tsunami",
            "fire",
            "zoom-call",
            "doom-fps",
            "fus-ro-dah",
            "hug-jesus",
            "robot-face-reveal",
            "super-saiyan",
            "jumpscare",
            "laughing",
            "cartoon-jaw-drop",
            "crying",
            "kissing",
            "angry-face",
            "selfie-younger-self",
            "animeify",
            "blast"
          ],
          "default": "cakeify",
          "display": "hidden",
          "description": "The type of effect to apply to the video."
        },
        "num_frames": {
          "type": "integer",
          "title": "Number of Frames",
          "x-order": 4,
          "default": 81,
          "display": "hidden",
          "description": "Number of frames to generate."
        },
        "frames_per_second": {
          "type": "integer",
          "title": "Frames Per Second",
          "x-order": 5,
          "default": 16,
          "display": "hidden",
          "description": "Frames per second of the generated video."
        },
        "seed": {
          "type": "integer",
          "title": "Seed",
          "x-order": 6,
          "description": "Random seed for reproducibility. If None, a random seed is chosen."
        },
        "aspect_ratio": {
          "type": "string",
          "title": "Aspect Ratio",
          "x-order": 7,
          "enum": [
            "16:9",
            "9:16",
            "1:1"
          ],
          "default": "16:9",
          "description": "Aspect ratio of the output video."
        },
        "num_inference_steps": {
          "type": "integer",
          "title": "Number of Inference Steps",
          "x-order": 8,
          "default": 30,
          "display": "hidden",
          "description": "Number of inference steps for sampling. Higher values give better quality but take longer."
        },
        "lora_scale": {
          "type": "number",
          "title": "LoRA Scale",
          "x-order": 9,
          "default": 1,
          "display": "hidden",
          "description": "The scale of the LoRA weight. Used to adjust effect intensity."
        },
        "turbo_mode": {
          "type": "boolean",
          "title": "Turbo Mode",
          "x-order": 10,
          "default": false,
          "display": "hidden",
          "description": "Whether to use turbo mode. If True, the video will be generated faster but with lower quality."
        }
      }
    }
  },
  "videogen_templates/kiss_me_ai": {
    "name": "videogen_templates/kiss_me_ai",
    "schema": {
      "type": "object",
      "title": "Input",
      "required": [
        "image_url"
      ],
      "linkto": {
        "*": "*"
      },
      "map": {
        "image_url": "images"
      },
      "translatable": [
        "negative_prompt"
      ],
      "speech_enabled": [
        "negative_prompt"
      ],
      "properties": {
        "effect": {
          "type": "string",
          "title": "Effect",
          "x-order": 1,
          "enum": [
            "Kiss Me AI",
            "Kiss",
            "Muscle Surge",
            "Warmth of Jesus",
            "Anything",
            "Robot",
            "The Tiger Touch",
            "Hug",
            "Holy Wings",
            "Hulk",
            "Venom",
            "Microwave",
            "Zombie Mode",
            "Squid Game",
            "Baby Face",
            "Black Myth: Wukong",
            "Long Hair Magic",
            "Leggy Run",
            "Fin-tastic Mermaid",
            "Punch Face",
            "Creepy Devil Smile",
            "Thunder God",
            "Eye Zoom Challenge",
            "Who's Arrested?",
            "Baby Arrived",
            "Werewolf Rage",
            "Bald Swipe",
            "BOOM DROP",
            "Huge Cutie",
            "Liquid Metal",
            "Sharksnap!",
            "Dust Me Away"
          ],
          "default": "Kiss Me AI",
          "value_action": "pass",
          "display": "hidden",
          "description": "The effect to apply to the video"
        },
        "image_url": {
          "type": "string",
          "title": "Image URL",
          "x-order": 2,
          "format": "uri",
          "fileType": "image",
          "description": "Optional URL of the image to use as the first frame. If not provided, generates from text"
        },
        "resolution": {
          "type": "string",
          "title": "Resolution",
          "x-order": 3,
          "enum": [
            "360p",
            "540p",
            "720p",
            "1080p"
          ],
          "default": "720p",
          "description": "The resolution of the generated video"
        },
        "duration": {
          "type": "string",
          "title": "Duration",
          "x-order": 4,
          "enum": [
            "5",
            "8"
          ],
          "default": "5",
          "display": "hidden",
          "description": "The duration of the generated video in seconds"
        },
        "negative_prompt": {
          "type": "string",
          "title": "Negative Prompt",
          "x-order": 5,
          "default": "",
          "maxLength": 1500,
          "description": "Negative prompt to be used for the generation"
        }
      }
    }
  },
  "videogen_templates/balloon_flyaway": {
    "name": "videogen_templates/balloon_flyaway",
    "schema": {
      "type": "object",
      "title": "Input",
      "required": [
        "template",
        "images",
        "prompt"
      ],
      "linkto": {
        "*": "*"
      },
      "map": {
        "images": "images"
      },
      "translatable": [
        "prompt"
      ],
      "speech_enabled": [
        "prompt"
      ],
      "properties": {
        "images": {
          "type": "array",
          "title": "Images",
          "x-order": 1,
          "items": {
            "type": "string",
            "fileType": "image",
            "format": "uri"
          },
          "maxItems": 1,
          "minItems": 1,
          "description": "Image URL or Base64 encoded image (PNG, JPEG, JPG, WebP). Must be at least 128x128px, aspect ratio between 1:4 and 4:1, and under 10MB"
        },
        "prompt": {
          "type": "string",
          "title": "Prompt",
          "x-order": 2,
          "default": "Video content\\n The subject in the image turns into a balloon and flies away while spinning.\\n# Requirements\\n1.Determine the style solely based on the image.\\n2.Determine the number of subjects based on the image, and each subject should turn into a balloon and fly away.",
          "maxLength": 1500,
          "description": "Text prompt for video generation"
        },
        "seed": {
          "type": "integer",
          "title": "Random Seed",
          "x-order": 3,
          "description": "Optional random seed for generation"
        }
      }
    }
  },
  "basicutils/arrayindexer": {
    "name": "basicutils/arrayindexer",
    "schema": {
      "type": "object",
      "title": "Input",
      "required": [
        "array",
        "index"
      ],
      "properties": {
        "array": {
          "type": "array",
          "title": "Array",
          "items": {
            "type": "string",
            "format": "uri"
          },
          "x-order": 0,
          "maxItems": 3,
          "description": "Array"
        },
        "index": {
          "type": "integer",
          "title": "Index",
          "x-order": 1,
          "description": "Index"
        }
      }
    }
  },
  "basicutils/arraybuilder": {
    "name": "basicutils/arraybuilder",
    "schema": {
      "type": "object",
      "title": "Input",
      "properties": {
        "array1": {
          "type": "string",
          "format": "uri",
          "title": "Array element 1",
          "fileType": "image",
          "x-order": 0,
          "description": "Array element 1"
        },
        "array2": {
          "type": "string",
          "format": "uri",
          "title": "Array element 2",
          "fileType": "image",
          "x-order": 1,
          "description": "Array element 2"
        },
        "array3": {
          "type": "string",
          "format": "uri",
          "title": "Array element 3",
          "fileType": "image",
          "x-order": 2,
          "description": "Array element 3"
        },
        "array4": {
          "type": "string",
          "format": "uri",
          "title": "Array element 4",
          "fileType": "image",
          "x-order": 3,
          "description": "Array element 4"
        }
      }
    }
  },
  "basicutils/imagecompositor": {
    "name": "basicutils/imagecompositor",
    "schema": {
      "type": "object",
      "title": "Input",
      "required": [
        "image1"
      ],
      "translatable": [],
      "speech_enabled": [],
      "linkto": {
        "*": "*"
      },
      "map": {},
      "properties": {
        "image1": {
          "type": "string",
          "title": "Base Layer",
          "format": "uri",
          "fileType": "image",
          "x-order": 0,
          "description": "Base layer image (bottom layer in composition)"
        },
        "image2": {
          "type": "string",
          "title": "Layer 2",
          "format": "uri",
          "fileType": "image",
          "x-order": 1,
          "description": "Second layer image (optional) - appears above base layer"
        },
        "image3": {
          "type": "string",
          "title": "Layer 3",
          "format": "uri",
          "fileType": "image",
          "x-order": 2,
          "description": "Third layer image (optional) - appears above previous layers"
        },
        "image4": {
          "type": "string",
          "title": "Layer 4",
          "format": "uri",
          "fileType": "image",
          "x-order": 3,
          "description": "Fourth layer image (optional) - appears above previous layers"
        },
        "image5": {
          "type": "string",
          "title": "Layer 5",
          "format": "uri",
          "fileType": "image",
          "x-order": 4,
          "description": "Fifth layer image (optional) - appears above previous layers"
        },
        "canvas_width": {
          "type": "integer",
          "title": "Canvas Width",
          "default": 1024,
          "minimum": 256,
          "maximum": 4096,
          "x-order": 5,
          "description": "Width of the output canvas in pixels"
        },
        "canvas_height": {
          "type": "integer",
          "title": "Canvas Height",
          "default": 1024,
          "minimum": 256,
          "maximum": 4096,
          "x-order": 6,
          "description": "Height of the output canvas in pixels"
        },
        "blend_mode": {
          "enum": [
            "over",
            "multiply",
            "screen",
            "overlay",
            "darken",
            "lighten",
            "color-dodge",
            "color-burn",
            "hard-light",
            "soft-light",
            "difference",
            "exclusion"
          ],
          "type": "string",
          "title": "Blend Mode",
          "default": "over",
          "x-order": 7,
          "description": "Blending mode for layers 2-5 (base layer always uses 'over')"
        },
        "output_format": {
          "enum": [
            "png",
            "jpg",
            "webp"
          ],
          "type": "string",
          "title": "Output Format",
          "default": "png",
          "x-order": 8,
          "description": "Format of the output image"
        }
      }
    }
  },
  "basicutils/audio_video_merge": {
    "name": "basicutils/audio_video_merge",
    "schema": {
      "type": "object",
      "title": "Input",
      "required": [
        "video_url",
        "audio_url"
      ],
      "properties": {
        "video_url": {
          "type": "string",
          "title": "Video URL",
          "description": "URL of the video file to use as the video track",
          "format": "uri",
          "fileType": "video",
          "x-order": 0
        },
        "audio_url": {
          "type": "string",
          "title": "Audio URL",
          "description": "URL of the audio file to use as the audio track",
          "format": "uri",
          "fileType": "audio",
          "x-order": 1
        },
        "start_offset": {
          "type": "number",
          "title": "Start Offset",
          "description": "Offset in seconds for when the audio should start relative to the video",
          "default": 0,
          "minimum": 0,
          "x-order": 2
        }
      }
    }
  },
  "basicutils/video_video_merge": {
    "name": "basicutils/video_video_merge",
    "schema": {
      "type": "object",
      "title": "Input",
      "required": [
        "video_urls"
      ],
      "properties": {
        "video_urls": {
          "type": "array",
          "title": "Video URLs",
          "description": "List of video URLs to merge in order",
          "items": {
            "type": "string",
            "format": "uri",
            "fileType": "video"
          },
          "maxItems": 10,
          "x-order": 0
        },
        "resolution": {
          "type": "string",
          "title": "Resolution",
          "description": "Resolution of the final video. Width and height must be between 512 and 2048.",
          "enum": [
            "square_hd",
            "square",
            "portrait_4_3",
            "portrait_16_9",
            "landscape_4_3",
            "landscape_16_9"
          ],
          "x-order": 2
        }
      }
    }
  },
  "textgen/gpt_4o_mini": {
    "name": "textgen/gpt_4o_mini",
    "schema": {
      "type": "object",
      "title": "Input",
      "linkto": {
        "*": "*"
      },
      "map": {
        "prompt": "prompt"
      },
      "properties": {
        "prompt": {
          "type": "string",
          "title": "Prompt",
          "x-order": 0,
          "description": "The prompt to send to the model. Do not use if using messages."
        },
        "image_input": {
          "type": "array",
          "items": {
            "type": "string",
            "format": "uri",
            "fileType": "image"
          },
          "title": "Image Input",
          "maxItems": 5,
          "x-order": 2,
          "description": "List of images to send to the model"
        },
        "system_prompt": {
          "type": "string",
          "title": "System Prompt",
          "x-order": 1,
          "description": "System prompt to set the assistant's behavior"
        },
        "reasoning_effort": {
          "enum": [
            "low",
            "medium",
            "high"
          ],
          "type": "string",
          "title": "reasoning_effort",
          "description": "Constrains effort on reasoning for reasoning models. Currently supported values are low, medium, and high. Reducing reasoning effort can result in faster responses and fewer tokens used on reasoning in a response.",
          "default": "medium",
          "x-order": 3
        },
        "max_completion_tokens": {
          "type": "integer",
          "title": "Max Completion Tokens",
          "default": 4096,
          "x-order": 4,
          "description": "Maximum number of completion tokens to generate"
        }
      }
    }
  },
  "textgen/openai_gpt5": {
    "name": "textgen/openai_gpt5",
    "schema": {
      "type": "object",
      "title": "Input",
      "linkto": {
        "*": "*"
      },
      "map": {
        "prompt": "prompt"
      },
      "properties": {
        "prompt": {
          "type": "string",
          "title": "Prompt",
          "x-order": 0,
          "description": "The prompt to send to the model. Do not use if using messages."
        },
        "image_input": {
          "type": "array",
          "items": {
            "type": "string",
            "format": "uri",
            "fileType": "image"
          },
          "title": "Image Input",
          "default": [],
          "x-order": 2,
          "maxItems": 5,
          "description": "List of images to send to the model"
        },
        "system_prompt": {
          "type": "string",
          "title": "System Prompt",
          "x-order": 1,
          "description": "System prompt to set the assistant's behavior"
        },
        "reasoning_effort": {
          "enum": [
            "minimal",
            "low",
            "medium",
            "high"
          ],
          "type": "string",
          "title": "reasoning_effort",
          "description": "Constrains effort on reasoning for reasoning models. Currently supported values are low, medium, and high. Reducing reasoning effort can result in faster responses and fewer tokens used on reasoning in a response.",
          "default": "medium",
          "x-order": 3
        },
        "max_completion_tokens": {
          "type": "integer",
          "title": "Max Completion Tokens",
          "default": 4096,
          "x-order": 4,
          "description": "Maximum number of completion tokens to generate"
        }
      }
    }
  },
  "textgen/workflow_designer": {
    "name": "textgen/workflow_designer",
    "schema": {
      "type": "object",
      "title": "Input",
      "linkto": {
        "*": "*"
      },
      "map": {
        "prompt": "prompt"
      },
      "properties": {
        "prompt": {
          "type": "string",
          "title": "Prompt",
          "x-order": 0,
          "description": "The prompt to send to the model. Do not use if using messages."
        },
        "image_input": {
          "type": "array",
          "items": {
            "type": "string",
            "format": "uri",
            "fileType": "image"
          },
          "title": "Image Input",
          "default": [],
          "x-order": 2,
          "maxItems": 5,
          "description": "List of images to send to the model"
        },
        "system_prompt": {
          "type": "string",
          "title": "System Prompt",
          "x-order": 1,
          "description": "System prompt to set the assistant's behavior"
        },
        "reasoning_effort": {
          "enum": [
            "minimal",
            "low",
            "medium",
            "high"
          ],
          "type": "string",
          "title": "reasoning_effort",
          "description": "Constrains effort on reasoning for reasoning models. Currently supported values are low, medium, and high. Reducing reasoning effort can result in faster responses and fewer tokens used on reasoning in a response.",
          "default": "medium",
          "x-order": 3
        },
        "max_completion_tokens": {
          "type": "integer",
          "title": "Max Completion Tokens",
          "default": 4096,
          "x-order": 4,
          "description": "Maximum number of completion tokens to generate"
        }
      }
    }
  }
}